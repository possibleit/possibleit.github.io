{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/yilia/source/slider.e37972.js","path":"slider.e37972.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.css","path":"main.0cf68a.css","modified":0,"renderable":1},{"_id":"themes/yilia/source/main.0cf68a.js","path":"main.0cf68a.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/mobile.992cbe.js","path":"mobile.992cbe.js","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","path":"fonts/default-skin.b257fa.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","path":"fonts/iconfont.16acc2.ttf","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","path":"fonts/tooltip.4004ff.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/default-skin.png","path":"img/default-skin.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","path":"fonts/iconfont.45d7ee.svg","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/preloader.gif","path":"img/preloader.gif","modified":0,"renderable":1},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","path":"img/scrollbar_arrow.png","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","path":"fonts/iconfont.8c627f.woff","modified":0,"renderable":1},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","path":"fonts/iconfont.b322fa.eot","modified":0,"renderable":1}],"Cache":[{"_id":"source/photos/lazyload.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1649858650000},{"_id":"themes/yilia/layout/_partial/toc.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1649775675996},{"_id":"source/about/index.md","hash":"0b57cf6226fc70eb7b0ae5edf66538b22fb589e4","modified":1649778984555},{"_id":"source/photos/README.md","hash":"28094abb40fa412512396c7b66e620069ce6da3c","modified":1649859360994},{"_id":"source/_posts/2022-04-13.md","hash":"23fa1903c009dc6f84beae4e2e79cb5f51d3a1a3","modified":1649862740225},{"_id":"source/photos/index.md","hash":"58ccfadbcb84f1575f73058a55d1f51494d353cc","modified":1649858128440},{"_id":"source/_posts/hahsmap.md","hash":"ec6e247774e69b51caadc7e238cea0deffbe270b","modified":1649858029855},{"_id":"source/photos/data.json","hash":"f3dccb680ba90ef3f3c6bb11a13c67bd5f48d78d","modified":1650129415642},{"_id":"source/tags/index.md","hash":"e1348200babb1214fef6d500a8a0b48ad0104d6f","modified":1649777881700},{"_id":"source/photos/index.ejs","hash":"24ca66a1225d7651c51fe9e8c64ea099278e23ed","modified":1649862350206},{"_id":"source/photos/ins.js","hash":"4a2fda853ae224ecf3f76fe4c68b82f76de4930b","modified":1650129392865},{"_id":"source/_posts/2022/04/overlay.md","hash":"7f60da21f0edb6b8f48fad8b12b6585da7e559db","modified":1651333794632},{"_id":"source/photos/ins.css","hash":"8c20f68a514bb8ff9a04207cf2f7d245710973c9","modified":1649858650000},{"_id":"source/_posts/2022/04/SDN.md","hash":"83102e92fa6595df0a58fa0a9059cdba48b0178e","modified":1650381234894},{"_id":"source/_posts/2022/04/分布式光伏.md","hash":"ee813e9609001ddc1b3fd30968f5b2b9d22c9bec","modified":1650381240382},{"_id":"source/_posts/2022/04/2022-04-17.md","hash":"a8cd88f2a78a7179daa26aa3a333feb8366fbfa6","modified":1650294026691},{"_id":"themes/yilia/.editorconfig","hash":"daaa8757fac18f8735fadd0a37a42c06f421ca14","modified":1649775675939},{"_id":"themes/yilia/.babelrc","hash":"db600d40e93e6d8023737a65d58d3be7370e5e30","modified":1649775675930},{"_id":"themes/yilia/.gitattributes","hash":"758cfbecfa7919e99abddf3297f37cde7e3d8d4e","modified":1649775675942},{"_id":"themes/yilia/.gitignore","hash":"d5fc575329853ff620b50fc62ad4b18fa09a308a","modified":1649775675943},{"_id":"themes/yilia/package.json","hash":"ee6aa61f1cb89fd549e3e087c0232207a9c9ee30","modified":1649775676008},{"_id":"themes/yilia/.eslintignore","hash":"ed9d8911ca08c3dd5072c48dd0be4d06f8897730","modified":1649775675940},{"_id":"source/_posts/2022/04/blog.md","hash":"14ddc53ba48eacca07d91f7a9a014a2caddfacd7","modified":1651161385856},{"_id":"themes/yilia/_config.yml","hash":"cfd54c17fc08a55a3314de3e66ceeb83c63664b3","modified":1650124597025},{"_id":"themes/yilia/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1649775675948},{"_id":"themes/yilia/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1649775675952},{"_id":"themes/yilia/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1649775675953},{"_id":"themes/yilia/languages/fr.yml","hash":"b4be1c1592a72012e48df2b3ec41cc9685573e50","modified":1649775675949},{"_id":"themes/yilia/README.md","hash":"1bf755806af9d8874bd22e1abbdaaa24328ef4dc","modified":1649775675944},{"_id":"themes/yilia/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1649775675950},{"_id":"themes/yilia/languages/zh-tw.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1649775675954},{"_id":"themes/yilia/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1649775675951},{"_id":"themes/yilia/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1649775676001},{"_id":"themes/yilia/layout/index.ejs","hash":"ec498c6c0606acde997ce195dad97b267418d980","modified":1649775676003},{"_id":"themes/yilia/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1649775676002},{"_id":"themes/yilia/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1649775676007},{"_id":"themes/yilia/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1649775676005},{"_id":"themes/yilia/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1649775676006},{"_id":"themes/yilia/webpack.config.js","hash":"da7657347109ddb4ab8602b219778117254677fe","modified":1649775676218},{"_id":"themes/yilia/.eslintrc.js","hash":"303d25adf02ad65720e537a16a4a137d14bb755f","modified":1649775675941},{"_id":"themes/yilia/source-src/css.ejs","hash":"cf7eab48d626433120d1ef9697f719a359817018","modified":1649775676010},{"_id":"themes/yilia/layout/layout.ejs","hash":"b471ab706d48e0be3f783eab1c94bf5878ef5a94","modified":1649775676004},{"_id":"themes/yilia/source/main.0cf68a.css","hash":"055ffa81b21def1348bc9b77d1791ecf26b3d3c7","modified":1649857449763},{"_id":"themes/yilia/source-src/script.ejs","hash":"28abac2426761d7e715b38aadd86ce6549c8ae77","modified":1649775676186},{"_id":"themes/yilia/layout/_partial/after-footer.ejs","hash":"c70f367f54064a441e574c913f5e0ea121d0f899","modified":1649775675956},{"_id":"themes/yilia/layout/_partial/archive-post.ejs","hash":"edc0154b30a4127acda10297bec6aacf754b4ac4","modified":1649775675956},{"_id":"themes/yilia/source/slider.e37972.js","hash":"ce5eac88301fe4f2fce0fb6203adfd58eb8313ac","modified":1649775676206},{"_id":"themes/yilia/layout/_partial/archive.ejs","hash":"a4eacc2bc1278095a0ef99f904b0634c78f980eb","modified":1649775675957},{"_id":"themes/yilia/layout/_partial/aside.ejs","hash":"751e5deab5365348be5243688b419c82d337ab9a","modified":1649775675967},{"_id":"themes/yilia/layout/_partial/css.ejs","hash":"236f8a377b2e4e35754319c3029bcd4a4115431d","modified":1649775675969},{"_id":"themes/yilia/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1649775675968},{"_id":"themes/yilia/layout/_partial/footer.ejs","hash":"871f81cacd5d41cb2eb001cd56254217a857dc2f","modified":1649775675970},{"_id":"themes/yilia/layout/_partial/left-col.ejs","hash":"fb1b8457b9eb15b55da1bf7b133e12c375dd26f8","modified":1649775675975},{"_id":"themes/yilia/layout/_partial/mathjax.ejs","hash":"11550a418921d330e6553be0569a94ab5a217967","modified":1649775675977},{"_id":"themes/yilia/layout/_partial/article.ejs","hash":"8dea8f5f93a60185439b330b0f1d1649a6ab4bd0","modified":1649775675958},{"_id":"themes/yilia/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1649775675971},{"_id":"themes/yilia/layout/_partial/mobile-nav.ejs","hash":"ccec1fc70f021cb50ac85b524e7949878ab93a18","modified":1649775675977},{"_id":"themes/yilia/layout/_partial/viewer.ejs","hash":"cc1c39903aed0a0601d104238d2bbd13ad2a36f3","modified":1649775675999},{"_id":"themes/yilia/layout/_partial/header.ejs","hash":"b69855e07b65117769adc515cb64b803932068c9","modified":1649775675973},{"_id":"themes/yilia/layout/_partial/head.ejs","hash":"12ca7d8dba56bc767b9309dda9526dcbaffc1614","modified":1649775675972},{"_id":"themes/yilia/source/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1649775676189},{"_id":"themes/yilia/source/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1649775676195},{"_id":"themes/yilia/source/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1649775676190},{"_id":"themes/yilia/layout/_partial/tools.ejs","hash":"0ffcb251b79e8a920c9b4cb6bb7a96a808816165","modified":1649775675998},{"_id":"themes/yilia/source/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1649775676197},{"_id":"themes/yilia/source/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1649775676197},{"_id":"themes/yilia/source/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1649775676199},{"_id":"themes/yilia/source-src/css/_core.scss","hash":"29ba600e98ed55f7af4ade8038272c84cba21188","modified":1649775676011},{"_id":"themes/yilia/source/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1649775676192},{"_id":"themes/yilia/source-src/css/archive.scss","hash":"d6a7dd88404b383b5b94e4c7ec675a410c41f3cc","modified":1649775676013},{"_id":"themes/yilia/source-src/css/_function.scss","hash":"ce227b6f5a9af194fd5d455200630f32c05e151f","modified":1649775676011},{"_id":"themes/yilia/source/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1649775676194},{"_id":"themes/yilia/source/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1649775676193},{"_id":"themes/yilia/source-src/css/article-main.scss","hash":"1577a2336b3ad122f49f60dff2bc1a97d4e7b18b","modified":1649775676014},{"_id":"themes/yilia/source-src/css/comment.scss","hash":"b85f344f2c66d43d7094746e0a9ccb21d0534201","modified":1649775676026},{"_id":"themes/yilia/source-src/css/aside.scss","hash":"07244c188f58ecfb90bb7c047b8cde977f1dc4b4","modified":1649775676025},{"_id":"themes/yilia/source-src/css/article-nav.scss","hash":"8f82fe898ba1c1bd00c24a7d8270feddc7eba3bc","modified":1649775676023},{"_id":"themes/yilia/source-src/css/fonts.scss","hash":"96d7eb1d42c06fdcccb8ef969f6ecd30c3194903","modified":1649775676054},{"_id":"themes/yilia/source-src/css/article-inner.scss","hash":"f7388f5c11370ef462f7cb913d8f72edf24ecaf9","modified":1649775676014},{"_id":"themes/yilia/source-src/css/footer.scss","hash":"7ca837a4cc34db1c35f01baec85eb10ccc64ea86","modified":1649775676062},{"_id":"themes/yilia/source-src/css/global.scss","hash":"b4cb4f45a55d4250cd9056f76dab2a3c0dabcec4","modified":1649775676063},{"_id":"themes/yilia/source-src/css/grid.scss","hash":"f53ea8270752b5919ec5d79224d22af91f2eda12","modified":1649775676064},{"_id":"themes/yilia/source-src/css/highlight.scss","hash":"40e5aa5056dc0b3b9f51c5b387370b612e265d4e","modified":1649775676065},{"_id":"themes/yilia/source-src/css/main.scss","hash":"9eba1fcf4805256697528fcf3b767cf6dd8d0591","modified":1649775676071},{"_id":"themes/yilia/source-src/css/article.scss","hash":"55d082fec4c6bb341725567acaa29ce37d50320a","modified":1649775676024},{"_id":"themes/yilia/source-src/css/left.scss","hash":"80dac621e43581a254d0152d5df901e4d0b01c09","modified":1649775676070},{"_id":"themes/yilia/source-src/css/mobile-slider.scss","hash":"19f10fd2f0c3377aa4b165b3c2291ecf86dd9351","modified":1649775676072},{"_id":"themes/yilia/source-src/css/page.scss","hash":"244c4d75c375978ff9edb74acc68825e63c6b235","modified":1649775676082},{"_id":"themes/yilia/source-src/css/mobile.scss","hash":"d995dcd483a250fe61b426158afb61bf8923a927","modified":1649775676081},{"_id":"themes/yilia/source-src/css/reward.scss","hash":"a557a9ed244c82b8b71e9da9de3339d92783499f","modified":1649775676083},{"_id":"themes/yilia/source-src/css/scroll.scss","hash":"2495f7e4e3b055735c531f944b5f40a118a351ec","modified":1649775676084},{"_id":"themes/yilia/source-src/css/tags.scss","hash":"915c93edd67c5326695cc7dc84b14c5f154dbcc8","modified":1649775676145},{"_id":"themes/yilia/source-src/css/tools.scss","hash":"2924fb6f77c4a9973cd928c2c7db0acb848ed483","modified":1649775676146},{"_id":"themes/yilia/source-src/css/social.scss","hash":"a10a038a1dac8953cb4ffc7e04272eff9fac54e4","modified":1649775676086},{"_id":"themes/yilia/source-src/css/tooltip.scss","hash":"b81cedbe31accca82e597801186911a7b5e6841c","modified":1649775676147},{"_id":"themes/yilia/source-src/css/share.scss","hash":"9d6f6884f40c191882e56a1e1e1192400944a515","modified":1649775676085},{"_id":"themes/yilia/source-src/css/tags-cloud.scss","hash":"399744e98e7c67939ed9b23c2670d8baad044eda","modified":1649775676108},{"_id":"themes/yilia/source-src/js/browser.js","hash":"4dc04845cf27f350922b63f1813a9c82e6e33b05","modified":1649775676152},{"_id":"themes/yilia/source-src/js/anm.js","hash":"d18f6276a352b871390a4112d479b9e58b8cdbbe","modified":1649775676150},{"_id":"themes/yilia/source-src/js/aside.js","hash":"5e4c3c3d61f1e1ce2f09688d3aff25fadc851fff","modified":1649775676151},{"_id":"themes/yilia/source-src/js/fix.js","hash":"67b8819abb886c9d066fb3b0624ca15e06f63fe0","modified":1649775676153},{"_id":"themes/yilia/source-src/js/Q.js","hash":"e56d9710afa79b31ca6b9fbd845f6d1895f5214b","modified":1649775676149},{"_id":"themes/yilia/source-src/js/mobile.js","hash":"461c08ffcbc724d74ec7e0ff38e171eefe0f89fd","modified":1649775676155},{"_id":"themes/yilia/source-src/js/main.js","hash":"fe98bf90ce61658fe16ae057f8b6a512a845af3b","modified":1649775676154},{"_id":"themes/yilia/source-src/js/share.js","hash":"d4ccff8266c37363b3904226f5d035b7db882c61","modified":1649775676158},{"_id":"themes/yilia/source-src/js/viewer.js","hash":"c699cf3c89409ec8f044258e0715a470861b5d5d","modified":1649775676160},{"_id":"themes/yilia/source-src/js/util.js","hash":"3bcdeb95072b85600874424e6929e3e22cfddaa0","modified":1649775676160},{"_id":"themes/yilia/source-src/js/report.js","hash":"57680f9a23bd0a1eaafd64ae08cc33e20627ab15","modified":1649775676156},{"_id":"themes/yilia/source-src/js/slider.js","hash":"0beaa112657ad57c723d9e773d5b79de60c1dd74","modified":1649775676159},{"_id":"themes/yilia/source-src/css/core/_animation.scss","hash":"1834c3ed8560716e63bb3a50be94cac87fbbeaf3","modified":1649775676028},{"_id":"themes/yilia/source-src/css/core/_media-queries.scss","hash":"262ffcd88775080b7f511db37f58d2bcb1b2bfc7","modified":1649775676029},{"_id":"themes/yilia/source-src/css/fonts/iconfont.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1649775676056},{"_id":"themes/yilia/source-src/css/fonts/iconfont.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1649775676059},{"_id":"themes/yilia/source-src/css/fonts/iconfont.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1649775676058},{"_id":"themes/yilia/source-src/css/fonts/iconfont.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1649775676061},{"_id":"themes/yilia/source-src/css/core/_reset.scss","hash":"398a49913b4a47d928103562b1ce94520be4026a","modified":1649775676033},{"_id":"themes/yilia/source-src/css/core/_variables.scss","hash":"6e75bdaa46de83094ba0873099c6e7d656a22453","modified":1649775676052},{"_id":"themes/yilia/source-src/css/core/_mixin.scss","hash":"91db061c9c17628291a005e5bd4936cf9d35a6c4","modified":1649775676031},{"_id":"themes/yilia/layout/_partial/post/date.ejs","hash":"aae96de18d48cd3b9b7bf6fed0100e15b53cca97","modified":1649775675980},{"_id":"themes/yilia/layout/_partial/post/category.ejs","hash":"e777cbf959b11c4dfda649c562799899b90ab4a3","modified":1649775675979},{"_id":"themes/yilia/layout/_partial/post/gitment.ejs","hash":"25655016773aa5d0774c56115ae1736a9fc9ea1f","modified":1649775675982},{"_id":"themes/yilia/layout/_partial/post/changyan.ejs","hash":"086c8a88fd3bcae7ec13258df58e25d6354af2fa","modified":1649775675979},{"_id":"themes/yilia/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1649775675986},{"_id":"themes/yilia/source-src/css/img/tooltip.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1649775676069},{"_id":"themes/yilia/layout/_partial/post/tag.ejs","hash":"2c4e4ca36c9bb4318506c38aca7127f1f44d827f","modified":1649775675985},{"_id":"themes/yilia/layout/_partial/post/nav.ejs","hash":"b6a97043f9ec37e571aacacfedcda1d4d75e3c7c","modified":1649775675983},{"_id":"themes/yilia/source-src/css/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1649775676068},{"_id":"themes/yilia/source-src/css/img/checkered-pattern.png","hash":"049262fa0886989d750637b264bed34ab51c23c8","modified":1649775676067},{"_id":"themes/yilia/source/main.0cf68a.js","hash":"283ae27ea37ac3e0e45b2e05c2482a4c594b9c25","modified":1649775676202},{"_id":"themes/yilia/source/mobile.992cbe.js","hash":"1801ef448909ea23c0a48e9d63b80d0cfd5534ce","modified":1649775676204},{"_id":"themes/yilia/layout/_partial/post/wangyiyun.ejs","hash":"fb022502c741b4a26bad6b2ad37245c10ede3f1a","modified":1649775675987},{"_id":"themes/yilia/layout/_partial/script.ejs","hash":"e98ec0b3b56f14d1d79af99ceb42727719a584f3","modified":1649775675996},{"_id":"themes/yilia/layout/_partial/post/duoshuo.ejs","hash":"f6b4c4eaafb5ac386273354b5f64a26139b7a3b0","modified":1649775675981},{"_id":"themes/yilia/layout/_partial/post/share.ejs","hash":"345b262e3c3b75c0cd9a93d9ecabcf06e33e54ff","modified":1649775675984},{"_id":"public/photos/data.json","hash":"fd6e23e8ea5470754a8833db7e056989c0f979c7","modified":1650554399105},{"_id":"public/photos/ins.css","hash":"8c20f68a514bb8ff9a04207cf2f7d245710973c9","modified":1650554399105},{"_id":"public/photos/ins.js","hash":"4a2fda853ae224ecf3f76fe4c68b82f76de4930b","modified":1650554399105},{"_id":"public/photos/lazyload.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1650554399105},{"_id":"public/content.json","hash":"c98ffcd14914b412940baf78650a7034001d2b5a","modified":1664087792156},{"_id":"public/about/index.html","hash":"bfd183e4d12bf5bc618e9f353fa892ec54da3476","modified":1653491351525},{"_id":"public/photos/README.html","hash":"7a0cc7832c36d7cd9db357b153c951f183ad6a56","modified":1653491351525},{"_id":"public/photos/index.html","hash":"eec2a92914f7fa1a74e4d6bfc8747fd0b82431e6","modified":1653491351525},{"_id":"public/tags/index.html","hash":"2e57e1027ccbd0685ffdd4bfe95c0e78429154df","modified":1653491351525},{"_id":"public/2022/04/19/overlay/index.html","hash":"d7f10bef301771d570ca44d931d2239fa549fe2d","modified":1653491351525},{"_id":"public/2022/04/19/SDN/index.html","hash":"24010ba512bd72265a1526363f045b020496c9d6","modified":1653491351525},{"_id":"public/2022/04/18/分布式光伏/index.html","hash":"be6ae4c7836ff196283e181679f3cad6857103db","modified":1653491351525},{"_id":"public/2022/04/17/2022-04-17/index.html","hash":"ad1ba7a117ff79a28b63bbd2fe5ffe83120a39cf","modified":1653491351525},{"_id":"public/2022/04/17/blog/index.html","hash":"b793393932126e39038cecfb7f1fb40d7c01eca6","modified":1653491351525},{"_id":"public/2022/04/12/2022-04-13/index.html","hash":"d3cfc1b96ee774436713f2974f090eedfea5708d","modified":1653491351525},{"_id":"public/2022/04/12/hahsmap/index.html","hash":"86c51c8fdd220fad15827bc90439bb8d9ef70acf","modified":1653491351525},{"_id":"public/archives/index.html","hash":"d03e4a3b405c2aa7458d3b231b0cb0cf78106690","modified":1664087792156},{"_id":"public/archives/2022/index.html","hash":"568703920c7d757aa2a7fa5ad3e125a94e26d127","modified":1664087792156},{"_id":"public/archives/2022/04/index.html","hash":"d2360f997aad21bf2d4819eb2bc297dc7588c6b0","modified":1653491351525},{"_id":"public/index.html","hash":"ba4a3d48a5bddd880c2e799c5288e6a09e54bbbf","modified":1664087792156},{"_id":"public/tags/essay/index.html","hash":"7fe277163300b7a2b57f8e55bda67ec2c148cf60","modified":1662821580250},{"_id":"public/tags/java/index.html","hash":"997afd8a73beac5b58491264020336404cd02226","modified":1653491351525},{"_id":"public/tags/web/index.html","hash":"73e86a212499743e93fb683e263d19bda8ab3b14","modified":1653491351525},{"_id":"public/tags/grid/index.html","hash":"e700b3557778e1d4da23563aab8f3aae8a481cc6","modified":1653491351525},{"_id":"public/fonts/tooltip.4004ff.svg","hash":"397fe4b1093bf9b62457dac48aa15dac06b54a3c","modified":1650554399105},{"_id":"public/img/default-skin.png","hash":"ed95a8e40a2c3478c5915376acb8e5f33677f24d","modified":1650554399105},{"_id":"public/fonts/default-skin.b257fa.svg","hash":"2ac727c9e092331d35cce95af209ccfac6d4c7c7","modified":1650554399105},{"_id":"public/fonts/iconfont.16acc2.ttf","hash":"f342ac8bf4d937f42a7d6a0032ad267ab47eb7f2","modified":1650554399105},{"_id":"public/fonts/iconfont.45d7ee.svg","hash":"75767c904d483d9b93469afb6b92bb6bdface639","modified":1650554399105},{"_id":"public/img/preloader.gif","hash":"6342367c93c82da1b9c620e97c84a389cc43d96d","modified":1650554399105},{"_id":"public/img/scrollbar_arrow.png","hash":"d64a33c4ddfbdb89deeb6f4e3d36eb84dc4777c0","modified":1650554399105},{"_id":"public/fonts/iconfont.8c627f.woff","hash":"aa9672cb097f7fd73ae5a03bcd3d9d726935bc0a","modified":1650554399105},{"_id":"public/fonts/iconfont.b322fa.eot","hash":"bc8c5e88f4994a852041b4d83f126d9c4d419b4a","modified":1650554399105},{"_id":"public/slider.e37972.js","hash":"6dec4e220c89049037eebc44404abd8455d22ad7","modified":1650554399105},{"_id":"public/main.0cf68a.css","hash":"055ffa81b21def1348bc9b77d1791ecf26b3d3c7","modified":1650554399105},{"_id":"public/main.0cf68a.js","hash":"993fadeb5f6d296e9d997a49ee20dc97333ceab7","modified":1650554399105},{"_id":"public/mobile.992cbe.js","hash":"01b35e71e37aa2849664eb5daf26daede2278398","modified":1650554399105},{"_id":"source/_posts/2022/04/GRE.md","hash":"bcece86fb5ccaf100f846f7735721697f4d51d5c","modified":1650726370908},{"_id":"source/_posts/2022/04/IPSec.md","hash":"2f67a442c84179e855ba1418e69c9bfffee8cae9","modified":1650726361440},{"_id":"public/2022/04/23/IPSec/index.html","hash":"60897b4f737c52cfced3162f5528ab01575dfce4","modified":1653491351525},{"_id":"public/2022/04/20/GRE/index.html","hash":"c25a3f4983862e458e1f4cfb23c82bdbc07b0574","modified":1653491351525},{"_id":"source/_posts/2022/04/OTN.md","hash":"89c197f3d3e7b8274e037c7d0c0f2064a12bc762","modified":1651766522050},{"_id":"public/2022/04/27/OTN/index.html","hash":"f3fe0103a00c30bc6019fe52e43b12ab41026882","modified":1653491351525},{"_id":"public/tags/通信/index.html","hash":"a9889949d2612504e828d82e0c7bd57221326cec","modified":1653925489739},{"_id":"source/_posts/2022/05/2022-05-04.md","hash":"b58cdabf1cccfb2bced342c794ee527010576030","modified":1651667962214},{"_id":"public/2022/05/04/2022-05-04/index.html","hash":"b32dabad3e4fd943ca0092f5704bf08d1e7544fa","modified":1653491351525},{"_id":"public/page/2/index.html","hash":"0dd8ce60fb4fe696a2a34d728e8e502c14b1f478","modified":1664087792156},{"_id":"public/archives/page/2/index.html","hash":"8f7e3115914c2e81903a84c9b9e19597b60346ac","modified":1664087792156},{"_id":"public/archives/2022/page/2/index.html","hash":"68722361e36ddca08d75435685d37d58fdd78f59","modified":1664087792156},{"_id":"public/archives/2022/05/index.html","hash":"69efbc2634eec410e8a2e2d2b3c93781d82e1bf7","modified":1653925489739},{"_id":"source/_drafts/love-story.md","hash":"573f93b5761142b76c3afda152a660a4050f0bed","modified":1653145621321},{"_id":"source/_posts/2022/05/脱稿讲话即兴发言.md","hash":"ed4f9702431749e44c338177c7346456413def63","modified":1656232117119},{"_id":"public/2022/05/25/脱稿讲话即兴发言/index.html","hash":"04069189f056a909f36e43353d0c3e5a9d859395","modified":1656232147948},{"_id":"public/tags/else/index.html","hash":"aec6111cbac2406730d9e456de0c2cdcdbecffb7","modified":1653491351525},{"_id":"source/_posts/2022/05/2022-05-29.md","hash":"d1a88b5fd20791cd84d31291f42fa0c43cdfa21f","modified":1653838096617},{"_id":"public/2022/05/29/2022-05-29/index.html","hash":"c88f8fbc0ed7bbcc0ae85378cfeccb1255e0821b","modified":1653925489739},{"_id":"source/_posts/2022/05/什么是CAT1.md","hash":"ec5db49c514729f70ed7b28ab6cc77631246d984","modified":1653925478767},{"_id":"public/2022/05/30/什么是CAT1/index.html","hash":"44db3e112ff68c8000fd6687e902326a2acdac54","modified":1654704198152},{"_id":"source/_posts/2022/06/你当像鸟飞往你的山-记录.md","hash":"b1dd7571bfaa3c076a53ac7bf5557d81b5c56aec","modified":1654704199488},{"_id":"public/2022/06/09/你当像鸟飞往你的山-记录/index.html","hash":"c01b1a267e713e42af505897adbeaea2ec69d773","modified":1656840879582},{"_id":"public/archives/2022/06/index.html","hash":"8ffb2fbca0852c858deac63194ce72d23819d3bb","modified":1656840879582},{"_id":"source/_posts/2022/07/乡土中国之差序格局.md","hash":"5909db19377d6ca49add7fecbf4a86557740297b","modified":1656858823381},{"_id":"source/_posts/2022/06/公式之美.md","hash":"deb2e345a8c0084c941ef2de5672026241d4fc69","modified":1656840708252},{"_id":"public/2022/07/03/乡土中国之差序格局/index.html","hash":"60637b78a0d755e7593eba724f8313cdc2db0bc3","modified":1662821580250},{"_id":"public/2022/06/26/公式之美/index.html","hash":"32b77f6eb93a7010a735d7ca0d14363814be7617","modified":1656840879582},{"_id":"public/archives/2022/07/index.html","hash":"fb16359189ef4d8b71d6d12e865bb8ce921cf060","modified":1662821580250},{"_id":"source/_posts/2022/07/乡土中国之差序格局2.md","hash":"ac1dc07f33f4263df5139f3500e7b3cf32613444","modified":1662821581606},{"_id":"source/_posts/2022/09/摄影教程01.md","hash":"0caf256dbff73ab918c74deb68f1fe59c3ade632","modified":1664035902556},{"_id":"public/2022/09/10/摄影教程01/index.html","hash":"1285c79875e28065d8224c8eb10e5c1e293cc69c","modified":1664087792156},{"_id":"public/2022/07/03/乡土中国之差序格局2/index.html","hash":"1ba381190cc06950965f55cce1b293f997a089e6","modified":1662821699417},{"_id":"public/archives/2022/09/index.html","hash":"1d36c947bf3bc68350de44188dc59808b9d8c4e3","modified":1664087792156},{"_id":"source/_posts/2022/09/摄影教程02.md","hash":"ac300975b138ec1d0a80844c5b598192fd4742eb","modified":1664083693262},{"_id":"public/2022/09/25/摄影教程02/index.html","hash":"d8a63f6fb89d82d73b54f320096efefaeb4f666e","modified":1664087792156}],"Category":[],"Data":[],"Page":[{"title":"about","date":"2022-04-12T15:48:48.000Z","_content":"\n\n# 这就是我\n\n\n\n我是Possibleit，一个普通的计算机本科毕业生，一个正在学习、成长的年轻人。\n\n<a target=\"_blank\" href=\"https://github.com/possibleit\" class=\"btn btn-dark\"> To My Github </a>\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-04-12 23:48:48\n---\n\n\n# 这就是我\n\n\n\n我是Possibleit，一个普通的计算机本科毕业生，一个正在学习、成长的年轻人。\n\n<a target=\"_blank\" href=\"https://github.com/possibleit\" class=\"btn btn-dark\"> To My Github </a>\n\n","updated":"2022-04-12T15:56:24.555Z","path":"about/index.html","comments":1,"layout":"page","_id":"cl295h2640000j8ucd3uxhtk8","content":"<h1 id=\"这就是我\"><a href=\"#这就是我\" class=\"headerlink\" title=\"这就是我\"></a>这就是我</h1><p>我是Possibleit，一个普通的计算机本科毕业生，一个正在学习、成长的年轻人。</p>\n<p><a target=\"_blank\" href=\"https://github.com/possibleit\" class=\"btn btn-dark\"> To My Github </a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"这就是我\"><a href=\"#这就是我\" class=\"headerlink\" title=\"这就是我\"></a>这就是我</h1><p>我是Possibleit，一个普通的计算机本科毕业生，一个正在学习、成长的年轻人。</p>\n<p><a target=\"_blank\" href=\"https://github.com/possibleit\" class=\"btn btn-dark\"> To My Github </a></p>\n"},{"_content":"#### 我的Github PAGE备份\n\n1. 这是我的GithubPage备份，点击访问[网址](https://possibleit.github.io/)\n\n2. ","source":"photos/README.md","raw":"#### 我的Github PAGE备份\n\n1. 这是我的GithubPage备份，点击访问[网址](https://possibleit.github.io/)\n\n2. ","date":"2022-04-13T14:16:00.994Z","updated":"2022-04-13T14:16:00.994Z","path":"photos/README.html","title":"","comments":1,"layout":"page","_id":"cl295h27a0002j8uc85d96j3a","content":"<h4 id=\"我的Github-PAGE备份\"><a href=\"#我的Github-PAGE备份\" class=\"headerlink\" title=\"我的Github PAGE备份\"></a>我的Github PAGE备份</h4><ol>\n<li><p>这是我的GithubPage备份，点击访问<a href=\"https://possibleit.github.io/\">网址</a></p>\n</li>\n<li></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"我的Github-PAGE备份\"><a href=\"#我的Github-PAGE备份\" class=\"headerlink\" title=\"我的Github PAGE备份\"></a>我的Github PAGE备份</h4><ol>\n<li><p>这是我的GithubPage备份，点击访问<a href=\"https://possibleit.github.io/\">网址</a></p>\n</li>\n<li></li>\n</ol>\n"},{"_content":"{\"list\": [{\"date\": \"2020-06\", \"arr\": {\"year\": 2020, \"month\": 6, \"link\": [\"2020-06-27_\\u9f99\\u95e8.jpg\"], \"text\": [\"\\u9f99\\u95e8\"], \"type\": [\"image\"]}}]}","source":"photos/data.json","raw":"{\"list\": [{\"date\": \"2020-06\", \"arr\": {\"year\": 2020, \"month\": 6, \"link\": [\"2020-06-27_\\u9f99\\u95e8.jpg\"], \"text\": [\"\\u9f99\\u95e8\"], \"type\": [\"image\"]}}]}","date":"2022-04-16T17:16:55.642Z","updated":"2022-04-16T17:16:55.642Z","path":"photos/data.json","layout":"false","title":"","comments":1,"_id":"cl295h27e0005j8uc3byignk6","content":"{\"list\":[{\"date\":\"2020-06\",\"arr\":{\"year\":2020,\"month\":6,\"link\":[\"2020-06-27_龙门.jpg\"],\"text\":[\"龙门\"],\"type\":[\"image\"]}}]}","site":{"data":{}},"excerpt":"","more":"{\"list\":[{\"date\":\"2020-06\",\"arr\":{\"year\":2020,\"month\":6,\"link\":[\"2020-06-27_龙门.jpg\"],\"text\":[\"龙门\"],\"type\":[\"image\"]}}]}"},{"layout":"post","slug":"photos","title":"相册","noDate":"true","abbrlink":39205,"_content":"<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n\t<a class=\"photos-btn active\" href=\"javascript:void(0)\"></a>Github</a>\n</div>\n<div class=\"instagram itemscope\">\n\t<a href=\"https://www.instagram.com/litten225/\" target=\"_blank\" class=\"open-ins\">图片来自Github，正在加载中…</a>\n</div>\n<script>\n  (function() {\n    var loadScript = function(path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function() {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>\n","source":"photos/index.ejs","raw":"---\nlayout: post\nslug: photos\ntitle: 相册\nnoDate: 'true'\nabbrlink: 39205\n---\n<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n\t<a class=\"photos-btn active\" href=\"javascript:void(0)\"></a>Github</a>\n</div>\n<div class=\"instagram itemscope\">\n\t<a href=\"https://www.instagram.com/litten225/\" target=\"_blank\" class=\"open-ins\">图片来自Github，正在加载中…</a>\n</div>\n<script>\n  (function() {\n    var loadScript = function(path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function() {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>\n","date":"2022-04-13T15:05:50.206Z","updated":"2022-04-13T15:05:50.206Z","path":"photos/index.html","comments":1,"_id":"cl295h27f0007j8uc5yty16cs","content":"<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n\t<a class=\"photos-btn active\" href=\"javascript:void(0)\"></a>Github</a>\n</div>\n<div class=\"instagram itemscope\">\n\t<a href=\"https://www.instagram.com/litten225/\" target=\"_blank\" class=\"open-ins\">图片来自Github，正在加载中…</a>\n</div>\n<script>\n  (function() {\n    var loadScript = function(path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function() {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>\n","site":{"data":{}},"excerpt":"","more":"<link rel=\"stylesheet\" href=\"./ins.css\">\n<div class=\"photos-btn-wrap\">\n\t<a class=\"photos-btn active\" href=\"javascript:void(0)\"></a>Github</a>\n</div>\n<div class=\"instagram itemscope\">\n\t<a href=\"https://www.instagram.com/litten225/\" target=\"_blank\" class=\"open-ins\">图片来自Github，正在加载中…</a>\n</div>\n<script>\n  (function() {\n    var loadScript = function(path) {\n      var $script = document.createElement('script')\n      document.getElementsByTagName('body')[0].appendChild($script)\n      $script.setAttribute('src', path)\n    }\n    setTimeout(function() {\n      loadScript('./ins.js')\n    }, 0)\n  })()\n</script>\n"},{"title":"photos","date":"2022-04-13T13:55:28.000Z","_content":"","source":"photos/index.md","raw":"---\ntitle: photos\ndate: 2022-04-13 21:55:28\n---\n","updated":"2022-04-13T13:55:28.440Z","path":"photos/index.html","comments":1,"layout":"page","_id":"cl295h27h0009j8ucb746gdp1","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"#post-instagram{\n\tpadding: 30px;\n}\n#post-instagram .article-entry{\n\tpadding-right: 0;\n}\n.instagram{\n\tposition: relative;\n\tmin-height: 500px;\n}\n.instagram img {\n\twidth: 100%;\n}\n.instagram .year {\n\tfont-size: 16px;\n}\n.instagram .open-ins{\n\tpadding: 10px 0;\n\tcolor: #cdcdcd;\n}\n.instagram .open-ins:hover{\n\tcolor: #657b83;\n}\n.instagram .year{\n\tdisplay: inline;\n}\n.instagram .thumb {\n\twidth: 25%;\n\theight: 0;\n\tpadding-bottom: 25%;\n\tposition: relative;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tbackground: #ededed;\n}\n.instagram .thumb a {\n\tposition: relative;\n}\n.instagram .album h1 em{\n\tfont-style: normal;\n\tfont-size: 14px;\n\tmargin-left: 10px;\n}\n.instagram .album ul{\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tclear: both;\n\twidth: 100%;\n\ttext-align: left;\n}\n.instagram .album li{\n\tlist-style: none;\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 5px;\n\tmargin-bottom: -10px;\n\theight: 0;\n\twidth: 25%;\n\tposition: relative;\n\tpadding-bottom: 25%;\n}\n.instagram .album li:before{\n\tdisplay: none;\n}\n.instagram .album div.img-box{\n\tposition: absolute;\n\twidth: 90%;\n\theight: 90%;\n\t-webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\t-moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\tbox-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n}\n.instagram .album div.img-box img{\n\twidth: 100%;\n\theight: 100%;\n    position: absolute;\n    z-index: 2;\n}\n.instagram .album div.img-box .img-bg{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0px;\n\twidth: 100%;\n\tmargin: -5px;\n\tpadding: 5px;\n\t-webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\tbox-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-webkit-transition: all 0.15s ease-out 0.1s;\n\t-moz-transition: all 0.15s ease-out 0.1s;\n\t-o-transition: all 0.15s ease-out 0.1s;\n\ttransition: all 0.15s ease-out 0.1s;\n\topacity: 0.2;\n\tcursor: pointer;\n\tdisplay: block;\n\tz-index: 3;\n}\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n.instagram .album div.img-box .img-bg:hover{\n\topacity: 0;\n}\n.photos-btn-wrap {\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n}\n.photos-btn {\n\tfont-size: 16px;\n\tcolor: #333;\n\tmargin-bottom: -4px;\n\tpadding: 5px 8px 3px;\n}\n.photos-btn.active {\n\tcolor: #08c;\n\tborder: 1px solid #e5e5e5;\n\tborder-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n\t.instagram .thumb {\n\t\twidth: 50%;\n\t\tpadding-bottom: 50%;\n\t}\n\t.instagram .album li {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tpadding-bottom: 100%;\n\t\ttext-align: center;\n\t}\n\t.instagram .album div.img-box{\n\t\tmargin: 0;\n\t\twidth: 90%;\n\t\theight: 90%;\n\t}\n}","source":"photos/ins.css","raw":"#post-instagram{\n\tpadding: 30px;\n}\n#post-instagram .article-entry{\n\tpadding-right: 0;\n}\n.instagram{\n\tposition: relative;\n\tmin-height: 500px;\n}\n.instagram img {\n\twidth: 100%;\n}\n.instagram .year {\n\tfont-size: 16px;\n}\n.instagram .open-ins{\n\tpadding: 10px 0;\n\tcolor: #cdcdcd;\n}\n.instagram .open-ins:hover{\n\tcolor: #657b83;\n}\n.instagram .year{\n\tdisplay: inline;\n}\n.instagram .thumb {\n\twidth: 25%;\n\theight: 0;\n\tpadding-bottom: 25%;\n\tposition: relative;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tbackground: #ededed;\n}\n.instagram .thumb a {\n\tposition: relative;\n}\n.instagram .album h1 em{\n\tfont-style: normal;\n\tfont-size: 14px;\n\tmargin-left: 10px;\n}\n.instagram .album ul{\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tclear: both;\n\twidth: 100%;\n\ttext-align: left;\n}\n.instagram .album li{\n\tlist-style: none;\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 5px;\n\tmargin-bottom: -10px;\n\theight: 0;\n\twidth: 25%;\n\tposition: relative;\n\tpadding-bottom: 25%;\n}\n.instagram .album li:before{\n\tdisplay: none;\n}\n.instagram .album div.img-box{\n\tposition: absolute;\n\twidth: 90%;\n\theight: 90%;\n\t-webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\t-moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\tbox-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n}\n.instagram .album div.img-box img{\n\twidth: 100%;\n\theight: 100%;\n    position: absolute;\n    z-index: 2;\n}\n.instagram .album div.img-box .img-bg{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0px;\n\twidth: 100%;\n\tmargin: -5px;\n\tpadding: 5px;\n\t-webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\tbox-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-webkit-transition: all 0.15s ease-out 0.1s;\n\t-moz-transition: all 0.15s ease-out 0.1s;\n\t-o-transition: all 0.15s ease-out 0.1s;\n\ttransition: all 0.15s ease-out 0.1s;\n\topacity: 0.2;\n\tcursor: pointer;\n\tdisplay: block;\n\tz-index: 3;\n}\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n.instagram .album div.img-box .img-bg:hover{\n\topacity: 0;\n}\n.photos-btn-wrap {\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n}\n.photos-btn {\n\tfont-size: 16px;\n\tcolor: #333;\n\tmargin-bottom: -4px;\n\tpadding: 5px 8px 3px;\n}\n.photos-btn.active {\n\tcolor: #08c;\n\tborder: 1px solid #e5e5e5;\n\tborder-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n\t.instagram .thumb {\n\t\twidth: 50%;\n\t\tpadding-bottom: 50%;\n\t}\n\t.instagram .album li {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tpadding-bottom: 100%;\n\t\ttext-align: center;\n\t}\n\t.instagram .album div.img-box{\n\t\tmargin: 0;\n\t\twidth: 90%;\n\t\theight: 90%;\n\t}\n}","date":"2022-04-13T14:04:29.889Z","updated":"2022-04-13T14:04:10.000Z","path":"photos/ins.css","layout":"false","title":"","comments":1,"_id":"cl295h27i000dj8uc984wfkp0","content":"#post-instagram{\n\tpadding: 30px;\n}\n#post-instagram .article-entry{\n\tpadding-right: 0;\n}\n.instagram{\n\tposition: relative;\n\tmin-height: 500px;\n}\n.instagram img {\n\twidth: 100%;\n}\n.instagram .year {\n\tfont-size: 16px;\n}\n.instagram .open-ins{\n\tpadding: 10px 0;\n\tcolor: #cdcdcd;\n}\n.instagram .open-ins:hover{\n\tcolor: #657b83;\n}\n.instagram .year{\n\tdisplay: inline;\n}\n.instagram .thumb {\n\twidth: 25%;\n\theight: 0;\n\tpadding-bottom: 25%;\n\tposition: relative;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tbackground: #ededed;\n}\n.instagram .thumb a {\n\tposition: relative;\n}\n.instagram .album h1 em{\n\tfont-style: normal;\n\tfont-size: 14px;\n\tmargin-left: 10px;\n}\n.instagram .album ul{\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tclear: both;\n\twidth: 100%;\n\ttext-align: left;\n}\n.instagram .album li{\n\tlist-style: none;\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 5px;\n\tmargin-bottom: -10px;\n\theight: 0;\n\twidth: 25%;\n\tposition: relative;\n\tpadding-bottom: 25%;\n}\n.instagram .album li:before{\n\tdisplay: none;\n}\n.instagram .album div.img-box{\n\tposition: absolute;\n\twidth: 90%;\n\theight: 90%;\n\t-webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\t-moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\tbox-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n}\n.instagram .album div.img-box img{\n\twidth: 100%;\n\theight: 100%;\n    position: absolute;\n    z-index: 2;\n}\n.instagram .album div.img-box .img-bg{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0px;\n\twidth: 100%;\n\tmargin: -5px;\n\tpadding: 5px;\n\t-webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\tbox-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-webkit-transition: all 0.15s ease-out 0.1s;\n\t-moz-transition: all 0.15s ease-out 0.1s;\n\t-o-transition: all 0.15s ease-out 0.1s;\n\ttransition: all 0.15s ease-out 0.1s;\n\topacity: 0.2;\n\tcursor: pointer;\n\tdisplay: block;\n\tz-index: 3;\n}\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n.instagram .album div.img-box .img-bg:hover{\n\topacity: 0;\n}\n.photos-btn-wrap {\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n}\n.photos-btn {\n\tfont-size: 16px;\n\tcolor: #333;\n\tmargin-bottom: -4px;\n\tpadding: 5px 8px 3px;\n}\n.photos-btn.active {\n\tcolor: #08c;\n\tborder: 1px solid #e5e5e5;\n\tborder-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n\t.instagram .thumb {\n\t\twidth: 50%;\n\t\tpadding-bottom: 50%;\n\t}\n\t.instagram .album li {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tpadding-bottom: 100%;\n\t\ttext-align: center;\n\t}\n\t.instagram .album div.img-box{\n\t\tmargin: 0;\n\t\twidth: 90%;\n\t\theight: 90%;\n\t}\n}","site":{"data":{}},"excerpt":"","more":"#post-instagram{\n\tpadding: 30px;\n}\n#post-instagram .article-entry{\n\tpadding-right: 0;\n}\n.instagram{\n\tposition: relative;\n\tmin-height: 500px;\n}\n.instagram img {\n\twidth: 100%;\n}\n.instagram .year {\n\tfont-size: 16px;\n}\n.instagram .open-ins{\n\tpadding: 10px 0;\n\tcolor: #cdcdcd;\n}\n.instagram .open-ins:hover{\n\tcolor: #657b83;\n}\n.instagram .year{\n\tdisplay: inline;\n}\n.instagram .thumb {\n\twidth: 25%;\n\theight: 0;\n\tpadding-bottom: 25%;\n\tposition: relative;\n\tdisplay: inline-block;\n\ttext-align: center;\n\tbackground: #ededed;\n}\n.instagram .thumb a {\n\tposition: relative;\n}\n.instagram .album h1 em{\n\tfont-style: normal;\n\tfont-size: 14px;\n\tmargin-left: 10px;\n}\n.instagram .album ul{\n\tdisplay: flex;\n\tflex-wrap: wrap;\n\tclear: both;\n\twidth: 100%;\n\ttext-align: left;\n}\n.instagram .album li{\n\tlist-style: none;\n\tdisplay: inline-block;\n\tbox-sizing: border-box;\n\tpadding: 0 5px;\n\tmargin-bottom: -10px;\n\theight: 0;\n\twidth: 25%;\n\tposition: relative;\n\tpadding-bottom: 25%;\n}\n.instagram .album li:before{\n\tdisplay: none;\n}\n.instagram .album div.img-box{\n\tposition: absolute;\n\twidth: 90%;\n\theight: 90%;\n\t-webkit-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\t-moz-box-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n\tbox-shadow: 0 1px 0 rgba(255,255,255,0.4), 0 1px 0 1px rgba(255,255,255,0.1);\n}\n.instagram .album div.img-box img{\n\twidth: 100%;\n\theight: 100%;\n    position: absolute;\n    z-index: 2;\n}\n.instagram .album div.img-box .img-bg{\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tbottom: 0px;\n\twidth: 100%;\n\tmargin: -5px;\n\tpadding: 5px;\n\t-webkit-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-moz-box-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\tbox-shadow: 0 0 0 1px rgba(0,0,0,.04), 0 1px 5px rgba(0,0,0,0.1);\n\t-webkit-transition: all 0.15s ease-out 0.1s;\n\t-moz-transition: all 0.15s ease-out 0.1s;\n\t-o-transition: all 0.15s ease-out 0.1s;\n\ttransition: all 0.15s ease-out 0.1s;\n\topacity: 0.2;\n\tcursor: pointer;\n\tdisplay: block;\n\tz-index: 3;\n}\n.instagram .album div.img-box .icon {\n    font-size: 14px;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    margin-left: -7px;\n    margin-top: -7px;\n    color: #999;\n    z-index: 1;\n}\n.instagram .album div.img-box .img-bg:hover{\n\topacity: 0;\n}\n.photos-btn-wrap {\n\tborder-bottom: 1px solid #e5e5e5;\n\tmargin-bottom: 20px;\n}\n.photos-btn {\n\tfont-size: 16px;\n\tcolor: #333;\n\tmargin-bottom: -4px;\n\tpadding: 5px 8px 3px;\n}\n.photos-btn.active {\n\tcolor: #08c;\n\tborder: 1px solid #e5e5e5;\n\tborder-bottom: 5px solid #fff;\n}\n\n@media screen and (max-width:600px) {\n\t.instagram .thumb {\n\t\twidth: 50%;\n\t\tpadding-bottom: 50%;\n\t}\n\t.instagram .album li {\n\t\twidth: 100%;\n\t\tposition: relative;\n\t\tpadding-bottom: 100%;\n\t\ttext-align: center;\n\t}\n\t.instagram .album div.img-box{\n\t\tmargin: 0;\n\t\twidth: 90%;\n\t\theight: 90%;\n\t}\n}"},{"_content":"/******/\n(function(modules) { // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/\n    if (installedModules[moduleId])\n    /******/\n      return installedModules[moduleId].exports;\n    /******/\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n      /******/\n      id: moduleId,\n      /******/\n      loaded: false\n        /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.loaded = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"/dist/\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(0);\n  /******/\n})\n/************************************************************************/\n/******/\n([\n  /* 0 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    'use strict';\n\n    __webpack_require__(1);\n\n    var _view = __webpack_require__(2);\n\n    var _view2 = _interopRequireDefault(_view);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    /**\n     * @name impush-client \n     * @description 这个项目让我发家致富…\n     * @date 2016-12-1\n     */\n\n    var _collection = [];\n    var _count = 0;\n    var searchData;\n\n    function addMask(elem) {\n      var rect = elem.getBoundingClientRect();\n      var style = getComputedStyle(elem, null);\n\n      var mask = document.createElement('i');\n      mask.className = 'icon-film';\n      mask.style.color = '#fff';\n      mask.style.fontSize = '26px';\n      mask.style.position = 'absolute';\n      mask.style.right = '10px';\n      mask.style.bottom = '10px';\n      mask.style.zIndex = 1;\n      elem.parentNode.appendChild(mask);\n    }\n\n    var createVideoIncon = function createVideoIncon() {\n      var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n      for (var i = 0, len = $videoImg.length; i < len; i++) {\n        addMask($videoImg[i]);\n      }\n    };\n    var render = function render(res) {\n      var ulTmpl = \"\";\n      for (var j = 0, len2 = res.list.length; j < len2; j++) {\n        var data = res.list[j].arr;\n        var liTmpl = \"\";\n        for (var i = 0, len = data.link.length; i < len; i++) {\n          var minSrc = 'https://raw.githubusercontent.com/possibleit/gitpage-backup/blob/main/photos/' + data.link[i] + '.min.jpg';\n          var src = 'https://raw.githubusercontent.com/possibleit/gitpage-backup/blob/main/min_photos/' + data.link[i];\n          var type = data.type[i];\n          var target = src + (type === 'video' ? '.mp4' : '.jpg');\n          src += '.jpg';\n\n          liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"640x640\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n        }\n        ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n      }\n      document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\">' + ulTmpl + '</div>';\n      createVideoIncon();\n      _view2.default.init();\n    };\n\n    var replacer = function replacer(str) {\n      var arr = str.split(\"/\");\n      return \"/assets/ins/\" + arr[arr.length - 1];\n    };\n\n    var ctrler = function ctrler(data) {\n      var imgObj = {};\n      for (var i = 0, len = data.length; i < len; i++) {\n        var y = data[i].y;\n        var m = data[i].m;\n        var src = replacer(data[i].src);\n        var text = data[i].text;\n        var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n        if (imgObj[key]) {\n          imgObj[key].srclist.push(src);\n          imgObj[key].text.push(text);\n        } else {\n          imgObj[key] = {\n            year: y,\n            month: m,\n            srclist: [src],\n            text: [text]\n          };\n        }\n      }\n      render(imgObj);\n    };\n\n    function loadData(success) {\n      if (!searchData) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', './data.json?t=' + +new Date(), true);\n\n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            var res = JSON.parse(this.response);\n            searchData = res;\n            success(searchData);\n          } else {\n            console.error(this.statusText);\n          }\n        };\n\n        xhr.onerror = function() {\n          console.error(this.statusText);\n        };\n\n        xhr.send();\n      } else {\n        success(searchData);\n      }\n    }\n\n    var Ins = {\n      init: function init() {\n        loadData(function(data) {\n          render(data);\n        });\n      }\n    };\n\n    Ins.init();\n\n    // export default impush;\n\n    /***/\n  },\n  /* 1 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      'use strict';\n\n      var inViewport = __webpack_require__(3);\n      var lazyAttrs = ['data-src'];\n\n      global.lzld = lazyload();\n\n      // Provide libs using getAttribute early to get the good src\n      // and not the fake data-src\n      replaceGetAttribute('Image');\n      replaceGetAttribute('IFrame');\n\n      function registerLazyAttr(attr) {\n        if (indexOf.call(lazyAttrs, attr) === -1) {\n          lazyAttrs.push(attr);\n        }\n      }\n\n      function lazyload(opts) {\n        opts = merge({\n          'offset': 333,\n          'src': 'data-src',\n          'container': false\n        }, opts || {});\n\n        if (typeof opts.src === 'string') {\n          registerLazyAttr(opts.src);\n        }\n\n        var elts = [];\n\n        function show(elt) {\n          var src = findRealSrc(elt);\n\n          if (src) {\n            elt.src = src;\n          }\n\n          elt.setAttribute('data-lzled', true);\n          elts[indexOf.call(elts, elt)] = null;\n        }\n\n        function findRealSrc(elt) {\n          if (typeof opts.src === 'function') {\n            return opts.src(elt);\n          }\n\n          return elt.getAttribute(opts.src);\n        }\n\n        function register(elt) {\n          elt.onload = null;\n          elt.removeAttribute('onload');\n          elt.onerror = null;\n          elt.removeAttribute('onerror');\n\n          if (indexOf.call(elts, elt) === -1) {\n            inViewport(elt, opts, show);\n          }\n        }\n\n        return register;\n      }\n\n      function replaceGetAttribute(elementName) {\n        var fullname = 'HTML' + elementName + 'Element';\n        if (fullname in global === false) {\n          return;\n        }\n\n        var original = global[fullname].prototype.getAttribute;\n        global[fullname].prototype.getAttribute = function(name) {\n          if (name === 'src') {\n            var realSrc;\n            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n              realSrc = original.call(this, lazyAttrs[i]);\n              if (realSrc) {\n                break;\n              }\n            }\n\n            return realSrc || original.call(this, name);\n          }\n\n          // our own lazyloader will go through theses lines\n          // because we use getAttribute(opts.src)\n          return original.call(this, name);\n        };\n      }\n\n      function merge(defaults, opts) {\n        for (var name in defaults) {\n          if (opts[name] === undefined) {\n            opts[name] = defaults[name];\n          }\n        }\n\n        return opts;\n      }\n\n      // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n      function indexOf(value) {\n        for (var i = this.length; i-- && this[i] !== value;) {}\n        return i;\n      }\n\n      module.exports = lazyload;\n\n      // export default impush;\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  },\n  /* 2 */\n  /***/\n  function(module, exports) {\n\n    'use strict';\n\n    var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n      // parse slide data (url, title, size ...) from DOM elements \n      // (children of gallerySelector)\n      var parseThumbnailElements = function parseThumbnailElements(el) {\n        el = el.parentNode.parentNode;\n        var thumbElements = el.getElementsByClassName('thumb'),\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          type,\n          // video or not\n          target,\n          item;\n\n        for (var i = 0; i < numNodes; i++) {\n\n          figureEl = thumbElements[i]; // \n\n          // include only element nodes \n          if (figureEl.nodeType !== 1) {\n            continue;\n          }\n\n          linkEl = figureEl.children[0]; // \n\n          size = linkEl.getAttribute('data-size').split('x');\n          type = linkEl.getAttribute('data-type');\n          target = linkEl.getAttribute('data-target');\n          // create slide object\n          item = {\n            src: linkEl.getAttribute('href'),\n            w: parseInt(size[0], 10),\n            h: parseInt(size[1], 10)\n          };\n\n          if (figureEl.children.length > 1) {\n            item.title = figureEl.children[1].innerHTML;\n          }\n\n          if (linkEl.children.length > 0) {\n            item.msrc = linkEl.children[0].getAttribute('src');\n            item.type = type;\n            item.target = target;\n            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n            if (type === 'video') {\n              //item.src = null;\n            }\n          }\n\n          item.el = figureEl; // save link to element for getThumbBoundsFn\n          items.push(item);\n        }\n\n        return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n        return el && (fn(el) ? el : closest(el.parentNode, fn));\n      };\n\n      // triggers when user clicks on thumbnail\n      var onThumbnailsClick = function onThumbnailsClick(e) {\n        e = e || window.event;\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n        var eTarget = e.target || e.srcElement;\n\n        // find root element of slide\n        var clickedListItem = closest(eTarget, function(el) {\n          return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n        });\n\n        if (!clickedListItem) {\n          return;\n        }\n\n        // find index of clicked item by looping through all child nodes\n        // alternatively, you may define index via data- attribute\n        var clickedGallery = clickedListItem.parentNode,\n\n          // childNodes = clickedListItem.parentNode.childNodes,\n          // numChildNodes = childNodes.length,\n          childNodes = document.getElementsByClassName('thumb'),\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n        for (var i = 0; i < numChildNodes; i++) {\n          if (childNodes[i].nodeType !== 1) {\n            continue;\n          }\n\n          if (childNodes[i] === clickedListItem) {\n            index = nodeIndex;\n            break;\n          }\n          nodeIndex++;\n        }\n\n        if (index >= 0) {\n          // open PhotoSwipe if valid index found\n          openPhotoSwipe(index, clickedGallery);\n        }\n        return false;\n      };\n\n      // parse picture index and gallery index from URL (#&pid=1&gid=2)\n      var photoswipeParseHash = function photoswipeParseHash() {\n        var hash = window.location.hash.substring(1),\n          params = {};\n\n        if (hash.length < 5) {\n          return params;\n        }\n\n        var vars = hash.split('&');\n        for (var i = 0; i < vars.length; i++) {\n          if (!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if (pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n\n        if (params.gid) {\n          params.gid = parseInt(params.gid, 10);\n        }\n\n        return params;\n      };\n\n      var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n        var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n\n        items = parseThumbnailElements(galleryElement);\n        // define options (if needed)\n        options = {\n\n          // define gallery index (for URL)\n          galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n          getThumbBoundsFn: function getThumbBoundsFn(index) {\n            // See Options -> getThumbBoundsFn section of documentation for more info\n            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n              pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n\n            return {\n              x: rect.left,\n              y: rect.top + pageYScroll,\n              w: rect.width\n            };\n          }\n\n        };\n\n        // PhotoSwipe opened from URL\n        if (fromURL) {\n          if (options.galleryPIDs) {\n            // parse real index when custom PIDs are used \n            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n            for (var j = 0; j < items.length; j++) {\n              if (items[j].pid == index) {\n                options.index = j;\n                break;\n              }\n            }\n          } else {\n            // in URL indexes start from 1\n            options.index = parseInt(index, 10) - 1;\n          }\n        } else {\n          options.index = parseInt(index, 10);\n        }\n\n        // exit if index not found\n        if (isNaN(options.index)) {\n          return;\n        }\n\n        if (disableAnimation) {\n          options.showAnimationDuration = 0;\n        }\n\n        // Pass data to PhotoSwipe and initialize it\n        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        var $tempVideo;\n        var stopVideoHandle = function stopVideoHandle() {\n          if ($tempVideo) {\n            $tempVideo.remove();\n            $tempVideo = null;\n          }\n        };\n        var changeHandle = function changeHandle() {\n          var item = gallery.currItem;\n          stopVideoHandle();\n          if (item.type === 'video') {\n            var $ctn = item.container;\n            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n            var $video = document.createElement('video');\n            $video.setAttribute('autoplay', 'autoplay');\n            $video.setAttribute('controls', 'controls');\n            $video.setAttribute('src', item.target);\n            $video.style.width = style.width;\n            $video.style.height = style.height;\n            $video.style.position = 'absolute';\n            $video.style.zIndex = 2;\n            $tempVideo = $video;\n            $ctn.appendChild($video);\n          }\n        };\n        gallery.listen('initialZoomIn', changeHandle);\n        gallery.listen('afterChange', changeHandle);\n        gallery.listen('initialZoomOut', stopVideoHandle);\n      };\n\n      // loop through all gallery elements and bind events\n      var galleryElements = document.querySelectorAll(gallerySelector);\n      for (var i = 0, l = galleryElements.length; i < l; i++) {\n        galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n        galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if (hashData.pid && hashData.gid) {\n        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n      }\n    };\n\n    var Viewer = function() {\n      function init() {\n        initPhotoSwipeFromDOM('.photos');\n      }\n      return {\n        init: init\n      };\n    }();\n\n    module.exports = Viewer;\n\n    /***/\n  },\n  /* 3 */\n  /***/\n  function(module, exports) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      module.exports = inViewport;\n\n      var instances = [];\n      var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n      function inViewport(elt, params, cb) {\n        var opts = {\n          container: global.document.body,\n          offset: 0\n        };\n\n        if (params === undefined || typeof params === 'function') {\n          cb = params;\n          params = {};\n        }\n\n        var container = opts.container = params.container || opts.container;\n        var offset = opts.offset = params.offset || opts.offset;\n\n        for (var i = 0; i < instances.length; i++) {\n          if (instances[i].container === container) {\n            return instances[i].isInViewport(elt, offset, cb);\n          }\n        }\n\n        return instances[\n          instances.push(createInViewport(container)) - 1\n        ].isInViewport(elt, offset, cb);\n      }\n\n      function addEvent(el, type, fn) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + type, fn);\n        } else {\n          el.addEventListener(type, fn, false);\n        }\n      }\n\n      function debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n          var context = this,\n            args = arguments;\n          var callNow = immediate && !timeout;\n          clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n          if (callNow) func.apply(context, args);\n\n          function later() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n          }\n        };\n      }\n\n      // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n      var contains = function() {\n        if (!global.document) {\n          return true;\n        }\n        return global.document.documentElement.compareDocumentPosition ?\n          function(a, b) {\n            return !!(a.compareDocumentPosition(b) & 16);\n          } :\n          global.document.documentElement.contains ?\n          function(a, b) {\n            return a !== b && (a.contains ? a.contains(b) : false);\n          } :\n          function(a, b) {\n            while (b = b.parentNode) {\n              if (b === a) {\n                return true;\n              }\n            }\n            return false;\n          };\n      }\n\n      function createInViewport(container) {\n        var watches = createWatches();\n\n        var scrollContainer = container === global.document.body ? global : container;\n        var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n        addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n        if (scrollContainer === global) {\n          addEvent(global, 'resize', debouncedCheck);\n        }\n\n        if (supportsMutationObserver) {\n          observeDOM(watches, container, debouncedCheck);\n        }\n\n        // failsafe check, every 200ms we check for visible images\n        // usecase: a hidden parent containing eleements\n        // when the parent becomes visible, we have no event that the children\n        // became visible\n        setInterval(debouncedCheck, 150);\n\n        function isInViewport(elt, offset, cb) {\n          if (!cb) {\n            return isVisible(elt, offset);\n          }\n\n          var remote = createRemote(elt, offset, cb);\n          remote.watch();\n          return remote;\n        }\n\n        function createRemote(elt, offset, cb) {\n          function watch() {\n            watches.add(elt, offset, cb);\n          }\n\n          function dispose() {\n            watches.remove(elt);\n          }\n\n          return {\n            watch: watch,\n            dispose: dispose\n          };\n        }\n\n        function watchInViewport(elt, offset, cb) {\n          if (isVisible(elt, offset)) {\n            watches.remove(elt);\n            cb(elt);\n          }\n        }\n\n        function isVisible(elt, offset) {\n          if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n            return false;\n          }\n\n          // Check if the element is visible\n          // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n          if (!elt.offsetWidth || !elt.offsetHeight) {\n            return false;\n          }\n\n          var eltRect = elt.getBoundingClientRect();\n          var viewport = {};\n\n          if (container === global.document.body) {\n            viewport = {\n              top: -offset,\n              left: -offset,\n              right: global.document.documentElement.clientWidth + offset,\n              bottom: global.document.documentElement.clientHeight + offset\n            };\n          } else {\n            var containerRect = container.getBoundingClientRect();\n            viewport = {\n              top: containerRect.top - offset,\n              left: containerRect.left - offset,\n              right: containerRect.right + offset,\n              bottom: containerRect.bottom + offset\n            };\n          }\n\n          // The element must overlap with the visible part of the viewport\n          var visible =\n            (\n              (eltRect.right > viewport.left) &&\n              (eltRect.left < viewport.right) &&\n              (eltRect.bottom > viewport.top) &&\n              (eltRect.top < viewport.bottom)\n            );\n\n          return visible;\n        }\n\n        return {\n          container: container,\n          isInViewport: isInViewport\n        };\n      }\n\n      function createWatches() {\n        var watches = [];\n\n        function add(elt, offset, cb) {\n          if (!isWatched(elt)) {\n            watches.push([elt, offset, cb]);\n          }\n        }\n\n        function remove(elt) {\n          var pos = indexOf(elt);\n          if (pos !== -1) {\n            watches.splice(pos, 1);\n          }\n        }\n\n        function indexOf(elt) {\n          for (var i = watches.length - 1; i >= 0; i--) {\n            if (watches[i][0] === elt) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function isWatched(elt) {\n          return indexOf(elt) !== -1;\n        }\n\n        function checkAll(cb) {\n          return function() {\n            for (var i = watches.length - 1; i >= 0; i--) {\n              cb.apply(this, watches[i]);\n            }\n          };\n        }\n\n        return {\n          add: add,\n          remove: remove,\n          isWatched: isWatched,\n          checkAll: checkAll\n        };\n      }\n\n      function observeDOM(watches, container, cb) {\n        var observer = new MutationObserver(watch);\n        var filter = Array.prototype.filter;\n        var concat = Array.prototype.concat;\n\n        observer.observe(container, {\n          childList: true,\n          subtree: true,\n          // changes like style/width/height/display will be catched\n          attributes: true\n        });\n\n        function watch(mutations) {\n          // some new DOM nodes where previously watched\n          // we should check their positions\n          if (mutations.some(knownNodes) === true) {\n            setTimeout(cb, 0);\n          }\n        }\n\n        function knownNodes(mutation) {\n          var nodes = concat.call([],\n            Array.prototype.slice.call(mutation.addedNodes),\n            mutation.target\n          );\n          return filter.call(nodes, watches.isWatched).length > 0;\n        }\n      }\n\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  }\n  /******/\n]);","source":"photos/ins.js","raw":"/******/\n(function(modules) { // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/\n    if (installedModules[moduleId])\n    /******/\n      return installedModules[moduleId].exports;\n    /******/\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n      /******/\n      id: moduleId,\n      /******/\n      loaded: false\n        /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.loaded = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"/dist/\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(0);\n  /******/\n})\n/************************************************************************/\n/******/\n([\n  /* 0 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    'use strict';\n\n    __webpack_require__(1);\n\n    var _view = __webpack_require__(2);\n\n    var _view2 = _interopRequireDefault(_view);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    /**\n     * @name impush-client \n     * @description 这个项目让我发家致富…\n     * @date 2016-12-1\n     */\n\n    var _collection = [];\n    var _count = 0;\n    var searchData;\n\n    function addMask(elem) {\n      var rect = elem.getBoundingClientRect();\n      var style = getComputedStyle(elem, null);\n\n      var mask = document.createElement('i');\n      mask.className = 'icon-film';\n      mask.style.color = '#fff';\n      mask.style.fontSize = '26px';\n      mask.style.position = 'absolute';\n      mask.style.right = '10px';\n      mask.style.bottom = '10px';\n      mask.style.zIndex = 1;\n      elem.parentNode.appendChild(mask);\n    }\n\n    var createVideoIncon = function createVideoIncon() {\n      var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n      for (var i = 0, len = $videoImg.length; i < len; i++) {\n        addMask($videoImg[i]);\n      }\n    };\n    var render = function render(res) {\n      var ulTmpl = \"\";\n      for (var j = 0, len2 = res.list.length; j < len2; j++) {\n        var data = res.list[j].arr;\n        var liTmpl = \"\";\n        for (var i = 0, len = data.link.length; i < len; i++) {\n          var minSrc = 'https://raw.githubusercontent.com/possibleit/gitpage-backup/blob/main/photos/' + data.link[i] + '.min.jpg';\n          var src = 'https://raw.githubusercontent.com/possibleit/gitpage-backup/blob/main/min_photos/' + data.link[i];\n          var type = data.type[i];\n          var target = src + (type === 'video' ? '.mp4' : '.jpg');\n          src += '.jpg';\n\n          liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"640x640\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n        }\n        ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n      }\n      document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\">' + ulTmpl + '</div>';\n      createVideoIncon();\n      _view2.default.init();\n    };\n\n    var replacer = function replacer(str) {\n      var arr = str.split(\"/\");\n      return \"/assets/ins/\" + arr[arr.length - 1];\n    };\n\n    var ctrler = function ctrler(data) {\n      var imgObj = {};\n      for (var i = 0, len = data.length; i < len; i++) {\n        var y = data[i].y;\n        var m = data[i].m;\n        var src = replacer(data[i].src);\n        var text = data[i].text;\n        var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n        if (imgObj[key]) {\n          imgObj[key].srclist.push(src);\n          imgObj[key].text.push(text);\n        } else {\n          imgObj[key] = {\n            year: y,\n            month: m,\n            srclist: [src],\n            text: [text]\n          };\n        }\n      }\n      render(imgObj);\n    };\n\n    function loadData(success) {\n      if (!searchData) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', './data.json?t=' + +new Date(), true);\n\n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            var res = JSON.parse(this.response);\n            searchData = res;\n            success(searchData);\n          } else {\n            console.error(this.statusText);\n          }\n        };\n\n        xhr.onerror = function() {\n          console.error(this.statusText);\n        };\n\n        xhr.send();\n      } else {\n        success(searchData);\n      }\n    }\n\n    var Ins = {\n      init: function init() {\n        loadData(function(data) {\n          render(data);\n        });\n      }\n    };\n\n    Ins.init();\n\n    // export default impush;\n\n    /***/\n  },\n  /* 1 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      'use strict';\n\n      var inViewport = __webpack_require__(3);\n      var lazyAttrs = ['data-src'];\n\n      global.lzld = lazyload();\n\n      // Provide libs using getAttribute early to get the good src\n      // and not the fake data-src\n      replaceGetAttribute('Image');\n      replaceGetAttribute('IFrame');\n\n      function registerLazyAttr(attr) {\n        if (indexOf.call(lazyAttrs, attr) === -1) {\n          lazyAttrs.push(attr);\n        }\n      }\n\n      function lazyload(opts) {\n        opts = merge({\n          'offset': 333,\n          'src': 'data-src',\n          'container': false\n        }, opts || {});\n\n        if (typeof opts.src === 'string') {\n          registerLazyAttr(opts.src);\n        }\n\n        var elts = [];\n\n        function show(elt) {\n          var src = findRealSrc(elt);\n\n          if (src) {\n            elt.src = src;\n          }\n\n          elt.setAttribute('data-lzled', true);\n          elts[indexOf.call(elts, elt)] = null;\n        }\n\n        function findRealSrc(elt) {\n          if (typeof opts.src === 'function') {\n            return opts.src(elt);\n          }\n\n          return elt.getAttribute(opts.src);\n        }\n\n        function register(elt) {\n          elt.onload = null;\n          elt.removeAttribute('onload');\n          elt.onerror = null;\n          elt.removeAttribute('onerror');\n\n          if (indexOf.call(elts, elt) === -1) {\n            inViewport(elt, opts, show);\n          }\n        }\n\n        return register;\n      }\n\n      function replaceGetAttribute(elementName) {\n        var fullname = 'HTML' + elementName + 'Element';\n        if (fullname in global === false) {\n          return;\n        }\n\n        var original = global[fullname].prototype.getAttribute;\n        global[fullname].prototype.getAttribute = function(name) {\n          if (name === 'src') {\n            var realSrc;\n            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n              realSrc = original.call(this, lazyAttrs[i]);\n              if (realSrc) {\n                break;\n              }\n            }\n\n            return realSrc || original.call(this, name);\n          }\n\n          // our own lazyloader will go through theses lines\n          // because we use getAttribute(opts.src)\n          return original.call(this, name);\n        };\n      }\n\n      function merge(defaults, opts) {\n        for (var name in defaults) {\n          if (opts[name] === undefined) {\n            opts[name] = defaults[name];\n          }\n        }\n\n        return opts;\n      }\n\n      // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n      function indexOf(value) {\n        for (var i = this.length; i-- && this[i] !== value;) {}\n        return i;\n      }\n\n      module.exports = lazyload;\n\n      // export default impush;\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  },\n  /* 2 */\n  /***/\n  function(module, exports) {\n\n    'use strict';\n\n    var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n      // parse slide data (url, title, size ...) from DOM elements \n      // (children of gallerySelector)\n      var parseThumbnailElements = function parseThumbnailElements(el) {\n        el = el.parentNode.parentNode;\n        var thumbElements = el.getElementsByClassName('thumb'),\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          type,\n          // video or not\n          target,\n          item;\n\n        for (var i = 0; i < numNodes; i++) {\n\n          figureEl = thumbElements[i]; // \n\n          // include only element nodes \n          if (figureEl.nodeType !== 1) {\n            continue;\n          }\n\n          linkEl = figureEl.children[0]; // \n\n          size = linkEl.getAttribute('data-size').split('x');\n          type = linkEl.getAttribute('data-type');\n          target = linkEl.getAttribute('data-target');\n          // create slide object\n          item = {\n            src: linkEl.getAttribute('href'),\n            w: parseInt(size[0], 10),\n            h: parseInt(size[1], 10)\n          };\n\n          if (figureEl.children.length > 1) {\n            item.title = figureEl.children[1].innerHTML;\n          }\n\n          if (linkEl.children.length > 0) {\n            item.msrc = linkEl.children[0].getAttribute('src');\n            item.type = type;\n            item.target = target;\n            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n            if (type === 'video') {\n              //item.src = null;\n            }\n          }\n\n          item.el = figureEl; // save link to element for getThumbBoundsFn\n          items.push(item);\n        }\n\n        return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n        return el && (fn(el) ? el : closest(el.parentNode, fn));\n      };\n\n      // triggers when user clicks on thumbnail\n      var onThumbnailsClick = function onThumbnailsClick(e) {\n        e = e || window.event;\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n        var eTarget = e.target || e.srcElement;\n\n        // find root element of slide\n        var clickedListItem = closest(eTarget, function(el) {\n          return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n        });\n\n        if (!clickedListItem) {\n          return;\n        }\n\n        // find index of clicked item by looping through all child nodes\n        // alternatively, you may define index via data- attribute\n        var clickedGallery = clickedListItem.parentNode,\n\n          // childNodes = clickedListItem.parentNode.childNodes,\n          // numChildNodes = childNodes.length,\n          childNodes = document.getElementsByClassName('thumb'),\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n        for (var i = 0; i < numChildNodes; i++) {\n          if (childNodes[i].nodeType !== 1) {\n            continue;\n          }\n\n          if (childNodes[i] === clickedListItem) {\n            index = nodeIndex;\n            break;\n          }\n          nodeIndex++;\n        }\n\n        if (index >= 0) {\n          // open PhotoSwipe if valid index found\n          openPhotoSwipe(index, clickedGallery);\n        }\n        return false;\n      };\n\n      // parse picture index and gallery index from URL (#&pid=1&gid=2)\n      var photoswipeParseHash = function photoswipeParseHash() {\n        var hash = window.location.hash.substring(1),\n          params = {};\n\n        if (hash.length < 5) {\n          return params;\n        }\n\n        var vars = hash.split('&');\n        for (var i = 0; i < vars.length; i++) {\n          if (!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if (pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n\n        if (params.gid) {\n          params.gid = parseInt(params.gid, 10);\n        }\n\n        return params;\n      };\n\n      var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n        var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n\n        items = parseThumbnailElements(galleryElement);\n        // define options (if needed)\n        options = {\n\n          // define gallery index (for URL)\n          galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n          getThumbBoundsFn: function getThumbBoundsFn(index) {\n            // See Options -> getThumbBoundsFn section of documentation for more info\n            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n              pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n\n            return {\n              x: rect.left,\n              y: rect.top + pageYScroll,\n              w: rect.width\n            };\n          }\n\n        };\n\n        // PhotoSwipe opened from URL\n        if (fromURL) {\n          if (options.galleryPIDs) {\n            // parse real index when custom PIDs are used \n            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n            for (var j = 0; j < items.length; j++) {\n              if (items[j].pid == index) {\n                options.index = j;\n                break;\n              }\n            }\n          } else {\n            // in URL indexes start from 1\n            options.index = parseInt(index, 10) - 1;\n          }\n        } else {\n          options.index = parseInt(index, 10);\n        }\n\n        // exit if index not found\n        if (isNaN(options.index)) {\n          return;\n        }\n\n        if (disableAnimation) {\n          options.showAnimationDuration = 0;\n        }\n\n        // Pass data to PhotoSwipe and initialize it\n        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        var $tempVideo;\n        var stopVideoHandle = function stopVideoHandle() {\n          if ($tempVideo) {\n            $tempVideo.remove();\n            $tempVideo = null;\n          }\n        };\n        var changeHandle = function changeHandle() {\n          var item = gallery.currItem;\n          stopVideoHandle();\n          if (item.type === 'video') {\n            var $ctn = item.container;\n            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n            var $video = document.createElement('video');\n            $video.setAttribute('autoplay', 'autoplay');\n            $video.setAttribute('controls', 'controls');\n            $video.setAttribute('src', item.target);\n            $video.style.width = style.width;\n            $video.style.height = style.height;\n            $video.style.position = 'absolute';\n            $video.style.zIndex = 2;\n            $tempVideo = $video;\n            $ctn.appendChild($video);\n          }\n        };\n        gallery.listen('initialZoomIn', changeHandle);\n        gallery.listen('afterChange', changeHandle);\n        gallery.listen('initialZoomOut', stopVideoHandle);\n      };\n\n      // loop through all gallery elements and bind events\n      var galleryElements = document.querySelectorAll(gallerySelector);\n      for (var i = 0, l = galleryElements.length; i < l; i++) {\n        galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n        galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if (hashData.pid && hashData.gid) {\n        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n      }\n    };\n\n    var Viewer = function() {\n      function init() {\n        initPhotoSwipeFromDOM('.photos');\n      }\n      return {\n        init: init\n      };\n    }();\n\n    module.exports = Viewer;\n\n    /***/\n  },\n  /* 3 */\n  /***/\n  function(module, exports) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      module.exports = inViewport;\n\n      var instances = [];\n      var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n      function inViewport(elt, params, cb) {\n        var opts = {\n          container: global.document.body,\n          offset: 0\n        };\n\n        if (params === undefined || typeof params === 'function') {\n          cb = params;\n          params = {};\n        }\n\n        var container = opts.container = params.container || opts.container;\n        var offset = opts.offset = params.offset || opts.offset;\n\n        for (var i = 0; i < instances.length; i++) {\n          if (instances[i].container === container) {\n            return instances[i].isInViewport(elt, offset, cb);\n          }\n        }\n\n        return instances[\n          instances.push(createInViewport(container)) - 1\n        ].isInViewport(elt, offset, cb);\n      }\n\n      function addEvent(el, type, fn) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + type, fn);\n        } else {\n          el.addEventListener(type, fn, false);\n        }\n      }\n\n      function debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n          var context = this,\n            args = arguments;\n          var callNow = immediate && !timeout;\n          clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n          if (callNow) func.apply(context, args);\n\n          function later() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n          }\n        };\n      }\n\n      // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n      var contains = function() {\n        if (!global.document) {\n          return true;\n        }\n        return global.document.documentElement.compareDocumentPosition ?\n          function(a, b) {\n            return !!(a.compareDocumentPosition(b) & 16);\n          } :\n          global.document.documentElement.contains ?\n          function(a, b) {\n            return a !== b && (a.contains ? a.contains(b) : false);\n          } :\n          function(a, b) {\n            while (b = b.parentNode) {\n              if (b === a) {\n                return true;\n              }\n            }\n            return false;\n          };\n      }\n\n      function createInViewport(container) {\n        var watches = createWatches();\n\n        var scrollContainer = container === global.document.body ? global : container;\n        var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n        addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n        if (scrollContainer === global) {\n          addEvent(global, 'resize', debouncedCheck);\n        }\n\n        if (supportsMutationObserver) {\n          observeDOM(watches, container, debouncedCheck);\n        }\n\n        // failsafe check, every 200ms we check for visible images\n        // usecase: a hidden parent containing eleements\n        // when the parent becomes visible, we have no event that the children\n        // became visible\n        setInterval(debouncedCheck, 150);\n\n        function isInViewport(elt, offset, cb) {\n          if (!cb) {\n            return isVisible(elt, offset);\n          }\n\n          var remote = createRemote(elt, offset, cb);\n          remote.watch();\n          return remote;\n        }\n\n        function createRemote(elt, offset, cb) {\n          function watch() {\n            watches.add(elt, offset, cb);\n          }\n\n          function dispose() {\n            watches.remove(elt);\n          }\n\n          return {\n            watch: watch,\n            dispose: dispose\n          };\n        }\n\n        function watchInViewport(elt, offset, cb) {\n          if (isVisible(elt, offset)) {\n            watches.remove(elt);\n            cb(elt);\n          }\n        }\n\n        function isVisible(elt, offset) {\n          if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n            return false;\n          }\n\n          // Check if the element is visible\n          // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n          if (!elt.offsetWidth || !elt.offsetHeight) {\n            return false;\n          }\n\n          var eltRect = elt.getBoundingClientRect();\n          var viewport = {};\n\n          if (container === global.document.body) {\n            viewport = {\n              top: -offset,\n              left: -offset,\n              right: global.document.documentElement.clientWidth + offset,\n              bottom: global.document.documentElement.clientHeight + offset\n            };\n          } else {\n            var containerRect = container.getBoundingClientRect();\n            viewport = {\n              top: containerRect.top - offset,\n              left: containerRect.left - offset,\n              right: containerRect.right + offset,\n              bottom: containerRect.bottom + offset\n            };\n          }\n\n          // The element must overlap with the visible part of the viewport\n          var visible =\n            (\n              (eltRect.right > viewport.left) &&\n              (eltRect.left < viewport.right) &&\n              (eltRect.bottom > viewport.top) &&\n              (eltRect.top < viewport.bottom)\n            );\n\n          return visible;\n        }\n\n        return {\n          container: container,\n          isInViewport: isInViewport\n        };\n      }\n\n      function createWatches() {\n        var watches = [];\n\n        function add(elt, offset, cb) {\n          if (!isWatched(elt)) {\n            watches.push([elt, offset, cb]);\n          }\n        }\n\n        function remove(elt) {\n          var pos = indexOf(elt);\n          if (pos !== -1) {\n            watches.splice(pos, 1);\n          }\n        }\n\n        function indexOf(elt) {\n          for (var i = watches.length - 1; i >= 0; i--) {\n            if (watches[i][0] === elt) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function isWatched(elt) {\n          return indexOf(elt) !== -1;\n        }\n\n        function checkAll(cb) {\n          return function() {\n            for (var i = watches.length - 1; i >= 0; i--) {\n              cb.apply(this, watches[i]);\n            }\n          };\n        }\n\n        return {\n          add: add,\n          remove: remove,\n          isWatched: isWatched,\n          checkAll: checkAll\n        };\n      }\n\n      function observeDOM(watches, container, cb) {\n        var observer = new MutationObserver(watch);\n        var filter = Array.prototype.filter;\n        var concat = Array.prototype.concat;\n\n        observer.observe(container, {\n          childList: true,\n          subtree: true,\n          // changes like style/width/height/display will be catched\n          attributes: true\n        });\n\n        function watch(mutations) {\n          // some new DOM nodes where previously watched\n          // we should check their positions\n          if (mutations.some(knownNodes) === true) {\n            setTimeout(cb, 0);\n          }\n        }\n\n        function knownNodes(mutation) {\n          var nodes = concat.call([],\n            Array.prototype.slice.call(mutation.addedNodes),\n            mutation.target\n          );\n          return filter.call(nodes, watches.isWatched).length > 0;\n        }\n      }\n\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  }\n  /******/\n]);","date":"2022-04-16T17:16:32.865Z","updated":"2022-04-16T17:16:32.865Z","path":"photos/ins.js","layout":"false","title":"","comments":1,"_id":"cl295h27k000fj8uccj9xgxs9","content":"/******/\n(function(modules) { // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/\n    if (installedModules[moduleId])\n    /******/\n      return installedModules[moduleId].exports;\n    /******/\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n      /******/\n      id: moduleId,\n      /******/\n      loaded: false\n        /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.loaded = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"/dist/\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(0);\n  /******/\n})\n/************************************************************************/\n/******/\n([\n  /* 0 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    'use strict';\n\n    __webpack_require__(1);\n\n    var _view = __webpack_require__(2);\n\n    var _view2 = _interopRequireDefault(_view);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    /**\n     * @name impush-client \n     * @description 这个项目让我发家致富…\n     * @date 2016-12-1\n     */\n\n    var _collection = [];\n    var _count = 0;\n    var searchData;\n\n    function addMask(elem) {\n      var rect = elem.getBoundingClientRect();\n      var style = getComputedStyle(elem, null);\n\n      var mask = document.createElement('i');\n      mask.className = 'icon-film';\n      mask.style.color = '#fff';\n      mask.style.fontSize = '26px';\n      mask.style.position = 'absolute';\n      mask.style.right = '10px';\n      mask.style.bottom = '10px';\n      mask.style.zIndex = 1;\n      elem.parentNode.appendChild(mask);\n    }\n\n    var createVideoIncon = function createVideoIncon() {\n      var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n      for (var i = 0, len = $videoImg.length; i < len; i++) {\n        addMask($videoImg[i]);\n      }\n    };\n    var render = function render(res) {\n      var ulTmpl = \"\";\n      for (var j = 0, len2 = res.list.length; j < len2; j++) {\n        var data = res.list[j].arr;\n        var liTmpl = \"\";\n        for (var i = 0, len = data.link.length; i < len; i++) {\n          var minSrc = 'https://raw.githubusercontent.com/possibleit/gitpage-backup/blob/main/photos/' + data.link[i] + '.min.jpg';\n          var src = 'https://raw.githubusercontent.com/possibleit/gitpage-backup/blob/main/min_photos/' + data.link[i];\n          var type = data.type[i];\n          var target = src + (type === 'video' ? '.mp4' : '.jpg');\n          src += '.jpg';\n\n          liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"640x640\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n        }\n        ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n      }\n      document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\">' + ulTmpl + '</div>';\n      createVideoIncon();\n      _view2.default.init();\n    };\n\n    var replacer = function replacer(str) {\n      var arr = str.split(\"/\");\n      return \"/assets/ins/\" + arr[arr.length - 1];\n    };\n\n    var ctrler = function ctrler(data) {\n      var imgObj = {};\n      for (var i = 0, len = data.length; i < len; i++) {\n        var y = data[i].y;\n        var m = data[i].m;\n        var src = replacer(data[i].src);\n        var text = data[i].text;\n        var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n        if (imgObj[key]) {\n          imgObj[key].srclist.push(src);\n          imgObj[key].text.push(text);\n        } else {\n          imgObj[key] = {\n            year: y,\n            month: m,\n            srclist: [src],\n            text: [text]\n          };\n        }\n      }\n      render(imgObj);\n    };\n\n    function loadData(success) {\n      if (!searchData) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', './data.json?t=' + +new Date(), true);\n\n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            var res = JSON.parse(this.response);\n            searchData = res;\n            success(searchData);\n          } else {\n            console.error(this.statusText);\n          }\n        };\n\n        xhr.onerror = function() {\n          console.error(this.statusText);\n        };\n\n        xhr.send();\n      } else {\n        success(searchData);\n      }\n    }\n\n    var Ins = {\n      init: function init() {\n        loadData(function(data) {\n          render(data);\n        });\n      }\n    };\n\n    Ins.init();\n\n    // export default impush;\n\n    /***/\n  },\n  /* 1 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      'use strict';\n\n      var inViewport = __webpack_require__(3);\n      var lazyAttrs = ['data-src'];\n\n      global.lzld = lazyload();\n\n      // Provide libs using getAttribute early to get the good src\n      // and not the fake data-src\n      replaceGetAttribute('Image');\n      replaceGetAttribute('IFrame');\n\n      function registerLazyAttr(attr) {\n        if (indexOf.call(lazyAttrs, attr) === -1) {\n          lazyAttrs.push(attr);\n        }\n      }\n\n      function lazyload(opts) {\n        opts = merge({\n          'offset': 333,\n          'src': 'data-src',\n          'container': false\n        }, opts || {});\n\n        if (typeof opts.src === 'string') {\n          registerLazyAttr(opts.src);\n        }\n\n        var elts = [];\n\n        function show(elt) {\n          var src = findRealSrc(elt);\n\n          if (src) {\n            elt.src = src;\n          }\n\n          elt.setAttribute('data-lzled', true);\n          elts[indexOf.call(elts, elt)] = null;\n        }\n\n        function findRealSrc(elt) {\n          if (typeof opts.src === 'function') {\n            return opts.src(elt);\n          }\n\n          return elt.getAttribute(opts.src);\n        }\n\n        function register(elt) {\n          elt.onload = null;\n          elt.removeAttribute('onload');\n          elt.onerror = null;\n          elt.removeAttribute('onerror');\n\n          if (indexOf.call(elts, elt) === -1) {\n            inViewport(elt, opts, show);\n          }\n        }\n\n        return register;\n      }\n\n      function replaceGetAttribute(elementName) {\n        var fullname = 'HTML' + elementName + 'Element';\n        if (fullname in global === false) {\n          return;\n        }\n\n        var original = global[fullname].prototype.getAttribute;\n        global[fullname].prototype.getAttribute = function(name) {\n          if (name === 'src') {\n            var realSrc;\n            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n              realSrc = original.call(this, lazyAttrs[i]);\n              if (realSrc) {\n                break;\n              }\n            }\n\n            return realSrc || original.call(this, name);\n          }\n\n          // our own lazyloader will go through theses lines\n          // because we use getAttribute(opts.src)\n          return original.call(this, name);\n        };\n      }\n\n      function merge(defaults, opts) {\n        for (var name in defaults) {\n          if (opts[name] === undefined) {\n            opts[name] = defaults[name];\n          }\n        }\n\n        return opts;\n      }\n\n      // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n      function indexOf(value) {\n        for (var i = this.length; i-- && this[i] !== value;) {}\n        return i;\n      }\n\n      module.exports = lazyload;\n\n      // export default impush;\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  },\n  /* 2 */\n  /***/\n  function(module, exports) {\n\n    'use strict';\n\n    var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n      // parse slide data (url, title, size ...) from DOM elements \n      // (children of gallerySelector)\n      var parseThumbnailElements = function parseThumbnailElements(el) {\n        el = el.parentNode.parentNode;\n        var thumbElements = el.getElementsByClassName('thumb'),\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          type,\n          // video or not\n          target,\n          item;\n\n        for (var i = 0; i < numNodes; i++) {\n\n          figureEl = thumbElements[i]; // \n\n          // include only element nodes \n          if (figureEl.nodeType !== 1) {\n            continue;\n          }\n\n          linkEl = figureEl.children[0]; // \n\n          size = linkEl.getAttribute('data-size').split('x');\n          type = linkEl.getAttribute('data-type');\n          target = linkEl.getAttribute('data-target');\n          // create slide object\n          item = {\n            src: linkEl.getAttribute('href'),\n            w: parseInt(size[0], 10),\n            h: parseInt(size[1], 10)\n          };\n\n          if (figureEl.children.length > 1) {\n            item.title = figureEl.children[1].innerHTML;\n          }\n\n          if (linkEl.children.length > 0) {\n            item.msrc = linkEl.children[0].getAttribute('src');\n            item.type = type;\n            item.target = target;\n            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n            if (type === 'video') {\n              //item.src = null;\n            }\n          }\n\n          item.el = figureEl; // save link to element for getThumbBoundsFn\n          items.push(item);\n        }\n\n        return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n        return el && (fn(el) ? el : closest(el.parentNode, fn));\n      };\n\n      // triggers when user clicks on thumbnail\n      var onThumbnailsClick = function onThumbnailsClick(e) {\n        e = e || window.event;\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n        var eTarget = e.target || e.srcElement;\n\n        // find root element of slide\n        var clickedListItem = closest(eTarget, function(el) {\n          return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n        });\n\n        if (!clickedListItem) {\n          return;\n        }\n\n        // find index of clicked item by looping through all child nodes\n        // alternatively, you may define index via data- attribute\n        var clickedGallery = clickedListItem.parentNode,\n\n          // childNodes = clickedListItem.parentNode.childNodes,\n          // numChildNodes = childNodes.length,\n          childNodes = document.getElementsByClassName('thumb'),\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n        for (var i = 0; i < numChildNodes; i++) {\n          if (childNodes[i].nodeType !== 1) {\n            continue;\n          }\n\n          if (childNodes[i] === clickedListItem) {\n            index = nodeIndex;\n            break;\n          }\n          nodeIndex++;\n        }\n\n        if (index >= 0) {\n          // open PhotoSwipe if valid index found\n          openPhotoSwipe(index, clickedGallery);\n        }\n        return false;\n      };\n\n      // parse picture index and gallery index from URL (#&pid=1&gid=2)\n      var photoswipeParseHash = function photoswipeParseHash() {\n        var hash = window.location.hash.substring(1),\n          params = {};\n\n        if (hash.length < 5) {\n          return params;\n        }\n\n        var vars = hash.split('&');\n        for (var i = 0; i < vars.length; i++) {\n          if (!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if (pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n\n        if (params.gid) {\n          params.gid = parseInt(params.gid, 10);\n        }\n\n        return params;\n      };\n\n      var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n        var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n\n        items = parseThumbnailElements(galleryElement);\n        // define options (if needed)\n        options = {\n\n          // define gallery index (for URL)\n          galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n          getThumbBoundsFn: function getThumbBoundsFn(index) {\n            // See Options -> getThumbBoundsFn section of documentation for more info\n            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n              pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n\n            return {\n              x: rect.left,\n              y: rect.top + pageYScroll,\n              w: rect.width\n            };\n          }\n\n        };\n\n        // PhotoSwipe opened from URL\n        if (fromURL) {\n          if (options.galleryPIDs) {\n            // parse real index when custom PIDs are used \n            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n            for (var j = 0; j < items.length; j++) {\n              if (items[j].pid == index) {\n                options.index = j;\n                break;\n              }\n            }\n          } else {\n            // in URL indexes start from 1\n            options.index = parseInt(index, 10) - 1;\n          }\n        } else {\n          options.index = parseInt(index, 10);\n        }\n\n        // exit if index not found\n        if (isNaN(options.index)) {\n          return;\n        }\n\n        if (disableAnimation) {\n          options.showAnimationDuration = 0;\n        }\n\n        // Pass data to PhotoSwipe and initialize it\n        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        var $tempVideo;\n        var stopVideoHandle = function stopVideoHandle() {\n          if ($tempVideo) {\n            $tempVideo.remove();\n            $tempVideo = null;\n          }\n        };\n        var changeHandle = function changeHandle() {\n          var item = gallery.currItem;\n          stopVideoHandle();\n          if (item.type === 'video') {\n            var $ctn = item.container;\n            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n            var $video = document.createElement('video');\n            $video.setAttribute('autoplay', 'autoplay');\n            $video.setAttribute('controls', 'controls');\n            $video.setAttribute('src', item.target);\n            $video.style.width = style.width;\n            $video.style.height = style.height;\n            $video.style.position = 'absolute';\n            $video.style.zIndex = 2;\n            $tempVideo = $video;\n            $ctn.appendChild($video);\n          }\n        };\n        gallery.listen('initialZoomIn', changeHandle);\n        gallery.listen('afterChange', changeHandle);\n        gallery.listen('initialZoomOut', stopVideoHandle);\n      };\n\n      // loop through all gallery elements and bind events\n      var galleryElements = document.querySelectorAll(gallerySelector);\n      for (var i = 0, l = galleryElements.length; i < l; i++) {\n        galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n        galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if (hashData.pid && hashData.gid) {\n        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n      }\n    };\n\n    var Viewer = function() {\n      function init() {\n        initPhotoSwipeFromDOM('.photos');\n      }\n      return {\n        init: init\n      };\n    }();\n\n    module.exports = Viewer;\n\n    /***/\n  },\n  /* 3 */\n  /***/\n  function(module, exports) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      module.exports = inViewport;\n\n      var instances = [];\n      var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n      function inViewport(elt, params, cb) {\n        var opts = {\n          container: global.document.body,\n          offset: 0\n        };\n\n        if (params === undefined || typeof params === 'function') {\n          cb = params;\n          params = {};\n        }\n\n        var container = opts.container = params.container || opts.container;\n        var offset = opts.offset = params.offset || opts.offset;\n\n        for (var i = 0; i < instances.length; i++) {\n          if (instances[i].container === container) {\n            return instances[i].isInViewport(elt, offset, cb);\n          }\n        }\n\n        return instances[\n          instances.push(createInViewport(container)) - 1\n        ].isInViewport(elt, offset, cb);\n      }\n\n      function addEvent(el, type, fn) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + type, fn);\n        } else {\n          el.addEventListener(type, fn, false);\n        }\n      }\n\n      function debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n          var context = this,\n            args = arguments;\n          var callNow = immediate && !timeout;\n          clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n          if (callNow) func.apply(context, args);\n\n          function later() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n          }\n        };\n      }\n\n      // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n      var contains = function() {\n        if (!global.document) {\n          return true;\n        }\n        return global.document.documentElement.compareDocumentPosition ?\n          function(a, b) {\n            return !!(a.compareDocumentPosition(b) & 16);\n          } :\n          global.document.documentElement.contains ?\n          function(a, b) {\n            return a !== b && (a.contains ? a.contains(b) : false);\n          } :\n          function(a, b) {\n            while (b = b.parentNode) {\n              if (b === a) {\n                return true;\n              }\n            }\n            return false;\n          };\n      }\n\n      function createInViewport(container) {\n        var watches = createWatches();\n\n        var scrollContainer = container === global.document.body ? global : container;\n        var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n        addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n        if (scrollContainer === global) {\n          addEvent(global, 'resize', debouncedCheck);\n        }\n\n        if (supportsMutationObserver) {\n          observeDOM(watches, container, debouncedCheck);\n        }\n\n        // failsafe check, every 200ms we check for visible images\n        // usecase: a hidden parent containing eleements\n        // when the parent becomes visible, we have no event that the children\n        // became visible\n        setInterval(debouncedCheck, 150);\n\n        function isInViewport(elt, offset, cb) {\n          if (!cb) {\n            return isVisible(elt, offset);\n          }\n\n          var remote = createRemote(elt, offset, cb);\n          remote.watch();\n          return remote;\n        }\n\n        function createRemote(elt, offset, cb) {\n          function watch() {\n            watches.add(elt, offset, cb);\n          }\n\n          function dispose() {\n            watches.remove(elt);\n          }\n\n          return {\n            watch: watch,\n            dispose: dispose\n          };\n        }\n\n        function watchInViewport(elt, offset, cb) {\n          if (isVisible(elt, offset)) {\n            watches.remove(elt);\n            cb(elt);\n          }\n        }\n\n        function isVisible(elt, offset) {\n          if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n            return false;\n          }\n\n          // Check if the element is visible\n          // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n          if (!elt.offsetWidth || !elt.offsetHeight) {\n            return false;\n          }\n\n          var eltRect = elt.getBoundingClientRect();\n          var viewport = {};\n\n          if (container === global.document.body) {\n            viewport = {\n              top: -offset,\n              left: -offset,\n              right: global.document.documentElement.clientWidth + offset,\n              bottom: global.document.documentElement.clientHeight + offset\n            };\n          } else {\n            var containerRect = container.getBoundingClientRect();\n            viewport = {\n              top: containerRect.top - offset,\n              left: containerRect.left - offset,\n              right: containerRect.right + offset,\n              bottom: containerRect.bottom + offset\n            };\n          }\n\n          // The element must overlap with the visible part of the viewport\n          var visible =\n            (\n              (eltRect.right > viewport.left) &&\n              (eltRect.left < viewport.right) &&\n              (eltRect.bottom > viewport.top) &&\n              (eltRect.top < viewport.bottom)\n            );\n\n          return visible;\n        }\n\n        return {\n          container: container,\n          isInViewport: isInViewport\n        };\n      }\n\n      function createWatches() {\n        var watches = [];\n\n        function add(elt, offset, cb) {\n          if (!isWatched(elt)) {\n            watches.push([elt, offset, cb]);\n          }\n        }\n\n        function remove(elt) {\n          var pos = indexOf(elt);\n          if (pos !== -1) {\n            watches.splice(pos, 1);\n          }\n        }\n\n        function indexOf(elt) {\n          for (var i = watches.length - 1; i >= 0; i--) {\n            if (watches[i][0] === elt) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function isWatched(elt) {\n          return indexOf(elt) !== -1;\n        }\n\n        function checkAll(cb) {\n          return function() {\n            for (var i = watches.length - 1; i >= 0; i--) {\n              cb.apply(this, watches[i]);\n            }\n          };\n        }\n\n        return {\n          add: add,\n          remove: remove,\n          isWatched: isWatched,\n          checkAll: checkAll\n        };\n      }\n\n      function observeDOM(watches, container, cb) {\n        var observer = new MutationObserver(watch);\n        var filter = Array.prototype.filter;\n        var concat = Array.prototype.concat;\n\n        observer.observe(container, {\n          childList: true,\n          subtree: true,\n          // changes like style/width/height/display will be catched\n          attributes: true\n        });\n\n        function watch(mutations) {\n          // some new DOM nodes where previously watched\n          // we should check their positions\n          if (mutations.some(knownNodes) === true) {\n            setTimeout(cb, 0);\n          }\n        }\n\n        function knownNodes(mutation) {\n          var nodes = concat.call([],\n            Array.prototype.slice.call(mutation.addedNodes),\n            mutation.target\n          );\n          return filter.call(nodes, watches.isWatched).length > 0;\n        }\n      }\n\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  }\n  /******/\n]);","site":{"data":{}},"excerpt":"","more":"/******/\n(function(modules) { // webpackBootstrap\n  /******/ // The module cache\n  /******/\n  var installedModules = {};\n  /******/\n  /******/ // The require function\n  /******/\n  function __webpack_require__(moduleId) {\n    /******/\n    /******/ // Check if module is in cache\n    /******/\n    if (installedModules[moduleId])\n    /******/\n      return installedModules[moduleId].exports;\n    /******/\n    /******/ // Create a new module (and put it into the cache)\n    /******/\n    var module = installedModules[moduleId] = {\n      /******/\n      exports: {},\n      /******/\n      id: moduleId,\n      /******/\n      loaded: false\n        /******/\n    };\n    /******/\n    /******/ // Execute the module function\n    /******/\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n    /******/ // Flag the module as loaded\n    /******/\n    module.loaded = true;\n    /******/\n    /******/ // Return the exports of the module\n    /******/\n    return module.exports;\n    /******/\n  }\n  /******/\n  /******/\n  /******/ // expose the modules object (__webpack_modules__)\n  /******/\n  __webpack_require__.m = modules;\n  /******/\n  /******/ // expose the module cache\n  /******/\n  __webpack_require__.c = installedModules;\n  /******/\n  /******/ // __webpack_public_path__\n  /******/\n  __webpack_require__.p = \"/dist/\";\n  /******/\n  /******/ // Load entry module and return exports\n  /******/\n  return __webpack_require__(0);\n  /******/\n})\n/************************************************************************/\n/******/\n([\n  /* 0 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    'use strict';\n\n    __webpack_require__(1);\n\n    var _view = __webpack_require__(2);\n\n    var _view2 = _interopRequireDefault(_view);\n\n    function _interopRequireDefault(obj) {\n      return obj && obj.__esModule ? obj : {\n        default: obj\n      };\n    }\n\n    /**\n     * @name impush-client \n     * @description 这个项目让我发家致富…\n     * @date 2016-12-1\n     */\n\n    var _collection = [];\n    var _count = 0;\n    var searchData;\n\n    function addMask(elem) {\n      var rect = elem.getBoundingClientRect();\n      var style = getComputedStyle(elem, null);\n\n      var mask = document.createElement('i');\n      mask.className = 'icon-film';\n      mask.style.color = '#fff';\n      mask.style.fontSize = '26px';\n      mask.style.position = 'absolute';\n      mask.style.right = '10px';\n      mask.style.bottom = '10px';\n      mask.style.zIndex = 1;\n      elem.parentNode.appendChild(mask);\n    }\n\n    var createVideoIncon = function createVideoIncon() {\n      var $videoImg = document.querySelectorAll('.thumb a[data-type=\"video\"]');\n      for (var i = 0, len = $videoImg.length; i < len; i++) {\n        addMask($videoImg[i]);\n      }\n    };\n    var render = function render(res) {\n      var ulTmpl = \"\";\n      for (var j = 0, len2 = res.list.length; j < len2; j++) {\n        var data = res.list[j].arr;\n        var liTmpl = \"\";\n        for (var i = 0, len = data.link.length; i < len; i++) {\n          var minSrc = 'https://raw.githubusercontent.com/possibleit/gitpage-backup/blob/main/photos/' + data.link[i] + '.min.jpg';\n          var src = 'https://raw.githubusercontent.com/possibleit/gitpage-backup/blob/main/min_photos/' + data.link[i];\n          var type = data.type[i];\n          var target = src + (type === 'video' ? '.mp4' : '.jpg');\n          src += '.jpg';\n\n          liTmpl += '<figure class=\"thumb\" itemprop=\"associatedMedia\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\\\n                <a href=\"' + src + '\" itemprop=\"contentUrl\" data-size=\"640x640\" data-type=\"' + type + '\" data-target=\"' + target + '\">\\\n                  <img class=\"reward-img\" data-type=\"' + type + '\" data-src=\"' + minSrc + '\" src=\"/assets/img/empty.png\" itemprop=\"thumbnail\" onload=\"lzld(this)\">\\\n                </a>\\\n                <figcaption style=\"display:none\" itemprop=\"caption description\">' + data.text[i] + '</figcaption>\\\n            </figure>';\n        }\n        ulTmpl = ulTmpl + '<section class=\"archives album\"><h1 class=\"year\">' + data.year + '<em>' + data.month + '月</em></h1>\\\n        <ul class=\"img-box-ul\">' + liTmpl + '</ul>\\\n        </section>';\n      }\n      document.querySelector('.instagram').innerHTML = '<div class=\"photos\" itemscope=\"\" itemtype=\"http://schema.org/ImageGallery\">' + ulTmpl + '</div>';\n      createVideoIncon();\n      _view2.default.init();\n    };\n\n    var replacer = function replacer(str) {\n      var arr = str.split(\"/\");\n      return \"/assets/ins/\" + arr[arr.length - 1];\n    };\n\n    var ctrler = function ctrler(data) {\n      var imgObj = {};\n      for (var i = 0, len = data.length; i < len; i++) {\n        var y = data[i].y;\n        var m = data[i].m;\n        var src = replacer(data[i].src);\n        var text = data[i].text;\n        var key = y + \"\" + ((m + \"\").length == 1 ? \"0\" + m : m);\n        if (imgObj[key]) {\n          imgObj[key].srclist.push(src);\n          imgObj[key].text.push(text);\n        } else {\n          imgObj[key] = {\n            year: y,\n            month: m,\n            srclist: [src],\n            text: [text]\n          };\n        }\n      }\n      render(imgObj);\n    };\n\n    function loadData(success) {\n      if (!searchData) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', './data.json?t=' + +new Date(), true);\n\n        xhr.onload = function() {\n          if (this.status >= 200 && this.status < 300) {\n            var res = JSON.parse(this.response);\n            searchData = res;\n            success(searchData);\n          } else {\n            console.error(this.statusText);\n          }\n        };\n\n        xhr.onerror = function() {\n          console.error(this.statusText);\n        };\n\n        xhr.send();\n      } else {\n        success(searchData);\n      }\n    }\n\n    var Ins = {\n      init: function init() {\n        loadData(function(data) {\n          render(data);\n        });\n      }\n    };\n\n    Ins.init();\n\n    // export default impush;\n\n    /***/\n  },\n  /* 1 */\n  /***/\n  function(module, exports, __webpack_require__) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      'use strict';\n\n      var inViewport = __webpack_require__(3);\n      var lazyAttrs = ['data-src'];\n\n      global.lzld = lazyload();\n\n      // Provide libs using getAttribute early to get the good src\n      // and not the fake data-src\n      replaceGetAttribute('Image');\n      replaceGetAttribute('IFrame');\n\n      function registerLazyAttr(attr) {\n        if (indexOf.call(lazyAttrs, attr) === -1) {\n          lazyAttrs.push(attr);\n        }\n      }\n\n      function lazyload(opts) {\n        opts = merge({\n          'offset': 333,\n          'src': 'data-src',\n          'container': false\n        }, opts || {});\n\n        if (typeof opts.src === 'string') {\n          registerLazyAttr(opts.src);\n        }\n\n        var elts = [];\n\n        function show(elt) {\n          var src = findRealSrc(elt);\n\n          if (src) {\n            elt.src = src;\n          }\n\n          elt.setAttribute('data-lzled', true);\n          elts[indexOf.call(elts, elt)] = null;\n        }\n\n        function findRealSrc(elt) {\n          if (typeof opts.src === 'function') {\n            return opts.src(elt);\n          }\n\n          return elt.getAttribute(opts.src);\n        }\n\n        function register(elt) {\n          elt.onload = null;\n          elt.removeAttribute('onload');\n          elt.onerror = null;\n          elt.removeAttribute('onerror');\n\n          if (indexOf.call(elts, elt) === -1) {\n            inViewport(elt, opts, show);\n          }\n        }\n\n        return register;\n      }\n\n      function replaceGetAttribute(elementName) {\n        var fullname = 'HTML' + elementName + 'Element';\n        if (fullname in global === false) {\n          return;\n        }\n\n        var original = global[fullname].prototype.getAttribute;\n        global[fullname].prototype.getAttribute = function(name) {\n          if (name === 'src') {\n            var realSrc;\n            for (var i = 0, max = lazyAttrs.length; i < max; i++) {\n              realSrc = original.call(this, lazyAttrs[i]);\n              if (realSrc) {\n                break;\n              }\n            }\n\n            return realSrc || original.call(this, name);\n          }\n\n          // our own lazyloader will go through theses lines\n          // because we use getAttribute(opts.src)\n          return original.call(this, name);\n        };\n      }\n\n      function merge(defaults, opts) {\n        for (var name in defaults) {\n          if (opts[name] === undefined) {\n            opts[name] = defaults[name];\n          }\n        }\n\n        return opts;\n      }\n\n      // http://webreflection.blogspot.fr/2011/06/partial-polyfills.html\n      function indexOf(value) {\n        for (var i = this.length; i-- && this[i] !== value;) {}\n        return i;\n      }\n\n      module.exports = lazyload;\n\n      // export default impush;\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  },\n  /* 2 */\n  /***/\n  function(module, exports) {\n\n    'use strict';\n\n    var initPhotoSwipeFromDOM = function initPhotoSwipeFromDOM(gallerySelector) {\n\n      // parse slide data (url, title, size ...) from DOM elements \n      // (children of gallerySelector)\n      var parseThumbnailElements = function parseThumbnailElements(el) {\n        el = el.parentNode.parentNode;\n        var thumbElements = el.getElementsByClassName('thumb'),\n          numNodes = thumbElements.length,\n          items = [],\n          figureEl,\n          linkEl,\n          size,\n          type,\n          // video or not\n          target,\n          item;\n\n        for (var i = 0; i < numNodes; i++) {\n\n          figureEl = thumbElements[i]; // \n\n          // include only element nodes \n          if (figureEl.nodeType !== 1) {\n            continue;\n          }\n\n          linkEl = figureEl.children[0]; // \n\n          size = linkEl.getAttribute('data-size').split('x');\n          type = linkEl.getAttribute('data-type');\n          target = linkEl.getAttribute('data-target');\n          // create slide object\n          item = {\n            src: linkEl.getAttribute('href'),\n            w: parseInt(size[0], 10),\n            h: parseInt(size[1], 10)\n          };\n\n          if (figureEl.children.length > 1) {\n            item.title = figureEl.children[1].innerHTML;\n          }\n\n          if (linkEl.children.length > 0) {\n            item.msrc = linkEl.children[0].getAttribute('src');\n            item.type = type;\n            item.target = target;\n            item.html = '<video src=\"' + target + '\" controls=\"controls\" autoplay=\"autoplay\"></video>';\n            if (type === 'video') {\n              //item.src = null;\n            }\n          }\n\n          item.el = figureEl; // save link to element for getThumbBoundsFn\n          items.push(item);\n        }\n\n        return items;\n      };\n\n      // find nearest parent element\n      var closest = function closest(el, fn) {\n        return el && (fn(el) ? el : closest(el.parentNode, fn));\n      };\n\n      // triggers when user clicks on thumbnail\n      var onThumbnailsClick = function onThumbnailsClick(e) {\n        e = e || window.event;\n        e.preventDefault ? e.preventDefault() : e.returnValue = false;\n\n        var eTarget = e.target || e.srcElement;\n\n        // find root element of slide\n        var clickedListItem = closest(eTarget, function(el) {\n          return el.tagName && el.tagName.toUpperCase() === 'FIGURE';\n        });\n\n        if (!clickedListItem) {\n          return;\n        }\n\n        // find index of clicked item by looping through all child nodes\n        // alternatively, you may define index via data- attribute\n        var clickedGallery = clickedListItem.parentNode,\n\n          // childNodes = clickedListItem.parentNode.childNodes,\n          // numChildNodes = childNodes.length,\n          childNodes = document.getElementsByClassName('thumb'),\n          numChildNodes = childNodes.length,\n          nodeIndex = 0,\n          index;\n\n        for (var i = 0; i < numChildNodes; i++) {\n          if (childNodes[i].nodeType !== 1) {\n            continue;\n          }\n\n          if (childNodes[i] === clickedListItem) {\n            index = nodeIndex;\n            break;\n          }\n          nodeIndex++;\n        }\n\n        if (index >= 0) {\n          // open PhotoSwipe if valid index found\n          openPhotoSwipe(index, clickedGallery);\n        }\n        return false;\n      };\n\n      // parse picture index and gallery index from URL (#&pid=1&gid=2)\n      var photoswipeParseHash = function photoswipeParseHash() {\n        var hash = window.location.hash.substring(1),\n          params = {};\n\n        if (hash.length < 5) {\n          return params;\n        }\n\n        var vars = hash.split('&');\n        for (var i = 0; i < vars.length; i++) {\n          if (!vars[i]) {\n            continue;\n          }\n          var pair = vars[i].split('=');\n          if (pair.length < 2) {\n            continue;\n          }\n          params[pair[0]] = pair[1];\n        }\n\n        if (params.gid) {\n          params.gid = parseInt(params.gid, 10);\n        }\n\n        return params;\n      };\n\n      var openPhotoSwipe = function openPhotoSwipe(index, galleryElement, disableAnimation, fromURL) {\n        var pswpElement = document.querySelectorAll('.pswp')[0],\n          gallery,\n          options,\n          items;\n\n        items = parseThumbnailElements(galleryElement);\n        // define options (if needed)\n        options = {\n\n          // define gallery index (for URL)\n          galleryUID: galleryElement.getAttribute('data-pswp-uid'),\n\n          getThumbBoundsFn: function getThumbBoundsFn(index) {\n            // See Options -> getThumbBoundsFn section of documentation for more info\n            var thumbnail = items[index].el.getElementsByTagName('img')[0],\n              // find thumbnail\n              pageYScroll = window.pageYOffset || document.documentElement.scrollTop,\n              rect = thumbnail.getBoundingClientRect();\n\n            return {\n              x: rect.left,\n              y: rect.top + pageYScroll,\n              w: rect.width\n            };\n          }\n\n        };\n\n        // PhotoSwipe opened from URL\n        if (fromURL) {\n          if (options.galleryPIDs) {\n            // parse real index when custom PIDs are used \n            // http://photoswipe.com/documentation/faq.html#custom-pid-in-url\n            for (var j = 0; j < items.length; j++) {\n              if (items[j].pid == index) {\n                options.index = j;\n                break;\n              }\n            }\n          } else {\n            // in URL indexes start from 1\n            options.index = parseInt(index, 10) - 1;\n          }\n        } else {\n          options.index = parseInt(index, 10);\n        }\n\n        // exit if index not found\n        if (isNaN(options.index)) {\n          return;\n        }\n\n        if (disableAnimation) {\n          options.showAnimationDuration = 0;\n        }\n\n        // Pass data to PhotoSwipe and initialize it\n        gallery = new PhotoSwipe(pswpElement, PhotoSwipeUI_Default, items, options);\n        gallery.init();\n\n        var $tempVideo;\n        var stopVideoHandle = function stopVideoHandle() {\n          if ($tempVideo) {\n            $tempVideo.remove();\n            $tempVideo = null;\n          }\n        };\n        var changeHandle = function changeHandle() {\n          var item = gallery.currItem;\n          stopVideoHandle();\n          if (item.type === 'video') {\n            var $ctn = item.container;\n            var style = $ctn.getElementsByClassName('pswp__img')[0].style;\n            var $video = document.createElement('video');\n            $video.setAttribute('autoplay', 'autoplay');\n            $video.setAttribute('controls', 'controls');\n            $video.setAttribute('src', item.target);\n            $video.style.width = style.width;\n            $video.style.height = style.height;\n            $video.style.position = 'absolute';\n            $video.style.zIndex = 2;\n            $tempVideo = $video;\n            $ctn.appendChild($video);\n          }\n        };\n        gallery.listen('initialZoomIn', changeHandle);\n        gallery.listen('afterChange', changeHandle);\n        gallery.listen('initialZoomOut', stopVideoHandle);\n      };\n\n      // loop through all gallery elements and bind events\n      var galleryElements = document.querySelectorAll(gallerySelector);\n      for (var i = 0, l = galleryElements.length; i < l; i++) {\n        galleryElements[i].setAttribute('data-pswp-uid', i + 1);\n        galleryElements[i].onclick = onThumbnailsClick;\n      }\n\n      // Parse URL and open gallery if it contains #&pid=3&gid=1\n      var hashData = photoswipeParseHash();\n      if (hashData.pid && hashData.gid) {\n        openPhotoSwipe(hashData.pid, galleryElements[hashData.gid - 1], true, true);\n      }\n    };\n\n    var Viewer = function() {\n      function init() {\n        initPhotoSwipeFromDOM('.photos');\n      }\n      return {\n        init: init\n      };\n    }();\n\n    module.exports = Viewer;\n\n    /***/\n  },\n  /* 3 */\n  /***/\n  function(module, exports) {\n\n    /* WEBPACK VAR INJECTION */\n    (function(global) {\n      module.exports = inViewport;\n\n      var instances = [];\n      var supportsMutationObserver = typeof global.MutationObserver === 'function';\n\n      function inViewport(elt, params, cb) {\n        var opts = {\n          container: global.document.body,\n          offset: 0\n        };\n\n        if (params === undefined || typeof params === 'function') {\n          cb = params;\n          params = {};\n        }\n\n        var container = opts.container = params.container || opts.container;\n        var offset = opts.offset = params.offset || opts.offset;\n\n        for (var i = 0; i < instances.length; i++) {\n          if (instances[i].container === container) {\n            return instances[i].isInViewport(elt, offset, cb);\n          }\n        }\n\n        return instances[\n          instances.push(createInViewport(container)) - 1\n        ].isInViewport(elt, offset, cb);\n      }\n\n      function addEvent(el, type, fn) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + type, fn);\n        } else {\n          el.addEventListener(type, fn, false);\n        }\n      }\n\n      function debounce(func, wait, immediate) {\n        var timeout;\n        return function() {\n          var context = this,\n            args = arguments;\n          var callNow = immediate && !timeout;\n          clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n          if (callNow) func.apply(context, args);\n\n          function later() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n          }\n        };\n      }\n\n      // https://github.com/jquery/sizzle/blob/3136f48b90e3edc84cbaaa6f6f7734ef03775a07/sizzle.js#L708\n      var contains = function() {\n        if (!global.document) {\n          return true;\n        }\n        return global.document.documentElement.compareDocumentPosition ?\n          function(a, b) {\n            return !!(a.compareDocumentPosition(b) & 16);\n          } :\n          global.document.documentElement.contains ?\n          function(a, b) {\n            return a !== b && (a.contains ? a.contains(b) : false);\n          } :\n          function(a, b) {\n            while (b = b.parentNode) {\n              if (b === a) {\n                return true;\n              }\n            }\n            return false;\n          };\n      }\n\n      function createInViewport(container) {\n        var watches = createWatches();\n\n        var scrollContainer = container === global.document.body ? global : container;\n        var debouncedCheck = debounce(watches.checkAll(watchInViewport), 15);\n\n        addEvent(scrollContainer, 'scroll', debouncedCheck);\n\n        if (scrollContainer === global) {\n          addEvent(global, 'resize', debouncedCheck);\n        }\n\n        if (supportsMutationObserver) {\n          observeDOM(watches, container, debouncedCheck);\n        }\n\n        // failsafe check, every 200ms we check for visible images\n        // usecase: a hidden parent containing eleements\n        // when the parent becomes visible, we have no event that the children\n        // became visible\n        setInterval(debouncedCheck, 150);\n\n        function isInViewport(elt, offset, cb) {\n          if (!cb) {\n            return isVisible(elt, offset);\n          }\n\n          var remote = createRemote(elt, offset, cb);\n          remote.watch();\n          return remote;\n        }\n\n        function createRemote(elt, offset, cb) {\n          function watch() {\n            watches.add(elt, offset, cb);\n          }\n\n          function dispose() {\n            watches.remove(elt);\n          }\n\n          return {\n            watch: watch,\n            dispose: dispose\n          };\n        }\n\n        function watchInViewport(elt, offset, cb) {\n          if (isVisible(elt, offset)) {\n            watches.remove(elt);\n            cb(elt);\n          }\n        }\n\n        function isVisible(elt, offset) {\n          if (!contains(global.document.documentElement, elt) || !contains(global.document.documentElement, container)) {\n            return false;\n          }\n\n          // Check if the element is visible\n          // https://github.com/jquery/jquery/blob/740e190223d19a114d5373758127285d14d6b71e/src/css/hiddenVisibleSelectors.js\n          if (!elt.offsetWidth || !elt.offsetHeight) {\n            return false;\n          }\n\n          var eltRect = elt.getBoundingClientRect();\n          var viewport = {};\n\n          if (container === global.document.body) {\n            viewport = {\n              top: -offset,\n              left: -offset,\n              right: global.document.documentElement.clientWidth + offset,\n              bottom: global.document.documentElement.clientHeight + offset\n            };\n          } else {\n            var containerRect = container.getBoundingClientRect();\n            viewport = {\n              top: containerRect.top - offset,\n              left: containerRect.left - offset,\n              right: containerRect.right + offset,\n              bottom: containerRect.bottom + offset\n            };\n          }\n\n          // The element must overlap with the visible part of the viewport\n          var visible =\n            (\n              (eltRect.right > viewport.left) &&\n              (eltRect.left < viewport.right) &&\n              (eltRect.bottom > viewport.top) &&\n              (eltRect.top < viewport.bottom)\n            );\n\n          return visible;\n        }\n\n        return {\n          container: container,\n          isInViewport: isInViewport\n        };\n      }\n\n      function createWatches() {\n        var watches = [];\n\n        function add(elt, offset, cb) {\n          if (!isWatched(elt)) {\n            watches.push([elt, offset, cb]);\n          }\n        }\n\n        function remove(elt) {\n          var pos = indexOf(elt);\n          if (pos !== -1) {\n            watches.splice(pos, 1);\n          }\n        }\n\n        function indexOf(elt) {\n          for (var i = watches.length - 1; i >= 0; i--) {\n            if (watches[i][0] === elt) {\n              return i;\n            }\n          }\n          return -1;\n        }\n\n        function isWatched(elt) {\n          return indexOf(elt) !== -1;\n        }\n\n        function checkAll(cb) {\n          return function() {\n            for (var i = watches.length - 1; i >= 0; i--) {\n              cb.apply(this, watches[i]);\n            }\n          };\n        }\n\n        return {\n          add: add,\n          remove: remove,\n          isWatched: isWatched,\n          checkAll: checkAll\n        };\n      }\n\n      function observeDOM(watches, container, cb) {\n        var observer = new MutationObserver(watch);\n        var filter = Array.prototype.filter;\n        var concat = Array.prototype.concat;\n\n        observer.observe(container, {\n          childList: true,\n          subtree: true,\n          // changes like style/width/height/display will be catched\n          attributes: true\n        });\n\n        function watch(mutations) {\n          // some new DOM nodes where previously watched\n          // we should check their positions\n          if (mutations.some(knownNodes) === true) {\n            setTimeout(cb, 0);\n          }\n        }\n\n        function knownNodes(mutation) {\n          var nodes = concat.call([],\n            Array.prototype.slice.call(mutation.addedNodes),\n            mutation.target\n          );\n          return filter.call(nodes, watches.isWatched).length > 0;\n        }\n      }\n\n      /* WEBPACK VAR INJECTION */\n    }.call(exports, (function() {\n      return this;\n    }())))\n\n    /***/\n  }\n  /******/\n]);"},{"title":"tags","date":"2022-04-12T15:37:02.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-04-12 23:37:02\ntype: \"tags\"        \ncomments: false     \n---\n","updated":"2022-04-12T15:38:01.700Z","path":"tags/index.html","layout":"page","_id":"cl295h28a000ij8uc5rusbrp3","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"","source":"photos/lazyload.min.js","raw":"","date":"2022-04-13T14:04:29.889Z","updated":"2022-04-13T14:04:10.000Z","path":"photos/lazyload.min.js","layout":"false","title":"","comments":1,"_id":"cl295h28b000kj8ucbvoc81cy","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2022-04-13 随笔","abbrlink":21283,"date":"2022-04-12T15:42:03.000Z","_content":"\n#### 2022-04-13,下了一整天的雨，希望明天心情更美丽些！\n","source":"_posts/2022-04-13.md","raw":"---\ntitle: 2022-04-13 随笔\ntags:\n  - essay\nabbrlink: 21283\ndate: 2022-04-12 23:42:03\n---\n\n#### 2022-04-13,下了一整天的雨，希望明天心情更美丽些！\n","slug":"2022-04-13","published":1,"updated":"2022-04-13T15:12:20.225Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl295h2760001j8uc323y337y","content":"<h4 id=\"2022-04-13-下了一整天的雨，希望明天心情更美丽些！\"><a href=\"#2022-04-13-下了一整天的雨，希望明天心情更美丽些！\" class=\"headerlink\" title=\"2022-04-13,下了一整天的雨，希望明天心情更美丽些！\"></a>2022-04-13,下了一整天的雨，希望明天心情更美丽些！</h4>","site":{"data":{}},"excerpt":"","more":"<h4 id=\"2022-04-13-下了一整天的雨，希望明天心情更美丽些！\"><a href=\"#2022-04-13-下了一整天的雨，希望明天心情更美丽些！\" class=\"headerlink\" title=\"2022-04-13,下了一整天的雨，希望明天心情更美丽些！\"></a>2022-04-13,下了一整天的雨，希望明天心情更美丽些！</h4>"},{"title":"hahsmap","abbrlink":21283,"date":"2022-04-12T15:42:03.000Z","_content":"# HashMap源码分析（2）\n---\n\n这几天因为疫情问题，一直待在家里，前几天还得了流感，咳嗽咽痛，提心吊胆的。昨天终于好转，也接到通知延迟开学。想着在家也要保持好状态，好好学习，就想给自己找点事干。刚好之前的一篇博客对hashmap分析的不是很透彻，刚好趁现在的时间，好好写写博客，同时也提高一下自己。学疏才浅，有不当之处，望指出。\n\n---\n\njava version ：jdk 1.8\n\n---\n\n<!-- more -->\n\n### 1. 构造方法\n\n惯例，先看源码\n```java\n    public HashMap(int initialCapacity, float loadFactor) {\n        if (initialCapacity < 0)\n            throw new IllegalArgumentException(\"Illegal initial capacity: \" +\n                                               initialCapacity);\n        if (initialCapacity > MAXIMUM_CAPACITY)\n            initialCapacity = MAXIMUM_CAPACITY;\n        if (loadFactor <= 0 || Float.isNaN(loadFactor))\n            throw new IllegalArgumentException(\"Illegal load factor: \" +\n                                               loadFactor);\n        this.loadFactor = loadFactor;\n        this.threshold = tableSizeFor(initialCapacity);\n    }\n\n    public HashMap(int initialCapacity) {\n        this(initialCapacity, DEFAULT_LOAD_FACTOR);\n    }\n\n    public HashMap() {\n        this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted\n    }\n\n    public HashMap(Map<? extends K, ? extends V> m) {\n        this.loadFactor = DEFAULT_LOAD_FACTOR;\n        putMapEntries(m, false);\n    }\n```\n在分析这四个构造方法之前，还需要了解hashmap中的几个属性，  \n- loadFactor : 装载因子  \n- threshold  : 扩容阈值，也就是说当hashmap中的数据个数超过这个阈值，就扩容  \n\nhashmap前三个构造方法都是初始化参数，在这些构造方法中并没有初始化节点数组，二十初始化了装载因子和扩容阈值这两个参数，在`put`方法中根据扩容阈值来初始化数组。  \n```python\nif ((tab = table) == null || (n = tab.length) == 0)\n    n = (tab = resize()).length;\n```\n由此可以看出初始化数组使用的是`resize()`方法。\n```java\n    final Node<K,V>[] resize() {\n        // 这段代码中关于扩容的分支被我删除了，留下的都是初始化数组的分支 \n        Node<K,V>[] oldTab = table;\n        int oldCap = (oldTab == null) ? 0 : oldTab.length;// 旧容量，初始化数组时为0\n        int oldThr = threshold;\n        int newCap, newThr = 0;\n        if (oldThr > 0) // 是否指定了数组大小\n            newCap = oldThr;\n        else { //使用默认参数\n            newCap = DEFAULT_INITIAL_CAPACITY;\n            newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);\n        }\n        if (newThr == 0) { // 判断数组大小是否越界\n            float ft = (float)newCap * loadFactor;\n            newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ?\n                      (int)ft : Integer.MAX_VALUE);\n        }\n        threshold = newThr;\n        @SuppressWarnings({\"rawtypes\",\"unchecked\"})\n        Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap];\n        table = newTab;\n        return newTab;\n    }\n```\n构造方法一中还是用了另一个方法` this.threshold = tableSizeFor(initialCapacity)`，也就是说既指定了初始容量又指定了装载因子时，使用这个方法确定扩容阈值。\n```java\n    static final int tableSizeFor(int cap) {\n        // Integer.numberOfLeadingZeros(cap - 1)`方法返回32位int类型数高位的0的个数。这里的源码巧妙地使用了二分法使用了四次右移操作，找出了高位0个数\n        int n = -1 >>> Integer.numberOfLeadingZeros(cap - 1);\n        return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n    }\n```\n\n这个方法的作用是找到大于等于 `initialCapacity` 的最小的 2 的幂。假设输入的值是10 \n\n```\ncap = 10,cap - 1 = 9,高位的0有28个\nn = -1 >>> 28\n源码 10000000000000000000000000000001\n反码 11111111111111111111111111111110\n补码 11111111111111111111111111111111\n右移 00000000000000000000000000001111\nn = 8 + 4 + 2 + 1 = 15\nn + 1 = 16\n```\n\n分析以上源码我们知道，如果默认不传入参数，那么hashmap初始化为大小为16，装载因子为0.75的数组。如果传入的有初始容量，那么数组大小会被初始化为大于等于给定值的最小的2的幂。之所以是2的幂，在之后求hash值时会用到。\n\n### 2. put方法\n惯例，先看源码\n```java\n    final V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n        Node<K,V>[] tab; Node<K,V> p; int n, i;\n        if ((tab = table) == null || (n = tab.length) == 0)\n            // 数组未初始化则调用resize初始化\n            n = (tab = resize()).length;\n        if ((p = tab[i = (n - 1) & hash]) == null)\n            tab[i] = newNode(hash, key, value, null);\n        else {\n            Node<K,V> e; K k;\n            if (p.hash == hash &&\n                ((k = p.key) == key || (key != null && key.equals(k))))\n                e = p;\n            else if (p instanceof TreeNode)\n                e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n            else {\n                for (int binCount = 0; ; ++binCount) {\n                    if ((e = p.next) == null) {\n                        p.next = newNode(hash, key, value, null);\n                        if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                            treeifyBin(tab, hash);\n                        break;\n                    }\n                    if (e.hash == hash &&\n                        ((k = e.key) == key || (key != null && key.equals(k))))\n                        break;\n                    p = e;\n                }\n            }\n            if (e != null) { // existing mapping for key\n                V oldValue = e.value;\n                if (!onlyIfAbsent || oldValue == null)\n                    e.value = value;\n                afterNodeAccess(e);\n                return oldValue;\n            }\n        }\n        ++modCount;\n        if (++size > threshold)\n            resize();\n        afterNodeInsertion(evict);\n        return null;\n    }\n```\n\n具体的代码执行流程上一篇博客里已经分析了，这里只分析几点。  \n- hash方法  \n```java\n    static final int hash(Object key) {\n        int h;\n        return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n    }\n```  \nhashmap的`hash`方法会首先调用key的`hashCode()`方法，得到一个int类型的值，然后将其右移16位，并于原来的值按位异或运算。这么做的原因是，为了有更好的散列性同时又有较好的性能。因为计算数组下标时（`p = tab[i = (n - 1) & hash]`）是仅有hash值的低位参与运算，而这个方法将原来的值高位与低位异或之后放到低位，将高位也参与到运算中，所以具有较好的散列性。同时只是进行异或运算，也减小了系统开销。\n\n\n- 插入null键值对  \n从`hash`方法中可以看到，当插入的key为null时，方法返回0，而`p = tab[i = (n - 1) & hash]`计算下表使用了与方法，所以最终得到的下标为0，也就是说插入到数组的第一个位置。\n\n### 3. 扩容操作\n惯例，先看源码\n```java\nfinal Node<K,V>[] resize() {\n        Node<K,V>[] oldTab = table;\n        int oldCap = (oldTab == null) ? 0 : oldTab.length;\n        int oldThr = threshold;\n        int newCap, newThr = 0;\n        if (oldCap > 0) {\n            if (oldCap >= MAXIMUM_CAPACITY) {\n                threshold = Integer.MAX_VALUE;\n                return oldTab;\n            }\n            else if ((newCap = oldCap << 1) < MAXIMUM_CAPACITY &&\n                     oldCap >= DEFAULT_INITIAL_CAPACITY)\n                // 扩容为原来大小的两倍\n                newThr = oldThr << 1; // double threshold\n        }\n        if (newThr == 0) {\n            float ft = (float)newCap * loadFactor;\n            newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ?\n                      (int)ft : Integer.MAX_VALUE);\n        }\n        threshold = newThr;\n        @SuppressWarnings({\"rawtypes\",\"unchecked\"})\n        Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap];\n        table = newTab;\n        if (oldTab != null) {\n            for (int j = 0; j < oldCap; ++j) {\n                Node<K,V> e;\n                if ((e = oldTab[j]) != null) {\n                    oldTab[j] = null;\n                    if (e.next == null)\n                        newTab[e.hash & (newCap - 1)] = e;\n                    else if (e instanceof TreeNode)\n                        ((TreeNode<K,V>)e).split(this, newTab, j, oldCap);\n                    else { // preserve order\n                        Node<K,V> loHead = null, loTail = null;\n                        Node<K,V> hiHead = null, hiTail = null;\n                        Node<K,V> next;\n                        do {\n                            next = e.next;\n                            if ((e.hash & oldCap) == 0) {\n                                if (loTail == null)\n                                    loHead = e;\n                                else\n                                    loTail.next = e;\n                                loTail = e;\n                            }\n                            else {\n                                if (hiTail == null)\n                                    hiHead = e;\n                                else\n                                    hiTail.next = e;\n                                hiTail = e;\n                            }\n                        } while ((e = next) != null);\n                        if (loTail != null) {\n                            loTail.next = null;\n                            newTab[j] = loHead;\n                        }\n                        if (hiTail != null) {\n                            hiTail.next = null;\n                            newTab[j + oldCap] = hiHead;\n                        }\n                    }\n                }\n            }\n        }\n        return newTab;\n    }\n```\n因为hashmap扩容之后大小为原来的二倍，旧数组中的元素在新数组中会重新计算下标。计算的方法是数组容量的值减一后与元素key的hash值做与运算。因此对于每个元素会有两种情况。\n- 假设数组容量为16\n```\ncap - 1 = 15 = 1111\nkey1  00000000000000000000000000011001\ncap-1 00000000000000000000000000001111\nhash1 00000000000000000000000000001001 = 9\n\nkey1  00000000000000000000000000001001\ncap-1 00000000000000000000000000001111\nhash1 00000000000000000000000000001001 = 9\n```\n- 扩容之后数组容量为32\n```\ncap - 1 = 31 = 11111\nkey1  00000000000000000000000000011001\ncap-1 00000000000000000000000000011111\nhash1 00000000000000000000000000011001 = 25\n\nkey1  00000000000000000000000000001001\ncap-1 00000000000000000000000000011111\nhash1 00000000000000000000000000001001 = 9\n```\n也就是说，扩容后每个元素，要么在原来的位置，要么移动到原来的位置加上oldcap所在的位置。\n### 4. hashmap线程不安全的原因\n\n- 因为hashmap的put方法不是同步的，假如有两个线程同时put两个hash值相同的数据，那么不管是头插法还是尾插法，最终一定会有一个数据丢失。\n- jdk1.8之前，hahsmap插入元素使用头插法，多线程操作时，会出现循环链表，此时get数据时会造成死循环。\n\n","source":"_posts/hahsmap.md","raw":"---\ntitle: hahsmap\ntags:\n  - java\nabbrlink: 21283\ndate: 2022-04-12 23:42:03\n---\n# HashMap源码分析（2）\n---\n\n这几天因为疫情问题，一直待在家里，前几天还得了流感，咳嗽咽痛，提心吊胆的。昨天终于好转，也接到通知延迟开学。想着在家也要保持好状态，好好学习，就想给自己找点事干。刚好之前的一篇博客对hashmap分析的不是很透彻，刚好趁现在的时间，好好写写博客，同时也提高一下自己。学疏才浅，有不当之处，望指出。\n\n---\n\njava version ：jdk 1.8\n\n---\n\n<!-- more -->\n\n### 1. 构造方法\n\n惯例，先看源码\n```java\n    public HashMap(int initialCapacity, float loadFactor) {\n        if (initialCapacity < 0)\n            throw new IllegalArgumentException(\"Illegal initial capacity: \" +\n                                               initialCapacity);\n        if (initialCapacity > MAXIMUM_CAPACITY)\n            initialCapacity = MAXIMUM_CAPACITY;\n        if (loadFactor <= 0 || Float.isNaN(loadFactor))\n            throw new IllegalArgumentException(\"Illegal load factor: \" +\n                                               loadFactor);\n        this.loadFactor = loadFactor;\n        this.threshold = tableSizeFor(initialCapacity);\n    }\n\n    public HashMap(int initialCapacity) {\n        this(initialCapacity, DEFAULT_LOAD_FACTOR);\n    }\n\n    public HashMap() {\n        this.loadFactor = DEFAULT_LOAD_FACTOR; // all other fields defaulted\n    }\n\n    public HashMap(Map<? extends K, ? extends V> m) {\n        this.loadFactor = DEFAULT_LOAD_FACTOR;\n        putMapEntries(m, false);\n    }\n```\n在分析这四个构造方法之前，还需要了解hashmap中的几个属性，  \n- loadFactor : 装载因子  \n- threshold  : 扩容阈值，也就是说当hashmap中的数据个数超过这个阈值，就扩容  \n\nhashmap前三个构造方法都是初始化参数，在这些构造方法中并没有初始化节点数组，二十初始化了装载因子和扩容阈值这两个参数，在`put`方法中根据扩容阈值来初始化数组。  \n```python\nif ((tab = table) == null || (n = tab.length) == 0)\n    n = (tab = resize()).length;\n```\n由此可以看出初始化数组使用的是`resize()`方法。\n```java\n    final Node<K,V>[] resize() {\n        // 这段代码中关于扩容的分支被我删除了，留下的都是初始化数组的分支 \n        Node<K,V>[] oldTab = table;\n        int oldCap = (oldTab == null) ? 0 : oldTab.length;// 旧容量，初始化数组时为0\n        int oldThr = threshold;\n        int newCap, newThr = 0;\n        if (oldThr > 0) // 是否指定了数组大小\n            newCap = oldThr;\n        else { //使用默认参数\n            newCap = DEFAULT_INITIAL_CAPACITY;\n            newThr = (int)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);\n        }\n        if (newThr == 0) { // 判断数组大小是否越界\n            float ft = (float)newCap * loadFactor;\n            newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ?\n                      (int)ft : Integer.MAX_VALUE);\n        }\n        threshold = newThr;\n        @SuppressWarnings({\"rawtypes\",\"unchecked\"})\n        Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap];\n        table = newTab;\n        return newTab;\n    }\n```\n构造方法一中还是用了另一个方法` this.threshold = tableSizeFor(initialCapacity)`，也就是说既指定了初始容量又指定了装载因子时，使用这个方法确定扩容阈值。\n```java\n    static final int tableSizeFor(int cap) {\n        // Integer.numberOfLeadingZeros(cap - 1)`方法返回32位int类型数高位的0的个数。这里的源码巧妙地使用了二分法使用了四次右移操作，找出了高位0个数\n        int n = -1 >>> Integer.numberOfLeadingZeros(cap - 1);\n        return (n < 0) ? 1 : (n >= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + 1;\n    }\n```\n\n这个方法的作用是找到大于等于 `initialCapacity` 的最小的 2 的幂。假设输入的值是10 \n\n```\ncap = 10,cap - 1 = 9,高位的0有28个\nn = -1 >>> 28\n源码 10000000000000000000000000000001\n反码 11111111111111111111111111111110\n补码 11111111111111111111111111111111\n右移 00000000000000000000000000001111\nn = 8 + 4 + 2 + 1 = 15\nn + 1 = 16\n```\n\n分析以上源码我们知道，如果默认不传入参数，那么hashmap初始化为大小为16，装载因子为0.75的数组。如果传入的有初始容量，那么数组大小会被初始化为大于等于给定值的最小的2的幂。之所以是2的幂，在之后求hash值时会用到。\n\n### 2. put方法\n惯例，先看源码\n```java\n    final V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n                   boolean evict) {\n        Node<K,V>[] tab; Node<K,V> p; int n, i;\n        if ((tab = table) == null || (n = tab.length) == 0)\n            // 数组未初始化则调用resize初始化\n            n = (tab = resize()).length;\n        if ((p = tab[i = (n - 1) & hash]) == null)\n            tab[i] = newNode(hash, key, value, null);\n        else {\n            Node<K,V> e; K k;\n            if (p.hash == hash &&\n                ((k = p.key) == key || (key != null && key.equals(k))))\n                e = p;\n            else if (p instanceof TreeNode)\n                e = ((TreeNode<K,V>)p).putTreeVal(this, tab, hash, key, value);\n            else {\n                for (int binCount = 0; ; ++binCount) {\n                    if ((e = p.next) == null) {\n                        p.next = newNode(hash, key, value, null);\n                        if (binCount >= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                            treeifyBin(tab, hash);\n                        break;\n                    }\n                    if (e.hash == hash &&\n                        ((k = e.key) == key || (key != null && key.equals(k))))\n                        break;\n                    p = e;\n                }\n            }\n            if (e != null) { // existing mapping for key\n                V oldValue = e.value;\n                if (!onlyIfAbsent || oldValue == null)\n                    e.value = value;\n                afterNodeAccess(e);\n                return oldValue;\n            }\n        }\n        ++modCount;\n        if (++size > threshold)\n            resize();\n        afterNodeInsertion(evict);\n        return null;\n    }\n```\n\n具体的代码执行流程上一篇博客里已经分析了，这里只分析几点。  \n- hash方法  \n```java\n    static final int hash(Object key) {\n        int h;\n        return (key == null) ? 0 : (h = key.hashCode()) ^ (h >>> 16);\n    }\n```  \nhashmap的`hash`方法会首先调用key的`hashCode()`方法，得到一个int类型的值，然后将其右移16位，并于原来的值按位异或运算。这么做的原因是，为了有更好的散列性同时又有较好的性能。因为计算数组下标时（`p = tab[i = (n - 1) & hash]`）是仅有hash值的低位参与运算，而这个方法将原来的值高位与低位异或之后放到低位，将高位也参与到运算中，所以具有较好的散列性。同时只是进行异或运算，也减小了系统开销。\n\n\n- 插入null键值对  \n从`hash`方法中可以看到，当插入的key为null时，方法返回0，而`p = tab[i = (n - 1) & hash]`计算下表使用了与方法，所以最终得到的下标为0，也就是说插入到数组的第一个位置。\n\n### 3. 扩容操作\n惯例，先看源码\n```java\nfinal Node<K,V>[] resize() {\n        Node<K,V>[] oldTab = table;\n        int oldCap = (oldTab == null) ? 0 : oldTab.length;\n        int oldThr = threshold;\n        int newCap, newThr = 0;\n        if (oldCap > 0) {\n            if (oldCap >= MAXIMUM_CAPACITY) {\n                threshold = Integer.MAX_VALUE;\n                return oldTab;\n            }\n            else if ((newCap = oldCap << 1) < MAXIMUM_CAPACITY &&\n                     oldCap >= DEFAULT_INITIAL_CAPACITY)\n                // 扩容为原来大小的两倍\n                newThr = oldThr << 1; // double threshold\n        }\n        if (newThr == 0) {\n            float ft = (float)newCap * loadFactor;\n            newThr = (newCap < MAXIMUM_CAPACITY && ft < (float)MAXIMUM_CAPACITY ?\n                      (int)ft : Integer.MAX_VALUE);\n        }\n        threshold = newThr;\n        @SuppressWarnings({\"rawtypes\",\"unchecked\"})\n        Node<K,V>[] newTab = (Node<K,V>[])new Node[newCap];\n        table = newTab;\n        if (oldTab != null) {\n            for (int j = 0; j < oldCap; ++j) {\n                Node<K,V> e;\n                if ((e = oldTab[j]) != null) {\n                    oldTab[j] = null;\n                    if (e.next == null)\n                        newTab[e.hash & (newCap - 1)] = e;\n                    else if (e instanceof TreeNode)\n                        ((TreeNode<K,V>)e).split(this, newTab, j, oldCap);\n                    else { // preserve order\n                        Node<K,V> loHead = null, loTail = null;\n                        Node<K,V> hiHead = null, hiTail = null;\n                        Node<K,V> next;\n                        do {\n                            next = e.next;\n                            if ((e.hash & oldCap) == 0) {\n                                if (loTail == null)\n                                    loHead = e;\n                                else\n                                    loTail.next = e;\n                                loTail = e;\n                            }\n                            else {\n                                if (hiTail == null)\n                                    hiHead = e;\n                                else\n                                    hiTail.next = e;\n                                hiTail = e;\n                            }\n                        } while ((e = next) != null);\n                        if (loTail != null) {\n                            loTail.next = null;\n                            newTab[j] = loHead;\n                        }\n                        if (hiTail != null) {\n                            hiTail.next = null;\n                            newTab[j + oldCap] = hiHead;\n                        }\n                    }\n                }\n            }\n        }\n        return newTab;\n    }\n```\n因为hashmap扩容之后大小为原来的二倍，旧数组中的元素在新数组中会重新计算下标。计算的方法是数组容量的值减一后与元素key的hash值做与运算。因此对于每个元素会有两种情况。\n- 假设数组容量为16\n```\ncap - 1 = 15 = 1111\nkey1  00000000000000000000000000011001\ncap-1 00000000000000000000000000001111\nhash1 00000000000000000000000000001001 = 9\n\nkey1  00000000000000000000000000001001\ncap-1 00000000000000000000000000001111\nhash1 00000000000000000000000000001001 = 9\n```\n- 扩容之后数组容量为32\n```\ncap - 1 = 31 = 11111\nkey1  00000000000000000000000000011001\ncap-1 00000000000000000000000000011111\nhash1 00000000000000000000000000011001 = 25\n\nkey1  00000000000000000000000000001001\ncap-1 00000000000000000000000000011111\nhash1 00000000000000000000000000001001 = 9\n```\n也就是说，扩容后每个元素，要么在原来的位置，要么移动到原来的位置加上oldcap所在的位置。\n### 4. hashmap线程不安全的原因\n\n- 因为hashmap的put方法不是同步的，假如有两个线程同时put两个hash值相同的数据，那么不管是头插法还是尾插法，最终一定会有一个数据丢失。\n- jdk1.8之前，hahsmap插入元素使用头插法，多线程操作时，会出现循环链表，此时get数据时会造成死循环。\n\n","slug":"hahsmap","published":1,"updated":"2022-04-13T13:53:49.855Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl295h27b0003j8uc51e5dhvi","content":"<h1 id=\"HashMap源码分析（2）\"><a href=\"#HashMap源码分析（2）\" class=\"headerlink\" title=\"HashMap源码分析（2）\"></a>HashMap源码分析（2）</h1><hr>\n<p>这几天因为疫情问题，一直待在家里，前几天还得了流感，咳嗽咽痛，提心吊胆的。昨天终于好转，也接到通知延迟开学。想着在家也要保持好状态，好好学习，就想给自己找点事干。刚好之前的一篇博客对hashmap分析的不是很透彻，刚好趁现在的时间，好好写写博客，同时也提高一下自己。学疏才浅，有不当之处，望指出。</p>\n<hr>\n<p>java version ：jdk 1.8</p>\n<hr>\n<span id=\"more\"></span>\n\n<h3 id=\"1-构造方法\"><a href=\"#1-构造方法\" class=\"headerlink\" title=\"1. 构造方法\"></a>1. 构造方法</h3><p>惯例，先看源码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">HashMap</span><span class=\"params\">(<span class=\"type\">int</span> initialCapacity, <span class=\"type\">float</span> loadFactor)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (initialCapacity &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalArgumentException</span>(<span class=\"string\">&quot;Illegal initial capacity: &quot;</span> +</span><br><span class=\"line\">                                           initialCapacity);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (initialCapacity &gt; MAXIMUM_CAPACITY)</span><br><span class=\"line\">        initialCapacity = MAXIMUM_CAPACITY;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (loadFactor &lt;= <span class=\"number\">0</span> || Float.isNaN(loadFactor))</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalArgumentException</span>(<span class=\"string\">&quot;Illegal load factor: &quot;</span> +</span><br><span class=\"line\">                                           loadFactor);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loadFactor = loadFactor;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.threshold = tableSizeFor(initialCapacity);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">HashMap</span><span class=\"params\">(<span class=\"type\">int</span> initialCapacity)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>(initialCapacity, DEFAULT_LOAD_FACTOR);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">HashMap</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loadFactor = DEFAULT_LOAD_FACTOR; <span class=\"comment\">// all other fields defaulted</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">HashMap</span><span class=\"params\">(Map&lt;? extends K, ? extends V&gt; m)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loadFactor = DEFAULT_LOAD_FACTOR;</span><br><span class=\"line\">    putMapEntries(m, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在分析这四个构造方法之前，还需要了解hashmap中的几个属性，  </p>\n<ul>\n<li>loadFactor : 装载因子  </li>\n<li>threshold  : 扩容阈值，也就是说当hashmap中的数据个数超过这个阈值，就扩容</li>\n</ul>\n<p>hashmap前三个构造方法都是初始化参数，在这些构造方法中并没有初始化节点数组，二十初始化了装载因子和扩容阈值这两个参数，在<code>put</code>方法中根据扩容阈值来初始化数组。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ((tab = table) == null || (n = tab.length) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    n = (tab = resize()).length;</span><br></pre></td></tr></table></figure>\n<p>由此可以看出初始化数组使用的是<code>resize()</code>方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这段代码中关于扩容的分支被我删除了，留下的都是初始化数组的分支 </span></span><br><span class=\"line\">    Node&lt;K,V&gt;[] oldTab = table;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">oldCap</span> <span class=\"operator\">=</span> (oldTab == <span class=\"literal\">null</span>) ? <span class=\"number\">0</span> : oldTab.length;<span class=\"comment\">// 旧容量，初始化数组时为0</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">oldThr</span> <span class=\"operator\">=</span> threshold;</span><br><span class=\"line\">    <span class=\"type\">int</span> newCap, newThr = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (oldThr &gt; <span class=\"number\">0</span>) <span class=\"comment\">// 是否指定了数组大小</span></span><br><span class=\"line\">        newCap = oldThr;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123; <span class=\"comment\">//使用默认参数</span></span><br><span class=\"line\">        newCap = DEFAULT_INITIAL_CAPACITY;</span><br><span class=\"line\">        newThr = (<span class=\"type\">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newThr == <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 判断数组大小是否越界</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">ft</span> <span class=\"operator\">=</span> (<span class=\"type\">float</span>)newCap * loadFactor;</span><br><span class=\"line\">        newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class=\"type\">float</span>)MAXIMUM_CAPACITY ?</span><br><span class=\"line\">                  (<span class=\"type\">int</span>)ft : Integer.MAX_VALUE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    threshold = newThr;</span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class=\"line\">    Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>[newCap];</span><br><span class=\"line\">    table = newTab;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newTab;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>构造方法一中还是用了另一个方法<code> this.threshold = tableSizeFor(initialCapacity)</code>，也就是说既指定了初始容量又指定了装载因子时，使用这个方法确定扩容阈值。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"title function_\">tableSizeFor</span><span class=\"params\">(<span class=\"type\">int</span> cap)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Integer.numberOfLeadingZeros(cap - 1)`方法返回32位int类型数高位的0的个数。这里的源码巧妙地使用了二分法使用了四次右移操作，找出了高位0个数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> -<span class=\"number\">1</span> &gt;&gt;&gt; Integer.numberOfLeadingZeros(cap - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (n &lt; <span class=\"number\">0</span>) ? <span class=\"number\">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个方法的作用是找到大于等于 <code>initialCapacity</code> 的最小的 2 的幂。假设输入的值是10 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cap = 10,cap - 1 = 9,高位的0有28个</span><br><span class=\"line\">n = -1 &gt;&gt;&gt; 28</span><br><span class=\"line\">源码 10000000000000000000000000000001</span><br><span class=\"line\">反码 11111111111111111111111111111110</span><br><span class=\"line\">补码 11111111111111111111111111111111</span><br><span class=\"line\">右移 00000000000000000000000000001111</span><br><span class=\"line\">n = 8 + 4 + 2 + 1 = 15</span><br><span class=\"line\">n + 1 = 16</span><br></pre></td></tr></table></figure>\n\n<p>分析以上源码我们知道，如果默认不传入参数，那么hashmap初始化为大小为16，装载因子为0.75的数组。如果传入的有初始容量，那么数组大小会被初始化为大于等于给定值的最小的2的幂。之所以是2的幂，在之后求hash值时会用到。</p>\n<h3 id=\"2-put方法\"><a href=\"#2-put方法\" class=\"headerlink\" title=\"2. put方法\"></a>2. put方法</h3><p>惯例，先看源码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> V <span class=\"title function_\">putVal</span><span class=\"params\">(<span class=\"type\">int</span> hash, K key, V value, <span class=\"type\">boolean</span> onlyIfAbsent,</span></span><br><span class=\"line\"><span class=\"params\">               <span class=\"type\">boolean</span> evict)</span> &#123;</span><br><span class=\"line\">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class=\"type\">int</span> n, i;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((tab = table) == <span class=\"literal\">null</span> || (n = tab.length) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"comment\">// 数组未初始化则调用resize初始化</span></span><br><span class=\"line\">        n = (tab = resize()).length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((p = tab[i = (n - <span class=\"number\">1</span>) &amp; hash]) == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        tab[i] = newNode(hash, key, value, <span class=\"literal\">null</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        Node&lt;K,V&gt; e; K k;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p.hash == hash &amp;&amp;</span><br><span class=\"line\">            ((k = p.key) == key || (key != <span class=\"literal\">null</span> &amp;&amp; key.equals(k))))</span><br><span class=\"line\">            e = p;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p <span class=\"keyword\">instanceof</span> TreeNode)</span><br><span class=\"line\">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class=\"built_in\">this</span>, tab, hash, key, value);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">binCount</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; ; ++binCount) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((e = p.next) == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    p.next = newNode(hash, key, value, <span class=\"literal\">null</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class=\"number\">1</span>) <span class=\"comment\">// -1 for 1st</span></span><br><span class=\"line\">                        treeifyBin(tab, hash);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (e.hash == hash &amp;&amp;</span><br><span class=\"line\">                    ((k = e.key) == key || (key != <span class=\"literal\">null</span> &amp;&amp; key.equals(k))))</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                p = e;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e != <span class=\"literal\">null</span>) &#123; <span class=\"comment\">// existing mapping for key</span></span><br><span class=\"line\">            <span class=\"type\">V</span> <span class=\"variable\">oldValue</span> <span class=\"operator\">=</span> e.value;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!onlyIfAbsent || oldValue == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                e.value = value;</span><br><span class=\"line\">            afterNodeAccess(e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> oldValue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ++modCount;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (++size &gt; threshold)</span><br><span class=\"line\">        resize();</span><br><span class=\"line\">    afterNodeInsertion(evict);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>具体的代码执行流程上一篇博客里已经分析了，这里只分析几点。  </p>\n<ul>\n<li><p>hash方法  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"title function_\">hash</span><span class=\"params\">(Object key)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> h;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (key == <span class=\"literal\">null</span>) ? <span class=\"number\">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class=\"number\">16</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">```  </span><br><span class=\"line\">hashmap的`hash`方法会首先调用key的`hashCode()`方法，得到一个<span class=\"type\">int</span>类型的值，然后将其右移<span class=\"number\">16</span>位，并于原来的值按位异或运算。这么做的原因是，为了有更好的散列性同时又有较好的性能。因为计算数组下标时（`p = tab[i = (n - <span class=\"number\">1</span>) &amp; hash]`）是仅有hash值的低位参与运算，而这个方法将原来的值高位与低位异或之后放到低位，将高位也参与到运算中，所以具有较好的散列性。同时只是进行异或运算，也减小了系统开销。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- 插入<span class=\"literal\">null</span>键值对  </span><br><span class=\"line\">从`hash`方法中可以看到，当插入的key为<span class=\"literal\">null</span>时，方法返回<span class=\"number\">0</span>，而`p = tab[i = (n - <span class=\"number\">1</span>) &amp; hash]`计算下表使用了与方法，所以最终得到的下标为<span class=\"number\">0</span>，也就是说插入到数组的第一个位置。</span><br><span class=\"line\"></span><br><span class=\"line\">### <span class=\"number\">3.</span> 扩容操作</span><br><span class=\"line\">惯例，先看源码</span><br><span class=\"line\">```java</span><br><span class=\"line\"><span class=\"keyword\">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class=\"line\">        Node&lt;K,V&gt;[] oldTab = table;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">oldCap</span> <span class=\"operator\">=</span> (oldTab == <span class=\"literal\">null</span>) ? <span class=\"number\">0</span> : oldTab.length;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">oldThr</span> <span class=\"operator\">=</span> threshold;</span><br><span class=\"line\">        <span class=\"type\">int</span> newCap, newThr = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oldCap &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (oldCap &gt;= MAXIMUM_CAPACITY) &#123;</span><br><span class=\"line\">                threshold = Integer.MAX_VALUE;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> oldTab;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((newCap = oldCap &lt;&lt; <span class=\"number\">1</span>) &lt; MAXIMUM_CAPACITY &amp;&amp;</span><br><span class=\"line\">                     oldCap &gt;= DEFAULT_INITIAL_CAPACITY)</span><br><span class=\"line\">                <span class=\"comment\">// 扩容为原来大小的两倍</span></span><br><span class=\"line\">                newThr = oldThr &lt;&lt; <span class=\"number\">1</span>; <span class=\"comment\">// double threshold</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newThr == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">float</span> <span class=\"variable\">ft</span> <span class=\"operator\">=</span> (<span class=\"type\">float</span>)newCap * loadFactor;</span><br><span class=\"line\">            newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class=\"type\">float</span>)MAXIMUM_CAPACITY ?</span><br><span class=\"line\">                      (<span class=\"type\">int</span>)ft : Integer.MAX_VALUE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        threshold = newThr;</span><br><span class=\"line\">        <span class=\"meta\">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class=\"line\">        Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>[newCap];</span><br><span class=\"line\">        table = newTab;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oldTab != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; oldCap; ++j) &#123;</span><br><span class=\"line\">                Node&lt;K,V&gt; e;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((e = oldTab[j]) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    oldTab[j] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (e.next == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                        newTab[e.hash &amp; (newCap - <span class=\"number\">1</span>)] = e;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e <span class=\"keyword\">instanceof</span> TreeNode)</span><br><span class=\"line\">                        ((TreeNode&lt;K,V&gt;)e).split(<span class=\"built_in\">this</span>, newTab, j, oldCap);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// preserve order</span></span><br><span class=\"line\">                        Node&lt;K,V&gt; loHead = <span class=\"literal\">null</span>, loTail = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                        Node&lt;K,V&gt; hiHead = <span class=\"literal\">null</span>, hiTail = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                        Node&lt;K,V&gt; next;</span><br><span class=\"line\">                        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">                            next = e.next;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> ((e.hash &amp; oldCap) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (loTail == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                                    loHead = e;</span><br><span class=\"line\">                                <span class=\"keyword\">else</span></span><br><span class=\"line\">                                    loTail.next = e;</span><br><span class=\"line\">                                loTail = e;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (hiTail == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                                    hiHead = e;</span><br><span class=\"line\">                                <span class=\"keyword\">else</span></span><br><span class=\"line\">                                    hiTail.next = e;</span><br><span class=\"line\">                                hiTail = e;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">while</span> ((e = next) != <span class=\"literal\">null</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (loTail != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                            loTail.next = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                            newTab[j] = loHead;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (hiTail != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                            hiTail.next = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                            newTab[j + oldCap] = hiHead;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> newTab;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>因为hashmap扩容之后大小为原来的二倍，旧数组中的元素在新数组中会重新计算下标。计算的方法是数组容量的值减一后与元素key的hash值做与运算。因此对于每个元素会有两种情况。</p>\n</li>\n<li><p>假设数组容量为16</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cap - 1 = 15 = 1111</span><br><span class=\"line\">key1  00000000000000000000000000011001</span><br><span class=\"line\">cap-1 00000000000000000000000000001111</span><br><span class=\"line\">hash1 00000000000000000000000000001001 = 9</span><br><span class=\"line\"></span><br><span class=\"line\">key1  00000000000000000000000000001001</span><br><span class=\"line\">cap-1 00000000000000000000000000001111</span><br><span class=\"line\">hash1 00000000000000000000000000001001 = 9</span><br></pre></td></tr></table></figure></li>\n<li><p>扩容之后数组容量为32</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cap - 1 = 31 = 11111</span><br><span class=\"line\">key1  00000000000000000000000000011001</span><br><span class=\"line\">cap-1 00000000000000000000000000011111</span><br><span class=\"line\">hash1 00000000000000000000000000011001 = 25</span><br><span class=\"line\"></span><br><span class=\"line\">key1  00000000000000000000000000001001</span><br><span class=\"line\">cap-1 00000000000000000000000000011111</span><br><span class=\"line\">hash1 00000000000000000000000000001001 = 9</span><br></pre></td></tr></table></figure>\n<p>也就是说，扩容后每个元素，要么在原来的位置，要么移动到原来的位置加上oldcap所在的位置。</p>\n<h3 id=\"4-hashmap线程不安全的原因\"><a href=\"#4-hashmap线程不安全的原因\" class=\"headerlink\" title=\"4. hashmap线程不安全的原因\"></a>4. hashmap线程不安全的原因</h3></li>\n<li><p>因为hashmap的put方法不是同步的，假如有两个线程同时put两个hash值相同的数据，那么不管是头插法还是尾插法，最终一定会有一个数据丢失。</p>\n</li>\n<li><p>jdk1.8之前，hahsmap插入元素使用头插法，多线程操作时，会出现循环链表，此时get数据时会造成死循环。</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"HashMap源码分析（2）\"><a href=\"#HashMap源码分析（2）\" class=\"headerlink\" title=\"HashMap源码分析（2）\"></a>HashMap源码分析（2）</h1><hr>\n<p>这几天因为疫情问题，一直待在家里，前几天还得了流感，咳嗽咽痛，提心吊胆的。昨天终于好转，也接到通知延迟开学。想着在家也要保持好状态，好好学习，就想给自己找点事干。刚好之前的一篇博客对hashmap分析的不是很透彻，刚好趁现在的时间，好好写写博客，同时也提高一下自己。学疏才浅，有不当之处，望指出。</p>\n<hr>\n<p>java version ：jdk 1.8</p>\n<hr>","more":"<h3 id=\"1-构造方法\"><a href=\"#1-构造方法\" class=\"headerlink\" title=\"1. 构造方法\"></a>1. 构造方法</h3><p>惯例，先看源码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">HashMap</span><span class=\"params\">(<span class=\"type\">int</span> initialCapacity, <span class=\"type\">float</span> loadFactor)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (initialCapacity &lt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalArgumentException</span>(<span class=\"string\">&quot;Illegal initial capacity: &quot;</span> +</span><br><span class=\"line\">                                           initialCapacity);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (initialCapacity &gt; MAXIMUM_CAPACITY)</span><br><span class=\"line\">        initialCapacity = MAXIMUM_CAPACITY;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (loadFactor &lt;= <span class=\"number\">0</span> || Float.isNaN(loadFactor))</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">IllegalArgumentException</span>(<span class=\"string\">&quot;Illegal load factor: &quot;</span> +</span><br><span class=\"line\">                                           loadFactor);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loadFactor = loadFactor;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.threshold = tableSizeFor(initialCapacity);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">HashMap</span><span class=\"params\">(<span class=\"type\">int</span> initialCapacity)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>(initialCapacity, DEFAULT_LOAD_FACTOR);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">HashMap</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loadFactor = DEFAULT_LOAD_FACTOR; <span class=\"comment\">// all other fields defaulted</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">HashMap</span><span class=\"params\">(Map&lt;? extends K, ? extends V&gt; m)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.loadFactor = DEFAULT_LOAD_FACTOR;</span><br><span class=\"line\">    putMapEntries(m, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在分析这四个构造方法之前，还需要了解hashmap中的几个属性，  </p>\n<ul>\n<li>loadFactor : 装载因子  </li>\n<li>threshold  : 扩容阈值，也就是说当hashmap中的数据个数超过这个阈值，就扩容</li>\n</ul>\n<p>hashmap前三个构造方法都是初始化参数，在这些构造方法中并没有初始化节点数组，二十初始化了装载因子和扩容阈值这两个参数，在<code>put</code>方法中根据扩容阈值来初始化数组。  </p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> ((tab = table) == null || (n = tab.length) == <span class=\"number\">0</span>)</span><br><span class=\"line\">    n = (tab = resize()).length;</span><br></pre></td></tr></table></figure>\n<p>由此可以看出初始化数组使用的是<code>resize()</code>方法。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 这段代码中关于扩容的分支被我删除了，留下的都是初始化数组的分支 </span></span><br><span class=\"line\">    Node&lt;K,V&gt;[] oldTab = table;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">oldCap</span> <span class=\"operator\">=</span> (oldTab == <span class=\"literal\">null</span>) ? <span class=\"number\">0</span> : oldTab.length;<span class=\"comment\">// 旧容量，初始化数组时为0</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">oldThr</span> <span class=\"operator\">=</span> threshold;</span><br><span class=\"line\">    <span class=\"type\">int</span> newCap, newThr = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (oldThr &gt; <span class=\"number\">0</span>) <span class=\"comment\">// 是否指定了数组大小</span></span><br><span class=\"line\">        newCap = oldThr;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123; <span class=\"comment\">//使用默认参数</span></span><br><span class=\"line\">        newCap = DEFAULT_INITIAL_CAPACITY;</span><br><span class=\"line\">        newThr = (<span class=\"type\">int</span>)(DEFAULT_LOAD_FACTOR * DEFAULT_INITIAL_CAPACITY);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (newThr == <span class=\"number\">0</span>) &#123; <span class=\"comment\">// 判断数组大小是否越界</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">ft</span> <span class=\"operator\">=</span> (<span class=\"type\">float</span>)newCap * loadFactor;</span><br><span class=\"line\">        newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class=\"type\">float</span>)MAXIMUM_CAPACITY ?</span><br><span class=\"line\">                  (<span class=\"type\">int</span>)ft : Integer.MAX_VALUE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    threshold = newThr;</span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class=\"line\">    Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>[newCap];</span><br><span class=\"line\">    table = newTab;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> newTab;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>构造方法一中还是用了另一个方法<code> this.threshold = tableSizeFor(initialCapacity)</code>，也就是说既指定了初始容量又指定了装载因子时，使用这个方法确定扩容阈值。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"title function_\">tableSizeFor</span><span class=\"params\">(<span class=\"type\">int</span> cap)</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// Integer.numberOfLeadingZeros(cap - 1)`方法返回32位int类型数高位的0的个数。这里的源码巧妙地使用了二分法使用了四次右移操作，找出了高位0个数</span></span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">n</span> <span class=\"operator\">=</span> -<span class=\"number\">1</span> &gt;&gt;&gt; Integer.numberOfLeadingZeros(cap - <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (n &lt; <span class=\"number\">0</span>) ? <span class=\"number\">1</span> : (n &gt;= MAXIMUM_CAPACITY) ? MAXIMUM_CAPACITY : n + <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个方法的作用是找到大于等于 <code>initialCapacity</code> 的最小的 2 的幂。假设输入的值是10 </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cap = 10,cap - 1 = 9,高位的0有28个</span><br><span class=\"line\">n = -1 &gt;&gt;&gt; 28</span><br><span class=\"line\">源码 10000000000000000000000000000001</span><br><span class=\"line\">反码 11111111111111111111111111111110</span><br><span class=\"line\">补码 11111111111111111111111111111111</span><br><span class=\"line\">右移 00000000000000000000000000001111</span><br><span class=\"line\">n = 8 + 4 + 2 + 1 = 15</span><br><span class=\"line\">n + 1 = 16</span><br></pre></td></tr></table></figure>\n\n<p>分析以上源码我们知道，如果默认不传入参数，那么hashmap初始化为大小为16，装载因子为0.75的数组。如果传入的有初始容量，那么数组大小会被初始化为大于等于给定值的最小的2的幂。之所以是2的幂，在之后求hash值时会用到。</p>\n<h3 id=\"2-put方法\"><a href=\"#2-put方法\" class=\"headerlink\" title=\"2. put方法\"></a>2. put方法</h3><p>惯例，先看源码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> V <span class=\"title function_\">putVal</span><span class=\"params\">(<span class=\"type\">int</span> hash, K key, V value, <span class=\"type\">boolean</span> onlyIfAbsent,</span></span><br><span class=\"line\"><span class=\"params\">               <span class=\"type\">boolean</span> evict)</span> &#123;</span><br><span class=\"line\">    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; <span class=\"type\">int</span> n, i;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((tab = table) == <span class=\"literal\">null</span> || (n = tab.length) == <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"comment\">// 数组未初始化则调用resize初始化</span></span><br><span class=\"line\">        n = (tab = resize()).length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ((p = tab[i = (n - <span class=\"number\">1</span>) &amp; hash]) == <span class=\"literal\">null</span>)</span><br><span class=\"line\">        tab[i] = newNode(hash, key, value, <span class=\"literal\">null</span>);</span><br><span class=\"line\">    <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        Node&lt;K,V&gt; e; K k;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (p.hash == hash &amp;&amp;</span><br><span class=\"line\">            ((k = p.key) == key || (key != <span class=\"literal\">null</span> &amp;&amp; key.equals(k))))</span><br><span class=\"line\">            e = p;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (p <span class=\"keyword\">instanceof</span> TreeNode)</span><br><span class=\"line\">            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(<span class=\"built_in\">this</span>, tab, hash, key, value);</span><br><span class=\"line\">        <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">binCount</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; ; ++binCount) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((e = p.next) == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    p.next = newNode(hash, key, value, <span class=\"literal\">null</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (binCount &gt;= TREEIFY_THRESHOLD - <span class=\"number\">1</span>) <span class=\"comment\">// -1 for 1st</span></span><br><span class=\"line\">                        treeifyBin(tab, hash);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (e.hash == hash &amp;&amp;</span><br><span class=\"line\">                    ((k = e.key) == key || (key != <span class=\"literal\">null</span> &amp;&amp; key.equals(k))))</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                p = e;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (e != <span class=\"literal\">null</span>) &#123; <span class=\"comment\">// existing mapping for key</span></span><br><span class=\"line\">            <span class=\"type\">V</span> <span class=\"variable\">oldValue</span> <span class=\"operator\">=</span> e.value;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!onlyIfAbsent || oldValue == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                e.value = value;</span><br><span class=\"line\">            afterNodeAccess(e);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> oldValue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    ++modCount;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (++size &gt; threshold)</span><br><span class=\"line\">        resize();</span><br><span class=\"line\">    afterNodeInsertion(evict);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>具体的代码执行流程上一篇博客里已经分析了，这里只分析几点。  </p>\n<ul>\n<li><p>hash方法  </p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"title function_\">hash</span><span class=\"params\">(Object key)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> h;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (key == <span class=\"literal\">null</span>) ? <span class=\"number\">0</span> : (h = key.hashCode()) ^ (h &gt;&gt;&gt; <span class=\"number\">16</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">```  </span><br><span class=\"line\">hashmap的`hash`方法会首先调用key的`hashCode()`方法，得到一个<span class=\"type\">int</span>类型的值，然后将其右移<span class=\"number\">16</span>位，并于原来的值按位异或运算。这么做的原因是，为了有更好的散列性同时又有较好的性能。因为计算数组下标时（`p = tab[i = (n - <span class=\"number\">1</span>) &amp; hash]`）是仅有hash值的低位参与运算，而这个方法将原来的值高位与低位异或之后放到低位，将高位也参与到运算中，所以具有较好的散列性。同时只是进行异或运算，也减小了系统开销。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">- 插入<span class=\"literal\">null</span>键值对  </span><br><span class=\"line\">从`hash`方法中可以看到，当插入的key为<span class=\"literal\">null</span>时，方法返回<span class=\"number\">0</span>，而`p = tab[i = (n - <span class=\"number\">1</span>) &amp; hash]`计算下表使用了与方法，所以最终得到的下标为<span class=\"number\">0</span>，也就是说插入到数组的第一个位置。</span><br><span class=\"line\"></span><br><span class=\"line\">### <span class=\"number\">3.</span> 扩容操作</span><br><span class=\"line\">惯例，先看源码</span><br><span class=\"line\">```java</span><br><span class=\"line\"><span class=\"keyword\">final</span> Node&lt;K,V&gt;[] resize() &#123;</span><br><span class=\"line\">        Node&lt;K,V&gt;[] oldTab = table;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">oldCap</span> <span class=\"operator\">=</span> (oldTab == <span class=\"literal\">null</span>) ? <span class=\"number\">0</span> : oldTab.length;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">oldThr</span> <span class=\"operator\">=</span> threshold;</span><br><span class=\"line\">        <span class=\"type\">int</span> newCap, newThr = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oldCap &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (oldCap &gt;= MAXIMUM_CAPACITY) &#123;</span><br><span class=\"line\">                threshold = Integer.MAX_VALUE;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> oldTab;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ((newCap = oldCap &lt;&lt; <span class=\"number\">1</span>) &lt; MAXIMUM_CAPACITY &amp;&amp;</span><br><span class=\"line\">                     oldCap &gt;= DEFAULT_INITIAL_CAPACITY)</span><br><span class=\"line\">                <span class=\"comment\">// 扩容为原来大小的两倍</span></span><br><span class=\"line\">                newThr = oldThr &lt;&lt; <span class=\"number\">1</span>; <span class=\"comment\">// double threshold</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (newThr == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">float</span> <span class=\"variable\">ft</span> <span class=\"operator\">=</span> (<span class=\"type\">float</span>)newCap * loadFactor;</span><br><span class=\"line\">            newThr = (newCap &lt; MAXIMUM_CAPACITY &amp;&amp; ft &lt; (<span class=\"type\">float</span>)MAXIMUM_CAPACITY ?</span><br><span class=\"line\">                      (<span class=\"type\">int</span>)ft : Integer.MAX_VALUE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        threshold = newThr;</span><br><span class=\"line\">        <span class=\"meta\">@SuppressWarnings(&#123;&quot;rawtypes&quot;,&quot;unchecked&quot;&#125;)</span></span><br><span class=\"line\">        Node&lt;K,V&gt;[] newTab = (Node&lt;K,V&gt;[])<span class=\"keyword\">new</span> <span class=\"title class_\">Node</span>[newCap];</span><br><span class=\"line\">        table = newTab;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oldTab != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; oldCap; ++j) &#123;</span><br><span class=\"line\">                Node&lt;K,V&gt; e;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ((e = oldTab[j]) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    oldTab[j] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (e.next == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                        newTab[e.hash &amp; (newCap - <span class=\"number\">1</span>)] = e;</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (e <span class=\"keyword\">instanceof</span> TreeNode)</span><br><span class=\"line\">                        ((TreeNode&lt;K,V&gt;)e).split(<span class=\"built_in\">this</span>, newTab, j, oldCap);</span><br><span class=\"line\">                    <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// preserve order</span></span><br><span class=\"line\">                        Node&lt;K,V&gt; loHead = <span class=\"literal\">null</span>, loTail = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                        Node&lt;K,V&gt; hiHead = <span class=\"literal\">null</span>, hiTail = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                        Node&lt;K,V&gt; next;</span><br><span class=\"line\">                        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">                            next = e.next;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> ((e.hash &amp; oldCap) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (loTail == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                                    loHead = e;</span><br><span class=\"line\">                                <span class=\"keyword\">else</span></span><br><span class=\"line\">                                    loTail.next = e;</span><br><span class=\"line\">                                loTail = e;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                                <span class=\"keyword\">if</span> (hiTail == <span class=\"literal\">null</span>)</span><br><span class=\"line\">                                    hiHead = e;</span><br><span class=\"line\">                                <span class=\"keyword\">else</span></span><br><span class=\"line\">                                    hiTail.next = e;</span><br><span class=\"line\">                                hiTail = e;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">while</span> ((e = next) != <span class=\"literal\">null</span>);</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (loTail != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                            loTail.next = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                            newTab[j] = loHead;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (hiTail != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                            hiTail.next = <span class=\"literal\">null</span>;</span><br><span class=\"line\">                            newTab[j + oldCap] = hiHead;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> newTab;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>因为hashmap扩容之后大小为原来的二倍，旧数组中的元素在新数组中会重新计算下标。计算的方法是数组容量的值减一后与元素key的hash值做与运算。因此对于每个元素会有两种情况。</p>\n</li>\n<li><p>假设数组容量为16</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cap - 1 = 15 = 1111</span><br><span class=\"line\">key1  00000000000000000000000000011001</span><br><span class=\"line\">cap-1 00000000000000000000000000001111</span><br><span class=\"line\">hash1 00000000000000000000000000001001 = 9</span><br><span class=\"line\"></span><br><span class=\"line\">key1  00000000000000000000000000001001</span><br><span class=\"line\">cap-1 00000000000000000000000000001111</span><br><span class=\"line\">hash1 00000000000000000000000000001001 = 9</span><br></pre></td></tr></table></figure></li>\n<li><p>扩容之后数组容量为32</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cap - 1 = 31 = 11111</span><br><span class=\"line\">key1  00000000000000000000000000011001</span><br><span class=\"line\">cap-1 00000000000000000000000000011111</span><br><span class=\"line\">hash1 00000000000000000000000000011001 = 25</span><br><span class=\"line\"></span><br><span class=\"line\">key1  00000000000000000000000000001001</span><br><span class=\"line\">cap-1 00000000000000000000000000011111</span><br><span class=\"line\">hash1 00000000000000000000000000001001 = 9</span><br></pre></td></tr></table></figure>\n<p>也就是说，扩容后每个元素，要么在原来的位置，要么移动到原来的位置加上oldcap所在的位置。</p>\n<h3 id=\"4-hashmap线程不安全的原因\"><a href=\"#4-hashmap线程不安全的原因\" class=\"headerlink\" title=\"4. hashmap线程不安全的原因\"></a>4. hashmap线程不安全的原因</h3></li>\n<li><p>因为hashmap的put方法不是同步的，假如有两个线程同时put两个hash值相同的数据，那么不管是头插法还是尾插法，最终一定会有一个数据丢失。</p>\n</li>\n<li><p>jdk1.8之前，hahsmap插入元素使用头插法，多线程操作时，会出现循环链表，此时get数据时会造成死循环。</p>\n</li>\n</ul>"},{"title":"2022-04-17 随笔","abbrlink":23012,"date":"2022-04-17T14:36:19.000Z","_content":"\n### 过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。[^1]\n\n\n我总是抱怨当下，觉得自己提不起劲是因为疫情形式严峻，是因为当前经营环境不好，是因为没有太多资源，是因为专业不对口，而自己给自己找借口，甘愿平躺，没有拼劲。\n\n然而疫情虽然凶猛，但是现在也还没有严重影响我的生活；经营环境不好，却仍有很多身边朋友努力拼搏；资源太少，是每个开创新航道的人必须面对的，因为他们是领航者；专业不对口，然而成功的人总是能做到面面俱到。\n\n### 平凡不可怕，可怕的是你甘愿平庸\n\n![做一个奋斗者](http://tva1.sinaimg.cn/large/006WUTFIgy1h1d3wbjnhrj30zk0k0gor.jpg)\n\n[^1]:摘自《你当像鸟飞往你的山》\n\n\n","source":"_posts/2022/04/2022-04-17.md","raw":"---\ntitle: 2022-04-17 随笔\ntags:\n  - essay\nabbrlink: 23012\ndate: 2022-04-17 22:36:19\n---\n\n### 过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。[^1]\n\n\n我总是抱怨当下，觉得自己提不起劲是因为疫情形式严峻，是因为当前经营环境不好，是因为没有太多资源，是因为专业不对口，而自己给自己找借口，甘愿平躺，没有拼劲。\n\n然而疫情虽然凶猛，但是现在也还没有严重影响我的生活；经营环境不好，却仍有很多身边朋友努力拼搏；资源太少，是每个开创新航道的人必须面对的，因为他们是领航者；专业不对口，然而成功的人总是能做到面面俱到。\n\n### 平凡不可怕，可怕的是你甘愿平庸\n\n![做一个奋斗者](http://tva1.sinaimg.cn/large/006WUTFIgy1h1d3wbjnhrj30zk0k0gor.jpg)\n\n[^1]:摘自《你当像鸟飞往你的山》\n\n\n","slug":"2022-04-17","published":1,"updated":"2022-04-18T15:00:26.691Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl295h27e0006j8uc7yk7ef0r","content":"<h3 id=\"过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。-1\"><a href=\"#过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。-1\" class=\"headerlink\" title=\"过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。^1\"></a>过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。<a href=\"%E6%91%98%E8%87%AA%E3%80%8A%E4%BD%A0%E5%BD%93%E5%83%8F%E9%B8%9F%E9%A3%9E%E5%BE%80%E4%BD%A0%E7%9A%84%E5%B1%B1%E3%80%8B\">^1</a></h3><p>我总是抱怨当下，觉得自己提不起劲是因为疫情形式严峻，是因为当前经营环境不好，是因为没有太多资源，是因为专业不对口，而自己给自己找借口，甘愿平躺，没有拼劲。</p>\n<p>然而疫情虽然凶猛，但是现在也还没有严重影响我的生活；经营环境不好，却仍有很多身边朋友努力拼搏；资源太少，是每个开创新航道的人必须面对的，因为他们是领航者；专业不对口，然而成功的人总是能做到面面俱到。</p>\n<h3 id=\"平凡不可怕，可怕的是你甘愿平庸\"><a href=\"#平凡不可怕，可怕的是你甘愿平庸\" class=\"headerlink\" title=\"平凡不可怕，可怕的是你甘愿平庸\"></a>平凡不可怕，可怕的是你甘愿平庸</h3><p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1d3wbjnhrj30zk0k0gor.jpg\" alt=\"做一个奋斗者\"></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。-1\"><a href=\"#过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。-1\" class=\"headerlink\" title=\"过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。^1\"></a>过去总是美好的，因为一个人从来都意识不到当时的情绪；它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。<a href=\"%E6%91%98%E8%87%AA%E3%80%8A%E4%BD%A0%E5%BD%93%E5%83%8F%E9%B8%9F%E9%A3%9E%E5%BE%80%E4%BD%A0%E7%9A%84%E5%B1%B1%E3%80%8B\">^1</a></h3><p>我总是抱怨当下，觉得自己提不起劲是因为疫情形式严峻，是因为当前经营环境不好，是因为没有太多资源，是因为专业不对口，而自己给自己找借口，甘愿平躺，没有拼劲。</p>\n<p>然而疫情虽然凶猛，但是现在也还没有严重影响我的生活；经营环境不好，却仍有很多身边朋友努力拼搏；资源太少，是每个开创新航道的人必须面对的，因为他们是领航者；专业不对口，然而成功的人总是能做到面面俱到。</p>\n<h3 id=\"平凡不可怕，可怕的是你甘愿平庸\"><a href=\"#平凡不可怕，可怕的是你甘愿平庸\" class=\"headerlink\" title=\"平凡不可怕，可怕的是你甘愿平庸\"></a>平凡不可怕，可怕的是你甘愿平庸</h3><p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1d3wbjnhrj30zk0k0gor.jpg\" alt=\"做一个奋斗者\"></p>\n"},{"title":"SDN","abbrlink":9540,"date":"2022-04-19T15:02:25.000Z","_content":"\n## 什么是SDN\n\nSDN名为软件定义网络，Software Defined Network，SDN。是一种新兴的控制与转发分离的可直接编程的网络架构。传统的设备紧耦合的网络架构被拆分为应用，控制，转发三层相分离的架构。\n\n<!-- more -->\n- 应用层：不同的应用逻辑通过控制层开放的API管理能力控制设备的报文转发功能。\n- 控制层：由SDN控制软件组成，与下层可通过OpenFlow等开放协议通信，远程控制通用硬件的交换和路由功能。\n- 基础设施层：由转发设备组成。交换、路由功能共享通用硬件设备。\n- 南向控制协议：控制协议包括OpenFlow及奇特如Netconf、PCEP等。\n- 北向SDN API：主要作用在于提供SDN控制器及其以下部分（南向控制协议、网络设备）能够作为网络驱动供上层调用。\n\n<img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1ffod5zr2j30xm0jjqcj.jpg\"/>\n\nSDN主要特征：  \n1. 控制转发分离：支持第三方控制面设备通过OpenFlow远程控制通用硬件的交换和路由\n2. 控制平面集中化：提高路由管理灵活性，快速开通业务，简化运维\n3. 转发平面通用化：交换路由功能共享通用硬件\n4. 控制器软件可编程","source":"_posts/2022/04/SDN.md","raw":"---\ntitle: SDN\ntags:\n  - web\nabbrlink: 9540\ndate: 2022-04-19 23:02:25\n---\n\n## 什么是SDN\n\nSDN名为软件定义网络，Software Defined Network，SDN。是一种新兴的控制与转发分离的可直接编程的网络架构。传统的设备紧耦合的网络架构被拆分为应用，控制，转发三层相分离的架构。\n\n<!-- more -->\n- 应用层：不同的应用逻辑通过控制层开放的API管理能力控制设备的报文转发功能。\n- 控制层：由SDN控制软件组成，与下层可通过OpenFlow等开放协议通信，远程控制通用硬件的交换和路由功能。\n- 基础设施层：由转发设备组成。交换、路由功能共享通用硬件设备。\n- 南向控制协议：控制协议包括OpenFlow及奇特如Netconf、PCEP等。\n- 北向SDN API：主要作用在于提供SDN控制器及其以下部分（南向控制协议、网络设备）能够作为网络驱动供上层调用。\n\n<img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1ffod5zr2j30xm0jjqcj.jpg\"/>\n\nSDN主要特征：  \n1. 控制转发分离：支持第三方控制面设备通过OpenFlow远程控制通用硬件的交换和路由\n2. 控制平面集中化：提高路由管理灵活性，快速开通业务，简化运维\n3. 转发平面通用化：交换路由功能共享通用硬件\n4. 控制器软件可编程","slug":"SDN","published":1,"updated":"2022-04-19T15:13:54.894Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl295h27g0008j8ucgdhk1xpo","content":"<h2 id=\"什么是SDN\"><a href=\"#什么是SDN\" class=\"headerlink\" title=\"什么是SDN\"></a>什么是SDN</h2><p>SDN名为软件定义网络，Software Defined Network，SDN。是一种新兴的控制与转发分离的可直接编程的网络架构。传统的设备紧耦合的网络架构被拆分为应用，控制，转发三层相分离的架构。</p>\n<span id=\"more\"></span>\n<ul>\n<li>应用层：不同的应用逻辑通过控制层开放的API管理能力控制设备的报文转发功能。</li>\n<li>控制层：由SDN控制软件组成，与下层可通过OpenFlow等开放协议通信，远程控制通用硬件的交换和路由功能。</li>\n<li>基础设施层：由转发设备组成。交换、路由功能共享通用硬件设备。</li>\n<li>南向控制协议：控制协议包括OpenFlow及奇特如Netconf、PCEP等。</li>\n<li>北向SDN API：主要作用在于提供SDN控制器及其以下部分（南向控制协议、网络设备）能够作为网络驱动供上层调用。</li>\n</ul>\n<img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1ffod5zr2j30xm0jjqcj.jpg\"/>\n\n<p>SDN主要特征：  </p>\n<ol>\n<li>控制转发分离：支持第三方控制面设备通过OpenFlow远程控制通用硬件的交换和路由</li>\n<li>控制平面集中化：提高路由管理灵活性，快速开通业务，简化运维</li>\n<li>转发平面通用化：交换路由功能共享通用硬件</li>\n<li>控制器软件可编程</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"什么是SDN\"><a href=\"#什么是SDN\" class=\"headerlink\" title=\"什么是SDN\"></a>什么是SDN</h2><p>SDN名为软件定义网络，Software Defined Network，SDN。是一种新兴的控制与转发分离的可直接编程的网络架构。传统的设备紧耦合的网络架构被拆分为应用，控制，转发三层相分离的架构。</p>","more":"<ul>\n<li>应用层：不同的应用逻辑通过控制层开放的API管理能力控制设备的报文转发功能。</li>\n<li>控制层：由SDN控制软件组成，与下层可通过OpenFlow等开放协议通信，远程控制通用硬件的交换和路由功能。</li>\n<li>基础设施层：由转发设备组成。交换、路由功能共享通用硬件设备。</li>\n<li>南向控制协议：控制协议包括OpenFlow及奇特如Netconf、PCEP等。</li>\n<li>北向SDN API：主要作用在于提供SDN控制器及其以下部分（南向控制协议、网络设备）能够作为网络驱动供上层调用。</li>\n</ul>\n<img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1ffod5zr2j30xm0jjqcj.jpg\"/>\n\n<p>SDN主要特征：  </p>\n<ol>\n<li>控制转发分离：支持第三方控制面设备通过OpenFlow远程控制通用硬件的交换和路由</li>\n<li>控制平面集中化：提高路由管理灵活性，快速开通业务，简化运维</li>\n<li>转发平面通用化：交换路由功能共享通用硬件</li>\n<li>控制器软件可编程</li>\n</ol>"},{"title":"overlay","abbrlink":20459,"date":"2022-04-19T15:16:39.000Z","_content":"\n## 1. 什么是Overlay  \nOverlay是指通过网络虚拟化技术，在同一张underlay网络上构建出一张或多张虚拟的逻辑网络。  \nUnderlay网络可以是二层也可以是三层网络。其中二层网络通常应用于以太网，通过VLAN进行划分。三层网络的典型应用就是互联网，其在同一个自治域[^1]使用OSPF、IS-IS等协议进行路由控制，在各个自治域之间则采用BGP等协议进行路由传递与互联。\n\n<!-- more -->\n\n然而传统的网络设备对数据包的转发都基于硬件，其构建而成的 Underlay 网络也产生了如下的问题：\n\n- 由于硬件根据目的 IP 地址进行数据包的转发，所以传输的路径依赖十分严重。\n- 新增或变更业务需要对现有底层网络连接进行修改，重新配置耗时严重。\n- 互联网不能保证私密通信的安全要求。\n- 网络切片和网络分段实现复杂，无法做到网络资源的按需分配。\n- 多路径转发繁琐，无法融合多个底层网络来实现负载均衡。\n\n相互连接的 Overlay 设备之间建立隧道，数据包准备传输出去时，设备为数据包添加新的 IP 头部和隧道头部，并且被屏蔽掉内层的 IP 头部，数据包根据新的 IP 头部进行转发。当数据包传递到另一个设备后，外部的 IP 报头和隧道头将被丢弃，得到原始的数据包，在这个过程中 Overlay 网络并不感知 Underlay 网络。\n\nOverLay的网络协议：VXLAN，NVGRE，GRE，SST，NVO3，EVPN\n\n## 2. VXLAN  \n\nVXLAN 即虚拟扩展局域网，是大二层网络中广泛使用的网络虚拟化技术。在源网络设备与目的网络设备之间建立一条逻辑 VXLAN 隧道，采用 <font color=red> MAC in UDP（User Datagram Protocol） </font>封装方式，即，将虚拟机发出的原始以太报文完整的封装在 UDP 报文中，然后在外层使用物理网络的 IP 报文头和以太报文头封装，这样，封装后的报文就像普通 IP 报文一样，可以通过路由网络转发，这就像给二层网络的虚拟机插上了路由的翅膀，使虚拟机彻底摆脱了二、三层网络的结构限制。\n\n>通俗来讲，就是两台计算机要在二层进行通信，但是计算机之间距离较远，中间联通的网络是三层的，因此把VXLAN报文添加一个UDP头，在三层网络传送，到达另一端时，去掉UDP头，表现出来的还是一个VXLAN报文。也就是说在三层网络上建立了一个隧道，把互联网看成了一个虚拟二层交换机。\n\n![VXLAN.jpg](http://tva1.sinaimg.cn/large/006WUTFIgy1h1fhguhr0hj30vr0f5n4e.jpg =800x400)\n\n\n#### VXLAN帧格式  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1fhhfs9h3j30br05taaz.jpg\"/>\n\n- 从图中可以看到白色为原始报文（二层帧），包含了MAC头，IP头，传输层头部的报文，在原始报文之前进行了VXLAN的封装\n对原始报文对封装顺序分别是：VXLAN头部，UDP头部，IP头部，MAC头部\n- VXLAN头部：\n    Flags 标志为\n    VNI 24 位的VNI 字段，这也是vxlan 能支持千万租户的地方\n\n- UDP头部：\n    应用UDP通信双方是vtep 应用，其中目的端口就是接收方vtep 使用的端口，IANA 分配的端口是4789\n\n- IP头部：\n    主机之间通信的地址，可能是主机的网卡IP 地址，也可能是多播IP 地址\n\n- MAC头部：\n    主机之间通信的MAC 地址，源MAC 地址为主机MAC 地址，目的MAC 地址为下一跳设备的MAC 地址\n\n\n\n[^1]: 什么是自治域","source":"_posts/2022/04/overlay.md","raw":"---\ntitle: overlay\ntags:\n  - web\nabbrlink: 20459\ndate: 2022-04-19 23:16:39\n---\n\n## 1. 什么是Overlay  \nOverlay是指通过网络虚拟化技术，在同一张underlay网络上构建出一张或多张虚拟的逻辑网络。  \nUnderlay网络可以是二层也可以是三层网络。其中二层网络通常应用于以太网，通过VLAN进行划分。三层网络的典型应用就是互联网，其在同一个自治域[^1]使用OSPF、IS-IS等协议进行路由控制，在各个自治域之间则采用BGP等协议进行路由传递与互联。\n\n<!-- more -->\n\n然而传统的网络设备对数据包的转发都基于硬件，其构建而成的 Underlay 网络也产生了如下的问题：\n\n- 由于硬件根据目的 IP 地址进行数据包的转发，所以传输的路径依赖十分严重。\n- 新增或变更业务需要对现有底层网络连接进行修改，重新配置耗时严重。\n- 互联网不能保证私密通信的安全要求。\n- 网络切片和网络分段实现复杂，无法做到网络资源的按需分配。\n- 多路径转发繁琐，无法融合多个底层网络来实现负载均衡。\n\n相互连接的 Overlay 设备之间建立隧道，数据包准备传输出去时，设备为数据包添加新的 IP 头部和隧道头部，并且被屏蔽掉内层的 IP 头部，数据包根据新的 IP 头部进行转发。当数据包传递到另一个设备后，外部的 IP 报头和隧道头将被丢弃，得到原始的数据包，在这个过程中 Overlay 网络并不感知 Underlay 网络。\n\nOverLay的网络协议：VXLAN，NVGRE，GRE，SST，NVO3，EVPN\n\n## 2. VXLAN  \n\nVXLAN 即虚拟扩展局域网，是大二层网络中广泛使用的网络虚拟化技术。在源网络设备与目的网络设备之间建立一条逻辑 VXLAN 隧道，采用 <font color=red> MAC in UDP（User Datagram Protocol） </font>封装方式，即，将虚拟机发出的原始以太报文完整的封装在 UDP 报文中，然后在外层使用物理网络的 IP 报文头和以太报文头封装，这样，封装后的报文就像普通 IP 报文一样，可以通过路由网络转发，这就像给二层网络的虚拟机插上了路由的翅膀，使虚拟机彻底摆脱了二、三层网络的结构限制。\n\n>通俗来讲，就是两台计算机要在二层进行通信，但是计算机之间距离较远，中间联通的网络是三层的，因此把VXLAN报文添加一个UDP头，在三层网络传送，到达另一端时，去掉UDP头，表现出来的还是一个VXLAN报文。也就是说在三层网络上建立了一个隧道，把互联网看成了一个虚拟二层交换机。\n\n![VXLAN.jpg](http://tva1.sinaimg.cn/large/006WUTFIgy1h1fhguhr0hj30vr0f5n4e.jpg =800x400)\n\n\n#### VXLAN帧格式  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1fhhfs9h3j30br05taaz.jpg\"/>\n\n- 从图中可以看到白色为原始报文（二层帧），包含了MAC头，IP头，传输层头部的报文，在原始报文之前进行了VXLAN的封装\n对原始报文对封装顺序分别是：VXLAN头部，UDP头部，IP头部，MAC头部\n- VXLAN头部：\n    Flags 标志为\n    VNI 24 位的VNI 字段，这也是vxlan 能支持千万租户的地方\n\n- UDP头部：\n    应用UDP通信双方是vtep 应用，其中目的端口就是接收方vtep 使用的端口，IANA 分配的端口是4789\n\n- IP头部：\n    主机之间通信的地址，可能是主机的网卡IP 地址，也可能是多播IP 地址\n\n- MAC头部：\n    主机之间通信的MAC 地址，源MAC 地址为主机MAC 地址，目的MAC 地址为下一跳设备的MAC 地址\n\n\n\n[^1]: 什么是自治域","slug":"overlay","published":1,"updated":"2022-04-30T15:49:54.632Z","_id":"cl295h27h000aj8uc0rhpchy6","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1-什么是Overlay\">1. 什么是Overlay</h2>\n<p>Overlay是指通过网络虚拟化技术，在同一张underlay网络上构建出一张或多张虚拟的逻辑网络。<br>\nUnderlay网络可以是二层也可以是三层网络。其中二层网络通常应用于以太网，通过VLAN进行划分。三层网络的典型应用就是互联网，其在同一个自治域<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>使用OSPF、IS-IS等协议进行路由控制，在各个自治域之间则采用BGP等协议进行路由传递与互联。</p>\n<span id=\"more\"></span>\n<p>然而传统的网络设备对数据包的转发都基于硬件，其构建而成的 Underlay 网络也产生了如下的问题：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>由于硬件根据目的 IP 地址进行数据包的转发，所以传输的路径依赖十分严重。</p>\n</li>\n<li class=\"lvl-2\">\n<p>新增或变更业务需要对现有底层网络连接进行修改，重新配置耗时严重。</p>\n</li>\n<li class=\"lvl-2\">\n<p>互联网不能保证私密通信的安全要求。</p>\n</li>\n<li class=\"lvl-2\">\n<p>网络切片和网络分段实现复杂，无法做到网络资源的按需分配。</p>\n</li>\n<li class=\"lvl-2\">\n<p>多路径转发繁琐，无法融合多个底层网络来实现负载均衡。</p>\n</li>\n</ul>\n<p>相互连接的 Overlay 设备之间建立隧道，数据包准备传输出去时，设备为数据包添加新的 IP 头部和隧道头部，并且被屏蔽掉内层的 IP 头部，数据包根据新的 IP 头部进行转发。当数据包传递到另一个设备后，外部的 IP 报头和隧道头将被丢弃，得到原始的数据包，在这个过程中 Overlay 网络并不感知 Underlay 网络。</p>\n<p>OverLay的网络协议：VXLAN，NVGRE，GRE，SST，NVO3，EVPN</p>\n<h2 id=\"2-VXLAN\">2. VXLAN</h2>\n<p>VXLAN 即虚拟扩展局域网，是大二层网络中广泛使用的网络虚拟化技术。在源网络设备与目的网络设备之间建立一条逻辑 VXLAN 隧道，采用 <font color=red> MAC in UDP（User Datagram Protocol） </font>封装方式，即，将虚拟机发出的原始以太报文完整的封装在 UDP 报文中，然后在外层使用物理网络的 IP 报文头和以太报文头封装，这样，封装后的报文就像普通 IP 报文一样，可以通过路由网络转发，这就像给二层网络的虚拟机插上了路由的翅膀，使虚拟机彻底摆脱了二、三层网络的结构限制。</p>\n<blockquote>\n<p>通俗来讲，就是两台计算机要在二层进行通信，但是计算机之间距离较远，中间联通的网络是三层的，因此把VXLAN报文添加一个UDP头，在三层网络传送，到达另一端时，去掉UDP头，表现出来的还是一个VXLAN报文。也就是说在三层网络上建立了一个隧道，把互联网看成了一个虚拟二层交换机。</p>\n</blockquote>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1fhguhr0hj30vr0f5n4e.jpg\" alt=\"VXLAN.jpg\" width=\"800\" height=\"400\"></p>\n<h4 id=\"VXLAN帧格式\">VXLAN帧格式</h4>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1fhhfs9h3j30br05taaz.jpg\"/>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>从图中可以看到白色为原始报文（二层帧），包含了MAC头，IP头，传输层头部的报文，在原始报文之前进行了VXLAN的封装对原始报文对封装顺序分别是：VXLAN头部，UDP头部，IP头部，MAC头部</p>\n</li>\n<li class=\"lvl-2\">\n<p>VXLAN头部：<br>\nFlags 标志为<br>\nVNI 24 位的VNI 字段，这也是vxlan 能支持千万租户的地方</p>\n</li>\n<li class=\"lvl-2\">\n<p>UDP头部：应用UDP通信双方是vtep 应用，其中目的端口就是接收方vtep 使用的端口，IANA 分配的端口是4789</p>\n</li>\n<li class=\"lvl-2\">\n<p>IP头部：主机之间通信的地址，可能是主机的网卡IP 地址，也可能是多播IP 地址</p>\n</li>\n<li class=\"lvl-2\">\n<p>MAC头部：主机之间通信的MAC 地址，源MAC 地址为主机MAC 地址，目的MAC 地址为下一跳设备的MAC 地址</p>\n</li>\n</ul>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>什么是自治域 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","site":{"data":{}},"excerpt":"<h2 id=\"1-什么是Overlay\">1. 什么是Overlay</h2>\n<p>Overlay是指通过网络虚拟化技术，在同一张underlay网络上构建出一张或多张虚拟的逻辑网络。<br>\nUnderlay网络可以是二层也可以是三层网络。其中二层网络通常应用于以太网，通过VLAN进行划分。三层网络的典型应用就是互联网，其在同一个自治域<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>使用OSPF、IS-IS等协议进行路由控制，在各个自治域之间则采用BGP等协议进行路由传递与互联。</p>","more":"<p>然而传统的网络设备对数据包的转发都基于硬件，其构建而成的 Underlay 网络也产生了如下的问题：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>由于硬件根据目的 IP 地址进行数据包的转发，所以传输的路径依赖十分严重。</p>\n</li>\n<li class=\"lvl-2\">\n<p>新增或变更业务需要对现有底层网络连接进行修改，重新配置耗时严重。</p>\n</li>\n<li class=\"lvl-2\">\n<p>互联网不能保证私密通信的安全要求。</p>\n</li>\n<li class=\"lvl-2\">\n<p>网络切片和网络分段实现复杂，无法做到网络资源的按需分配。</p>\n</li>\n<li class=\"lvl-2\">\n<p>多路径转发繁琐，无法融合多个底层网络来实现负载均衡。</p>\n</li>\n</ul>\n<p>相互连接的 Overlay 设备之间建立隧道，数据包准备传输出去时，设备为数据包添加新的 IP 头部和隧道头部，并且被屏蔽掉内层的 IP 头部，数据包根据新的 IP 头部进行转发。当数据包传递到另一个设备后，外部的 IP 报头和隧道头将被丢弃，得到原始的数据包，在这个过程中 Overlay 网络并不感知 Underlay 网络。</p>\n<p>OverLay的网络协议：VXLAN，NVGRE，GRE，SST，NVO3，EVPN</p>\n<h2 id=\"2-VXLAN\">2. VXLAN</h2>\n<p>VXLAN 即虚拟扩展局域网，是大二层网络中广泛使用的网络虚拟化技术。在源网络设备与目的网络设备之间建立一条逻辑 VXLAN 隧道，采用 <font color=red> MAC in UDP（User Datagram Protocol） </font>封装方式，即，将虚拟机发出的原始以太报文完整的封装在 UDP 报文中，然后在外层使用物理网络的 IP 报文头和以太报文头封装，这样，封装后的报文就像普通 IP 报文一样，可以通过路由网络转发，这就像给二层网络的虚拟机插上了路由的翅膀，使虚拟机彻底摆脱了二、三层网络的结构限制。</p>\n<blockquote>\n<p>通俗来讲，就是两台计算机要在二层进行通信，但是计算机之间距离较远，中间联通的网络是三层的，因此把VXLAN报文添加一个UDP头，在三层网络传送，到达另一端时，去掉UDP头，表现出来的还是一个VXLAN报文。也就是说在三层网络上建立了一个隧道，把互联网看成了一个虚拟二层交换机。</p>\n</blockquote>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1fhguhr0hj30vr0f5n4e.jpg\" alt=\"VXLAN.jpg\" width=\"800\" height=\"400\"></p>\n<h4 id=\"VXLAN帧格式\">VXLAN帧格式</h4>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1fhhfs9h3j30br05taaz.jpg\"/>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>从图中可以看到白色为原始报文（二层帧），包含了MAC头，IP头，传输层头部的报文，在原始报文之前进行了VXLAN的封装对原始报文对封装顺序分别是：VXLAN头部，UDP头部，IP头部，MAC头部</p>\n</li>\n<li class=\"lvl-2\">\n<p>VXLAN头部：<br>\nFlags 标志为<br>\nVNI 24 位的VNI 字段，这也是vxlan 能支持千万租户的地方</p>\n</li>\n<li class=\"lvl-2\">\n<p>UDP头部：应用UDP通信双方是vtep 应用，其中目的端口就是接收方vtep 使用的端口，IANA 分配的端口是4789</p>\n</li>\n<li class=\"lvl-2\">\n<p>IP头部：主机之间通信的地址，可能是主机的网卡IP 地址，也可能是多播IP 地址</p>\n</li>\n<li class=\"lvl-2\">\n<p>MAC头部：主机之间通信的MAC 地址，源MAC 地址为主机MAC 地址，目的MAC 地址为下一跳设备的MAC 地址</p>\n</li>\n</ul>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>什么是自治域 <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>"},{"title":"搭建个人的Github Page Blog","abbrlink":232,"date":"2022-04-16T16:14:55.000Z","_content":"\n\n## 搭建个人Github Page博客\n\n\n### 1. 技术选型\n\n\n一个个人博客的功能这里我就不自己介绍了。在使用Github Page之前我使用过自己购买云服务器自己纯手写代码部署个人博客，但是在使用了一年之后因为价格比较贵，所以就没有继续使用。之后尝试使用旧手机刷Linux，通过内网穿透来部署个人应用，但是存在手机不能24小时在线、并且内网穿透流量带宽受限的问题。因此还是Github这种免费的静态网页服务适合我。\n\n对于Github Page，有多种可选的技术，包括Hexo、VuePress等。总之我选择了Hexo+Yilia来搭建自己的Github Page。\n\n不过最后要说的一点是，技术、模板等都不是我们搭建博客的最终目的，最终都是要立足到写这个动作上的，搭建网站只是手段而不是目的。\n\n<!-- more -->\n\n### 2. 博客搭建\n\n第一步环境准备，需要的本地环境包括Git，node，npm等。在这里最好把npm源换成国内的，下载速度会更快些。  \n```bash\nnpm config set registry https://registry.npm.taobao.org\nnpm install -g cnpm\n```\n\n第二步新建一个空文件夹，在命令行输出一下命令，会初始化一个hexo项目在此目录下输入`hexo -g`和`hexo s`命令会在本地生成一个测试服务器，通过浏览器访问`http://localhost:4000/`.\n```\nnpm install hexo-cli -g\nhexo -v\nhexo init\n```\n\n第三步配置Gothub Page，登录你的Github账号，创建一个仓库，命名为`USERNAME.github.io`，在Description填写Github Page。将仓库clone到本地，将上边文件夹的内容复制到本地仓库中。然后在项目根目录下的`_config.yml`文件夹内配置以下代码。主要作用是可以使用`hexo d`命令将项目部署到你的Github Page上。\n```\ndeploy: \n type: git\n repo: https://github.com:username/username.github.io.git\n branch: master\n```\n\n第四步配置主题。Hexo 博客默认主题为 landscape，若想修改主题，在 github 上找到主题，克隆到 theme 文件夹下。\n\n在[链接](https://github.com/litten/hexo-theme-yilia)下载yilia主题，解压后复制到项目文件夹，覆盖原有文件，即可使用该主题。\n\n\n### 3. 博客配置\n\n- 归档页面\n就是博客可以按照时间来进行归档，这个功能是Yilia主题自带，只要开启即可。  \n修改`_config.yml`文件下的`new_post_name :year/:month/:title.md`，之后再建立新的文章会自动按照年月的格式创建子目录，之后在yilia主题的`_config.yml`中配置`归档: /archives/index.html`\n\n- 创建关于页面  \n使用`hexo new page about`命令创建新的page，会出现一个about目录，修改里边index.md文件内容即可。之后需要在yilia主题的`_config.yml`中配置`关于: /about/`\n\n- 相册  \n我参考的是这个[链接](https://www.jianshu.com/p/a9f309aaa0e0)下的方法\n\n\n### 4. 常用命令\n\n```bash\nhexo c # hexo clean\nhexo g # hexo generate\nhexo s # hexo server 本地调试服务器\nhexo d # hexo deploy 部署到github上\n\nhexo new page XXX # 创建页面\nhexo new post XXX # 创建文章\nhexo new draft XXX # 创建草稿\n```\n\n+++ **点击折叠**\n针对markdown渲染引擎可参考[链接](https://blog.csdn.net/qq_42951560/article/details/123596899)\n+++","source":"_posts/2022/04/blog.md","raw":"---\ntitle: 搭建个人的Github Page Blog\ntags:\n  - web\nabbrlink: 232\ndate: 2022-04-17 00:14:55\n---\n\n\n## 搭建个人Github Page博客\n\n\n### 1. 技术选型\n\n\n一个个人博客的功能这里我就不自己介绍了。在使用Github Page之前我使用过自己购买云服务器自己纯手写代码部署个人博客，但是在使用了一年之后因为价格比较贵，所以就没有继续使用。之后尝试使用旧手机刷Linux，通过内网穿透来部署个人应用，但是存在手机不能24小时在线、并且内网穿透流量带宽受限的问题。因此还是Github这种免费的静态网页服务适合我。\n\n对于Github Page，有多种可选的技术，包括Hexo、VuePress等。总之我选择了Hexo+Yilia来搭建自己的Github Page。\n\n不过最后要说的一点是，技术、模板等都不是我们搭建博客的最终目的，最终都是要立足到写这个动作上的，搭建网站只是手段而不是目的。\n\n<!-- more -->\n\n### 2. 博客搭建\n\n第一步环境准备，需要的本地环境包括Git，node，npm等。在这里最好把npm源换成国内的，下载速度会更快些。  \n```bash\nnpm config set registry https://registry.npm.taobao.org\nnpm install -g cnpm\n```\n\n第二步新建一个空文件夹，在命令行输出一下命令，会初始化一个hexo项目在此目录下输入`hexo -g`和`hexo s`命令会在本地生成一个测试服务器，通过浏览器访问`http://localhost:4000/`.\n```\nnpm install hexo-cli -g\nhexo -v\nhexo init\n```\n\n第三步配置Gothub Page，登录你的Github账号，创建一个仓库，命名为`USERNAME.github.io`，在Description填写Github Page。将仓库clone到本地，将上边文件夹的内容复制到本地仓库中。然后在项目根目录下的`_config.yml`文件夹内配置以下代码。主要作用是可以使用`hexo d`命令将项目部署到你的Github Page上。\n```\ndeploy: \n type: git\n repo: https://github.com:username/username.github.io.git\n branch: master\n```\n\n第四步配置主题。Hexo 博客默认主题为 landscape，若想修改主题，在 github 上找到主题，克隆到 theme 文件夹下。\n\n在[链接](https://github.com/litten/hexo-theme-yilia)下载yilia主题，解压后复制到项目文件夹，覆盖原有文件，即可使用该主题。\n\n\n### 3. 博客配置\n\n- 归档页面\n就是博客可以按照时间来进行归档，这个功能是Yilia主题自带，只要开启即可。  \n修改`_config.yml`文件下的`new_post_name :year/:month/:title.md`，之后再建立新的文章会自动按照年月的格式创建子目录，之后在yilia主题的`_config.yml`中配置`归档: /archives/index.html`\n\n- 创建关于页面  \n使用`hexo new page about`命令创建新的page，会出现一个about目录，修改里边index.md文件内容即可。之后需要在yilia主题的`_config.yml`中配置`关于: /about/`\n\n- 相册  \n我参考的是这个[链接](https://www.jianshu.com/p/a9f309aaa0e0)下的方法\n\n\n### 4. 常用命令\n\n```bash\nhexo c # hexo clean\nhexo g # hexo generate\nhexo s # hexo server 本地调试服务器\nhexo d # hexo deploy 部署到github上\n\nhexo new page XXX # 创建页面\nhexo new post XXX # 创建文章\nhexo new draft XXX # 创建草稿\n```\n\n+++ **点击折叠**\n针对markdown渲染引擎可参考[链接](https://blog.csdn.net/qq_42951560/article/details/123596899)\n+++","slug":"blog","published":1,"updated":"2022-04-28T15:56:25.856Z","_id":"cl295h27j000ej8uc63ztcpul","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"搭建个人Github-Page博客\">搭建个人Github Page博客</h2>\n<h3 id=\"1-技术选型\">1. 技术选型</h3>\n<p>一个个人博客的功能这里我就不自己介绍了。在使用Github Page之前我使用过自己购买云服务器自己纯手写代码部署个人博客，但是在使用了一年之后因为价格比较贵，所以就没有继续使用。之后尝试使用旧手机刷Linux，通过内网穿透来部署个人应用，但是存在手机不能24小时在线、并且内网穿透流量带宽受限的问题。因此还是Github这种免费的静态网页服务适合我。</p>\n<p>对于Github Page，有多种可选的技术，包括Hexo、VuePress等。总之我选择了Hexo+Yilia来搭建自己的Github Page。</p>\n<p>不过最后要说的一点是，技术、模板等都不是我们搭建博客的最终目的，最终都是要立足到写这个动作上的，搭建网站只是手段而不是目的。</p>\n<span id=\"more\"></span>\n<h3 id=\"2-博客搭建\">2. 博客搭建</h3>\n<p>第一步环境准备，需要的本地环境包括Git，node，npm等。在这里最好把npm源换成国内的，下载速度会更快些。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br><span class=\"line\">npm install -g cnpm</span><br></pre></td></tr></table></figure>\n<p>第二步新建一个空文件夹，在命令行输出一下命令，会初始化一个hexo项目在此目录下输入<code>hexo -g</code>和<code>hexo s</code>命令会在本地生成一个测试服务器，通过浏览器访问<code>http://localhost:4000/</code>.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo -v</span><br><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>第三步配置Gothub Page，登录你的Github账号，创建一个仓库，命名为<code>USERNAME.github.io</code>，在Description填写Github Page。将仓库clone到本地，将上边文件夹的内容复制到本地仓库中。然后在项目根目录下的<code>_config.yml</code>文件夹内配置以下代码。主要作用是可以使用<code>hexo d</code>命令将项目部署到你的Github Page上。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy: </span><br><span class=\"line\"> type: git</span><br><span class=\"line\"> repo: https://github.com:username/username.github.io.git</span><br><span class=\"line\"> branch: master</span><br></pre></td></tr></table></figure>\n<p>第四步配置主题。Hexo 博客默认主题为 landscape，若想修改主题，在 github 上找到主题，克隆到 theme 文件夹下。</p>\n<p>在<a href=\"https://github.com/litten/hexo-theme-yilia\">链接</a>下载yilia主题，解压后复制到项目文件夹，覆盖原有文件，即可使用该主题。</p>\n<h3 id=\"3-博客配置\">3. 博客配置</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>归档页面就是博客可以按照时间来进行归档，这个功能是Yilia主题自带，只要开启即可。<br>\n修改<code>_config.yml</code>文件下的<code>new_post_name :year/:month/:title.md</code>，之后再建立新的文章会自动按照年月的格式创建子目录，之后在yilia主题的<code>_config.yml</code>中配置<code>归档: /archives/index.html</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>创建关于页面<br>\n使用<code>hexo new page about</code>命令创建新的page，会出现一个about目录，修改里边index.md文件内容即可。之后需要在yilia主题的<code>_config.yml</code>中配置<code>关于: /about/</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>相册<br>\n我参考的是这个<a href=\"https://www.jianshu.com/p/a9f309aaa0e0\">链接</a>下的方法</p>\n</li>\n</ul>\n<h3 id=\"4-常用命令\">4. 常用命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c <span class=\"comment\"># hexo clean</span></span><br><span class=\"line\">hexo g <span class=\"comment\"># hexo generate</span></span><br><span class=\"line\">hexo s <span class=\"comment\"># hexo server 本地调试服务器</span></span><br><span class=\"line\">hexo d <span class=\"comment\"># hexo deploy 部署到github上</span></span><br><span class=\"line\"></span><br><span class=\"line\">hexo new page XXX <span class=\"comment\"># 创建页面</span></span><br><span class=\"line\">hexo new post XXX <span class=\"comment\"># 创建文章</span></span><br><span class=\"line\">hexo new draft XXX <span class=\"comment\"># 创建草稿</span></span><br></pre></td></tr></table></figure>\n<details open>\n<summary><span class=\"pre-summary\">&nbsp;</span><strong>点击折叠</strong></summary><p>针对markdown渲染引擎可参考<a href=\"https://blog.csdn.net/qq_42951560/article/details/123596899\">链接</a></p>\n</details>\n","site":{"data":{}},"excerpt":"<h2 id=\"搭建个人Github-Page博客\">搭建个人Github Page博客</h2>\n<h3 id=\"1-技术选型\">1. 技术选型</h3>\n<p>一个个人博客的功能这里我就不自己介绍了。在使用Github Page之前我使用过自己购买云服务器自己纯手写代码部署个人博客，但是在使用了一年之后因为价格比较贵，所以就没有继续使用。之后尝试使用旧手机刷Linux，通过内网穿透来部署个人应用，但是存在手机不能24小时在线、并且内网穿透流量带宽受限的问题。因此还是Github这种免费的静态网页服务适合我。</p>\n<p>对于Github Page，有多种可选的技术，包括Hexo、VuePress等。总之我选择了Hexo+Yilia来搭建自己的Github Page。</p>\n<p>不过最后要说的一点是，技术、模板等都不是我们搭建博客的最终目的，最终都是要立足到写这个动作上的，搭建网站只是手段而不是目的。</p>","more":"<h3 id=\"2-博客搭建\">2. 博客搭建</h3>\n<p>第一步环境准备，需要的本地环境包括Git，node，npm等。在这里最好把npm源换成国内的，下载速度会更快些。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config <span class=\"built_in\">set</span> registry https://registry.npm.taobao.org</span><br><span class=\"line\">npm install -g cnpm</span><br></pre></td></tr></table></figure>\n<p>第二步新建一个空文件夹，在命令行输出一下命令，会初始化一个hexo项目在此目录下输入<code>hexo -g</code>和<code>hexo s</code>命令会在本地生成一个测试服务器，通过浏览器访问<code>http://localhost:4000/</code>.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br><span class=\"line\">hexo -v</span><br><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>第三步配置Gothub Page，登录你的Github账号，创建一个仓库，命名为<code>USERNAME.github.io</code>，在Description填写Github Page。将仓库clone到本地，将上边文件夹的内容复制到本地仓库中。然后在项目根目录下的<code>_config.yml</code>文件夹内配置以下代码。主要作用是可以使用<code>hexo d</code>命令将项目部署到你的Github Page上。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy: </span><br><span class=\"line\"> type: git</span><br><span class=\"line\"> repo: https://github.com:username/username.github.io.git</span><br><span class=\"line\"> branch: master</span><br></pre></td></tr></table></figure>\n<p>第四步配置主题。Hexo 博客默认主题为 landscape，若想修改主题，在 github 上找到主题，克隆到 theme 文件夹下。</p>\n<p>在<a href=\"https://github.com/litten/hexo-theme-yilia\">链接</a>下载yilia主题，解压后复制到项目文件夹，覆盖原有文件，即可使用该主题。</p>\n<h3 id=\"3-博客配置\">3. 博客配置</h3>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>归档页面就是博客可以按照时间来进行归档，这个功能是Yilia主题自带，只要开启即可。<br>\n修改<code>_config.yml</code>文件下的<code>new_post_name :year/:month/:title.md</code>，之后再建立新的文章会自动按照年月的格式创建子目录，之后在yilia主题的<code>_config.yml</code>中配置<code>归档: /archives/index.html</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>创建关于页面<br>\n使用<code>hexo new page about</code>命令创建新的page，会出现一个about目录，修改里边index.md文件内容即可。之后需要在yilia主题的<code>_config.yml</code>中配置<code>关于: /about/</code></p>\n</li>\n<li class=\"lvl-2\">\n<p>相册<br>\n我参考的是这个<a href=\"https://www.jianshu.com/p/a9f309aaa0e0\">链接</a>下的方法</p>\n</li>\n</ul>\n<h3 id=\"4-常用命令\">4. 常用命令</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo c <span class=\"comment\"># hexo clean</span></span><br><span class=\"line\">hexo g <span class=\"comment\"># hexo generate</span></span><br><span class=\"line\">hexo s <span class=\"comment\"># hexo server 本地调试服务器</span></span><br><span class=\"line\">hexo d <span class=\"comment\"># hexo deploy 部署到github上</span></span><br><span class=\"line\"></span><br><span class=\"line\">hexo new page XXX <span class=\"comment\"># 创建页面</span></span><br><span class=\"line\">hexo new post XXX <span class=\"comment\"># 创建文章</span></span><br><span class=\"line\">hexo new draft XXX <span class=\"comment\"># 创建草稿</span></span><br></pre></td></tr></table></figure>\n<details open>\n<summary><span class=\"pre-summary\">&nbsp;</span><strong>点击折叠</strong></summary><p>针对markdown渲染引擎可参考<a href=\"https://blog.csdn.net/qq_42951560/article/details/123596899\">链接</a></p>\n</details>"},{"title":"分布式光伏","abbrlink":59997,"date":"2022-04-18T14:27:06.000Z","_content":"\n### 分布式光伏\n\n#### 1. 光伏电站介绍\n\n##### 1. 光伏电站设备介绍\n光伏电站一般由光伏组件、逆变器、汇流箱、监控系统、逆功率保护、向日跟踪系统、电线电缆、防雷及接地组成。\n<!-- more -->\n- 光伏组件  \n光伏组件可以分为平板型组件和聚光型组件。  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e97foyznj30rf0glgq3.jpg\"/>\n\n- 逆变器  \n逆变器是光伏发电站的核心设备。按照逆变器结构和应用特点可以分为三大类：集中式逆变器、组串式逆变器和微型逆变器（又称组件逆变器）。  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e994sctqj30v70h310q.jpg\"/>\n\n- 汇流箱  \n对于大型并网发电系统，为了减少光伏组件与逆变器之间的连接线，方便维护，提高可靠性，一般需要在光伏组件与逆变器之间装设汇流箱（直流汇流装置）。  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e9b61lhoj30qa0l1ah8.jpg\"/>\n\n- 监控系统  \n采用485总线通讯模式，可采集气象、系统运行数据，实现故障报警、远程监测等功能。\n- 逆功率保护  \n适用于不可逆并网方式，当检测到逆 当检测到逆向电流超过额定输出的5%时，光伏发电站在0.5~2s内停止向电网线路送电。\n\n- 向日跟踪系统  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e9f7t2zfj30zf0m34pm.jpg\"/>\n- 电线电缆\n\n- 防雷及接地\n\n##### 2. 光伏电站分类\n\n> 根据装机容量可分为小规模（100kW），中规模（100kW-1MW），大规模（1MW-10MW），超大规模（10MW以上）。\n\n>根据接入电压可分为小规模（接入0.4kV电网），中规模（接入10-35kV），大规模（接入66kV及以上）。\n\n##### 3. 公共电网并网光伏系统\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e93z30maj30va0hvteb.jpg\"/>","source":"_posts/2022/04/分布式光伏.md","raw":"---\ntitle: 分布式光伏\ntags:\n  - grid\nabbrlink: 59997\ndate: 2022-04-18 22:27:06\n---\n\n### 分布式光伏\n\n#### 1. 光伏电站介绍\n\n##### 1. 光伏电站设备介绍\n光伏电站一般由光伏组件、逆变器、汇流箱、监控系统、逆功率保护、向日跟踪系统、电线电缆、防雷及接地组成。\n<!-- more -->\n- 光伏组件  \n光伏组件可以分为平板型组件和聚光型组件。  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e97foyznj30rf0glgq3.jpg\"/>\n\n- 逆变器  \n逆变器是光伏发电站的核心设备。按照逆变器结构和应用特点可以分为三大类：集中式逆变器、组串式逆变器和微型逆变器（又称组件逆变器）。  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e994sctqj30v70h310q.jpg\"/>\n\n- 汇流箱  \n对于大型并网发电系统，为了减少光伏组件与逆变器之间的连接线，方便维护，提高可靠性，一般需要在光伏组件与逆变器之间装设汇流箱（直流汇流装置）。  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e9b61lhoj30qa0l1ah8.jpg\"/>\n\n- 监控系统  \n采用485总线通讯模式，可采集气象、系统运行数据，实现故障报警、远程监测等功能。\n- 逆功率保护  \n适用于不可逆并网方式，当检测到逆 当检测到逆向电流超过额定输出的5%时，光伏发电站在0.5~2s内停止向电网线路送电。\n\n- 向日跟踪系统  \n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e9f7t2zfj30zf0m34pm.jpg\"/>\n- 电线电缆\n\n- 防雷及接地\n\n##### 2. 光伏电站分类\n\n> 根据装机容量可分为小规模（100kW），中规模（100kW-1MW），大规模（1MW-10MW），超大规模（10MW以上）。\n\n>根据接入电压可分为小规模（接入0.4kV电网），中规模（接入10-35kV），大规模（接入66kV及以上）。\n\n##### 3. 公共电网并网光伏系统\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e93z30maj30va0hvteb.jpg\"/>","slug":"分布式光伏","published":1,"updated":"2022-04-19T15:14:00.382Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl295h288000gj8uccbud2vjr","content":"<h3 id=\"分布式光伏\"><a href=\"#分布式光伏\" class=\"headerlink\" title=\"分布式光伏\"></a>分布式光伏</h3><h4 id=\"1-光伏电站介绍\"><a href=\"#1-光伏电站介绍\" class=\"headerlink\" title=\"1. 光伏电站介绍\"></a>1. 光伏电站介绍</h4><h5 id=\"1-光伏电站设备介绍\"><a href=\"#1-光伏电站设备介绍\" class=\"headerlink\" title=\"1. 光伏电站设备介绍\"></a>1. 光伏电站设备介绍</h5><p>光伏电站一般由光伏组件、逆变器、汇流箱、监控系统、逆功率保护、向日跟踪系统、电线电缆、防雷及接地组成。</p>\n<span id=\"more\"></span>\n<ul>\n<li><p>光伏组件<br>光伏组件可以分为平板型组件和聚光型组件。  </p>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e97foyznj30rf0glgq3.jpg\"/>\n</li>\n<li><p>逆变器<br>逆变器是光伏发电站的核心设备。按照逆变器结构和应用特点可以分为三大类：集中式逆变器、组串式逆变器和微型逆变器（又称组件逆变器）。  </p>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e994sctqj30v70h310q.jpg\"/>\n</li>\n<li><p>汇流箱<br>对于大型并网发电系统，为了减少光伏组件与逆变器之间的连接线，方便维护，提高可靠性，一般需要在光伏组件与逆变器之间装设汇流箱（直流汇流装置）。  </p>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e9b61lhoj30qa0l1ah8.jpg\"/>\n</li>\n<li><p>监控系统<br>采用485总线通讯模式，可采集气象、系统运行数据，实现故障报警、远程监测等功能。</p>\n</li>\n<li><p>逆功率保护<br>适用于不可逆并网方式，当检测到逆 当检测到逆向电流超过额定输出的5%时，光伏发电站在0.5~2s内停止向电网线路送电。</p>\n</li>\n<li><p>向日跟踪系统  </p>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e9f7t2zfj30zf0m34pm.jpg\"/></li>\n<li><p>电线电缆</p>\n</li>\n<li><p>防雷及接地</p>\n</li>\n</ul>\n<h5 id=\"2-光伏电站分类\"><a href=\"#2-光伏电站分类\" class=\"headerlink\" title=\"2. 光伏电站分类\"></a>2. 光伏电站分类</h5><blockquote>\n<p>根据装机容量可分为小规模（100kW），中规模（100kW-1MW），大规模（1MW-10MW），超大规模（10MW以上）。</p>\n</blockquote>\n<blockquote>\n<p>根据接入电压可分为小规模（接入0.4kV电网），中规模（接入10-35kV），大规模（接入66kV及以上）。</p>\n</blockquote>\n<h5 id=\"3-公共电网并网光伏系统\"><a href=\"#3-公共电网并网光伏系统\" class=\"headerlink\" title=\"3. 公共电网并网光伏系统\"></a>3. 公共电网并网光伏系统</h5><img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e93z30maj30va0hvteb.jpg\"/>","site":{"data":{}},"excerpt":"<h3 id=\"分布式光伏\"><a href=\"#分布式光伏\" class=\"headerlink\" title=\"分布式光伏\"></a>分布式光伏</h3><h4 id=\"1-光伏电站介绍\"><a href=\"#1-光伏电站介绍\" class=\"headerlink\" title=\"1. 光伏电站介绍\"></a>1. 光伏电站介绍</h4><h5 id=\"1-光伏电站设备介绍\"><a href=\"#1-光伏电站设备介绍\" class=\"headerlink\" title=\"1. 光伏电站设备介绍\"></a>1. 光伏电站设备介绍</h5><p>光伏电站一般由光伏组件、逆变器、汇流箱、监控系统、逆功率保护、向日跟踪系统、电线电缆、防雷及接地组成。</p>","more":"<ul>\n<li><p>光伏组件<br>光伏组件可以分为平板型组件和聚光型组件。  </p>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e97foyznj30rf0glgq3.jpg\"/>\n</li>\n<li><p>逆变器<br>逆变器是光伏发电站的核心设备。按照逆变器结构和应用特点可以分为三大类：集中式逆变器、组串式逆变器和微型逆变器（又称组件逆变器）。  </p>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e994sctqj30v70h310q.jpg\"/>\n</li>\n<li><p>汇流箱<br>对于大型并网发电系统，为了减少光伏组件与逆变器之间的连接线，方便维护，提高可靠性，一般需要在光伏组件与逆变器之间装设汇流箱（直流汇流装置）。  </p>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e9b61lhoj30qa0l1ah8.jpg\"/>\n</li>\n<li><p>监控系统<br>采用485总线通讯模式，可采集气象、系统运行数据，实现故障报警、远程监测等功能。</p>\n</li>\n<li><p>逆功率保护<br>适用于不可逆并网方式，当检测到逆 当检测到逆向电流超过额定输出的5%时，光伏发电站在0.5~2s内停止向电网线路送电。</p>\n</li>\n<li><p>向日跟踪系统  </p>\n<img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e9f7t2zfj30zf0m34pm.jpg\"/></li>\n<li><p>电线电缆</p>\n</li>\n<li><p>防雷及接地</p>\n</li>\n</ul>\n<h5 id=\"2-光伏电站分类\"><a href=\"#2-光伏电站分类\" class=\"headerlink\" title=\"2. 光伏电站分类\"></a>2. 光伏电站分类</h5><blockquote>\n<p>根据装机容量可分为小规模（100kW），中规模（100kW-1MW），大规模（1MW-10MW），超大规模（10MW以上）。</p>\n</blockquote>\n<blockquote>\n<p>根据接入电压可分为小规模（接入0.4kV电网），中规模（接入10-35kV），大规模（接入66kV及以上）。</p>\n</blockquote>\n<h5 id=\"3-公共电网并网光伏系统\"><a href=\"#3-公共电网并网光伏系统\" class=\"headerlink\" title=\"3. 公共电网并网光伏系统\"></a>3. 公共电网并网光伏系统</h5><img src=\"http://tva1.sinaimg.cn/mw690/006WUTFIgy1h1e93z30maj30va0hvteb.jpg\"/>"},{"title":"GRE","abbrlink":20459,"date":"2022-04-20T14:57:39.000Z","_content":"\n## GRE  \n\n在了解GRE之前首先要了解什么是overlay，overlay是一种将二层网络（业务的）架构在三层/四层（传统网络的）报文中进行传递的网络技术。\n\n<!--more -->\n\nNVGRE是将以太网报文封装到GRE内的一种隧道转发模式。采用24比特识别二层网络分段、称为VSI，类似于VLAN ID的作用。为了使NVGRE利用承载网络路由的均衡性，NVGRE在GRE扩展字段flow ID，要求物理网络能够识别GRE隧道的扩展信息，并以flow ID进行流量分担。\n\n<font color=\"red\">GRE</font>协议是思科公司提出，通用路由封装协议","source":"_posts/2022/04/GRE.md","raw":"---\ntitle: GRE\ntags:\n  - web\nabbrlink: 20459\ndate: 2022-04-20 22:57:39\n---\n\n## GRE  \n\n在了解GRE之前首先要了解什么是overlay，overlay是一种将二层网络（业务的）架构在三层/四层（传统网络的）报文中进行传递的网络技术。\n\n<!--more -->\n\nNVGRE是将以太网报文封装到GRE内的一种隧道转发模式。采用24比特识别二层网络分段、称为VSI，类似于VLAN ID的作用。为了使NVGRE利用承载网络路由的均衡性，NVGRE在GRE扩展字段flow ID，要求物理网络能够识别GRE隧道的扩展信息，并以flow ID进行流量分担。\n\n<font color=\"red\">GRE</font>协议是思科公司提出，通用路由封装协议","slug":"GRE","published":1,"updated":"2022-04-23T15:06:10.908Z","_id":"cl2bzu0qv0000wkuchn0f8sac","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"GRE\"><a href=\"#GRE\" class=\"headerlink\" title=\"GRE\"></a>GRE</h2><p>在了解GRE之前首先要了解什么是overlay，overlay是一种将二层网络（业务的）架构在三层&#x2F;四层（传统网络的）报文中进行传递的网络技术。</p>\n<span id=\"more\"></span>\n\n<p>NVGRE是将以太网报文封装到GRE内的一种隧道转发模式。采用24比特识别二层网络分段、称为VSI，类似于VLAN ID的作用。为了使NVGRE利用承载网络路由的均衡性，NVGRE在GRE扩展字段flow ID，要求物理网络能够识别GRE隧道的扩展信息，并以flow ID进行流量分担。</p>\n<p><font color=\"red\">GRE</font>协议是思科公司提出，通用路由封装协议</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"GRE\"><a href=\"#GRE\" class=\"headerlink\" title=\"GRE\"></a>GRE</h2><p>在了解GRE之前首先要了解什么是overlay，overlay是一种将二层网络（业务的）架构在三层&#x2F;四层（传统网络的）报文中进行传递的网络技术。</p>","more":"<p>NVGRE是将以太网报文封装到GRE内的一种隧道转发模式。采用24比特识别二层网络分段、称为VSI，类似于VLAN ID的作用。为了使NVGRE利用承载网络路由的均衡性，NVGRE在GRE扩展字段flow ID，要求物理网络能够识别GRE隧道的扩展信息，并以flow ID进行流量分担。</p>\n<p><font color=\"red\">GRE</font>协议是思科公司提出，通用路由封装协议</p>"},{"title":"IPSec","abbrlink":42583,"date":"2022-04-23T14:47:34.000Z","_content":"\n## IPSec协议\n\n#### 1. IPSec协议概述\n\nInternet安全协议（Internet Protocol Security，IPSec）是一个工业标准网络安全协议，为IP网络提供透明的安全服务，保护TCP/IP通信免遭窃听和篡改，可以有效抵御网络攻击。\n\n<!--more -->\n\nIPSec的三种不同形式\n- 认证  \n通过认证可以确定接受的数据与所发送的数据是否一致。也可以确认发送者的身份是真实的，还是伪装的。\n- 数据完整性  \n确保数据从发送者到接收者过程中没有任何无法检测的丢失和改变。\n- 保密  \n只有接收者可以获取发送的真正内容，无关的接收者无法获知真正的内容。\n\nIPSec三个基本要素来提供保护。（三个要素可以组合应用）\n\n- 验证首部，AH。  \nAH可以提供数据源认证和无连接的数据完整性服务。（对应上边三种形式）\n- 封装安全载荷，ESP  \nESP除了可以提供AH提供的服务外，还可以提供无连接的数据保密服务。\n- 互联网密钥管理协议，IKMP\n\nIPSec的两种工作模式  \n\n- 传输模式\n传输模式主要对IP数据包的数据部分信息提供安全保护，即对IP数据包的上层协议数据进行保护（TCP、UDP、ICMP）。其中使用AH模式时，主要对IP数据报（IP首部中选项部分除外）提供认证保护。使用ESP模式时，对IP数据包上层信息提供加密和认证双重保护。IPSec在心愿执行加密、认证和处理，在安全通道传输，主机必须配置IPSec。\n- 隧道模式  \n隧道模式是对整个IP数据报提供保护，基本原理是构建新的IP数据包，将原来的数据报作为新数据报的数据部分，并对新的IP数据包提供安全保护。当使用AH模式时，对整个IP数据报提供认证保护。使用ESP模式时，为整个IP数据包提供加密和认证双重保护。IPSec的处理实际在安全网关上进行。","source":"_posts/2022/04/IPSec.md","raw":"---\ntitle: IPSec\ntags:\n  - web\nabbrlink: 42583\ndate: 2022-04-23 22:47:34\n---\n\n## IPSec协议\n\n#### 1. IPSec协议概述\n\nInternet安全协议（Internet Protocol Security，IPSec）是一个工业标准网络安全协议，为IP网络提供透明的安全服务，保护TCP/IP通信免遭窃听和篡改，可以有效抵御网络攻击。\n\n<!--more -->\n\nIPSec的三种不同形式\n- 认证  \n通过认证可以确定接受的数据与所发送的数据是否一致。也可以确认发送者的身份是真实的，还是伪装的。\n- 数据完整性  \n确保数据从发送者到接收者过程中没有任何无法检测的丢失和改变。\n- 保密  \n只有接收者可以获取发送的真正内容，无关的接收者无法获知真正的内容。\n\nIPSec三个基本要素来提供保护。（三个要素可以组合应用）\n\n- 验证首部，AH。  \nAH可以提供数据源认证和无连接的数据完整性服务。（对应上边三种形式）\n- 封装安全载荷，ESP  \nESP除了可以提供AH提供的服务外，还可以提供无连接的数据保密服务。\n- 互联网密钥管理协议，IKMP\n\nIPSec的两种工作模式  \n\n- 传输模式\n传输模式主要对IP数据包的数据部分信息提供安全保护，即对IP数据包的上层协议数据进行保护（TCP、UDP、ICMP）。其中使用AH模式时，主要对IP数据报（IP首部中选项部分除外）提供认证保护。使用ESP模式时，对IP数据包上层信息提供加密和认证双重保护。IPSec在心愿执行加密、认证和处理，在安全通道传输，主机必须配置IPSec。\n- 隧道模式  \n隧道模式是对整个IP数据报提供保护，基本原理是构建新的IP数据包，将原来的数据报作为新数据报的数据部分，并对新的IP数据包提供安全保护。当使用AH模式时，对整个IP数据报提供认证保护。使用ESP模式时，为整个IP数据包提供加密和认证双重保护。IPSec的处理实际在安全网关上进行。","slug":"IPSec","published":1,"updated":"2022-04-23T15:06:01.440Z","_id":"cl2bzu0rv0002wkuc3kiuflco","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"IPSec协议\"><a href=\"#IPSec协议\" class=\"headerlink\" title=\"IPSec协议\"></a>IPSec协议</h2><h4 id=\"1-IPSec协议概述\"><a href=\"#1-IPSec协议概述\" class=\"headerlink\" title=\"1. IPSec协议概述\"></a>1. IPSec协议概述</h4><p>Internet安全协议（Internet Protocol Security，IPSec）是一个工业标准网络安全协议，为IP网络提供透明的安全服务，保护TCP&#x2F;IP通信免遭窃听和篡改，可以有效抵御网络攻击。</p>\n<span id=\"more\"></span>\n\n<p>IPSec的三种不同形式</p>\n<ul>\n<li>认证<br>通过认证可以确定接受的数据与所发送的数据是否一致。也可以确认发送者的身份是真实的，还是伪装的。</li>\n<li>数据完整性<br>确保数据从发送者到接收者过程中没有任何无法检测的丢失和改变。</li>\n<li>保密<br>只有接收者可以获取发送的真正内容，无关的接收者无法获知真正的内容。</li>\n</ul>\n<p>IPSec三个基本要素来提供保护。（三个要素可以组合应用）</p>\n<ul>\n<li>验证首部，AH。<br>AH可以提供数据源认证和无连接的数据完整性服务。（对应上边三种形式）</li>\n<li>封装安全载荷，ESP<br>ESP除了可以提供AH提供的服务外，还可以提供无连接的数据保密服务。</li>\n<li>互联网密钥管理协议，IKMP</li>\n</ul>\n<p>IPSec的两种工作模式  </p>\n<ul>\n<li>传输模式<br>传输模式主要对IP数据包的数据部分信息提供安全保护，即对IP数据包的上层协议数据进行保护（TCP、UDP、ICMP）。其中使用AH模式时，主要对IP数据报（IP首部中选项部分除外）提供认证保护。使用ESP模式时，对IP数据包上层信息提供加密和认证双重保护。IPSec在心愿执行加密、认证和处理，在安全通道传输，主机必须配置IPSec。</li>\n<li>隧道模式<br>隧道模式是对整个IP数据报提供保护，基本原理是构建新的IP数据包，将原来的数据报作为新数据报的数据部分，并对新的IP数据包提供安全保护。当使用AH模式时，对整个IP数据报提供认证保护。使用ESP模式时，为整个IP数据包提供加密和认证双重保护。IPSec的处理实际在安全网关上进行。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"IPSec协议\"><a href=\"#IPSec协议\" class=\"headerlink\" title=\"IPSec协议\"></a>IPSec协议</h2><h4 id=\"1-IPSec协议概述\"><a href=\"#1-IPSec协议概述\" class=\"headerlink\" title=\"1. IPSec协议概述\"></a>1. IPSec协议概述</h4><p>Internet安全协议（Internet Protocol Security，IPSec）是一个工业标准网络安全协议，为IP网络提供透明的安全服务，保护TCP&#x2F;IP通信免遭窃听和篡改，可以有效抵御网络攻击。</p>","more":"<p>IPSec的三种不同形式</p>\n<ul>\n<li>认证<br>通过认证可以确定接受的数据与所发送的数据是否一致。也可以确认发送者的身份是真实的，还是伪装的。</li>\n<li>数据完整性<br>确保数据从发送者到接收者过程中没有任何无法检测的丢失和改变。</li>\n<li>保密<br>只有接收者可以获取发送的真正内容，无关的接收者无法获知真正的内容。</li>\n</ul>\n<p>IPSec三个基本要素来提供保护。（三个要素可以组合应用）</p>\n<ul>\n<li>验证首部，AH。<br>AH可以提供数据源认证和无连接的数据完整性服务。（对应上边三种形式）</li>\n<li>封装安全载荷，ESP<br>ESP除了可以提供AH提供的服务外，还可以提供无连接的数据保密服务。</li>\n<li>互联网密钥管理协议，IKMP</li>\n</ul>\n<p>IPSec的两种工作模式  </p>\n<ul>\n<li>传输模式<br>传输模式主要对IP数据包的数据部分信息提供安全保护，即对IP数据包的上层协议数据进行保护（TCP、UDP、ICMP）。其中使用AH模式时，主要对IP数据报（IP首部中选项部分除外）提供认证保护。使用ESP模式时，对IP数据包上层信息提供加密和认证双重保护。IPSec在心愿执行加密、认证和处理，在安全通道传输，主机必须配置IPSec。</li>\n<li>隧道模式<br>隧道模式是对整个IP数据报提供保护，基本原理是构建新的IP数据包，将原来的数据报作为新数据报的数据部分，并对新的IP数据包提供安全保护。当使用AH模式时，对整个IP数据报提供认证保护。使用ESP模式时，为整个IP数据包提供加密和认证双重保护。IPSec的处理实际在安全网关上进行。</li>\n</ul>"},{"title":"OTN","abbrlink":9103,"date":"2022-04-27T14:25:12.000Z","_content":"\n## OTN\n\n#### 1. 传输网技术演进  \n\n\n<!--more -->\n\n| 技术 | 特性 | 特点|\n| -- | -- | -- |\n| PDH | | |\n| SDH | 同步数字序列，SDH传输网以同步时分复用和光纤技术为核心。SDH利用交叉链接单元、分叉复用单元和信号再生放大单元等网元设备构成线性、星形、环形和网孔形多种拓扑结构的传输网。 | 1.SDH接口采用统一的标准和协议、统一的比特率，统一的同步复用格式。这样不同厂商之间**接口可兼容**。 2.采用同步复用的同时具备灵活的复用映射结构，从而实现上层业务信息传输的透明性，**使SDH成为独立于各类业务的传输平台。** 3. 字节复接技术，信号上下支路变得十分简单。 4. SDH提出自愈网概念。 5. 强大的网络管理功能  |\n| MSTP |MSTP将传统的SDH复用器、光波分复用系统终端、数字交叉连接器、网络二层交换机、IP边缘路由器等独立设备合成一个网络设备进行统一控制与管理。MSTP充分利用SDH有点，给传送的信息提供保护恢复能力及较小的实验，利用2.5层交换技术实现对二层技术与三层技术的数据智能支持 | MSTP既能满足某些实时交换服务高QoS要求，也能满足以太网尽力而为的交互方式。同时MSTP既能提供点对点传送服务，也能提供多点传送服务。因此MSTP适合工作在网络边缘，处理混合型业务 |\n| PTN | PTN光传送网络架构及具体技术：一个新的层面工作在IP业务和底层光传输媒质之间，针对分组业务流量的突发性和统计复用传送的要求而设计，同时兼顾其他类型业务。| PTN充分继承了传送网、IP/MPLS、以太网的优势，1. PTN继承了SDH的优势，具备丰富的保护倒换和恢复方式（50ms电信级业务保护倒换），2.拥有完善的OAM体系，良好的同步性能和强大的网管系统，3.完成了与IP/MPLS多种方式的互联互通、无缝承载核心IP业务，4.提供更加适合IP业务的柔性传输管道，适合各种粗细颗粒业务，以提高效率的方式拓展了有效带宽，5.适应数据业务特性，分组交换、统计复用、面向连接的标签交换，分组QoS... |\n|WDM | WDM波分复用技术，指的是在一根光纤中同时传输多个波长的光载波信号。WDM系统被分为密集波分复用（DWDM）和粗波分复用（CWDM）。 | DWDM缺点在于需要色散技术来客服多波长系统中的非线性失真，同时DWDm采用的温度调谐的冷却激光成本较高。CWDM对激光器的要求相对较低。 |\n|OTN| OTN继承了SDH和WDM双重优势，是一种以DWDM与光通信技术为基础、在光层组织网络的传送网。由光放大、光分插复用、光交叉链接等网元设备组成、处理波长级业务。OTN可以提供巨大的传送容量、完全透明的端到端波长/子波长连接以及电信级的保护以及加强的子波长汇聚和疏导能力。 | 1. OTN现有定义的电层带宽颗粒为光通路数据单元（ODUk，k=0、1、2、3），光层的带宽颗粒为波长，OTN配置、复用以及交叉的颗粒度大很多，从而极巨提升了高带宽数据业务的传送效率和适配能力。2. OTN可以支持注入SDH、ATM、以太网等信号映射与透明传输，最大化利用现有设备资源。3.OTN通过采用ODUk交叉、OTN帧结构和多维度可重构光分插复用器，使的一根光纤的不同波长接口速率和数据格式相互独立，同一根光纤传送不同业务。4. OTN开销管理能力，灵活的基于电层和光层的业务保护功能。 |\n\n#### 2. 光纤通信SDH\n\n- SDH帧结构\n\n![SDH帧结构.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9dsskdyj31ni11manf.jpg =400x300)\n\nSDH 帧一个 STM-N 帧有 9 行，每行由 270×N 个字节组成。每帧共有 9×270×?N? 个字节， 每字节为 8 bit。 帧周期为 125 μs， 即每秒传输 8000 帧。对于 STM1 而言，传输速率为 9×270×8×8000=155.520 Mb/s。字节发送顺序为：由上往下逐行发送，每行先左后右。\n\n- SDH复用映射\n\n![SDH复用映射.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9onvfb8j317u0jm7ef.jpg =600x400)\n\n不同业务信号复用进STM-n帧的过程经历三个步骤：映射->定位->复用\n\n其特殊的复用结构允许准同步数字序列PDH、低速SDH、等其他信号接入其帧结构。\n\n- SDH网元\n\nSDH网元有四种，分别为TM终端复用器，ADM分插复用器、REG再生中继器、DXC数字交叉连接设备。\n![SDH网元.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9mzs0t6j31yo16qawk.jpg =400x300)\n\n- SDH网络保护\n\nSDH网络保护分为线路保护倒换、环形网保护、子网连接保护。其中线路保护倒换分为1+1，1：n两种。环形网保护分为二纤单向通道倒换环，二纤向复用段倒换环。\n\n\n\n#### 3. 光纤通信OTN\n\n目前城域核心层及干线的SDH（同步数字体系）网络适合传送的主要为TDM业务[^1]，但迅猛增加的却是具备统计特性的数据业务，所以，在现有网络层面及其后续的网络建设中不可能大规模地新建SDH网络。这样，自然而然地就考虑到了扩大现有WDM（波分复用系统）网络的规模建设，可IP业务通过POS（基于SDH的分组技术）接口或者以太网接口直接上载到现有 WDM 网络上，将面临组网、保护和维护管理等方面的缺陷。\n\nOTN是新一代骨干通信网技术。具备一下特点：\n- 多种客户信号封装和透明传输：\n\n>OTN帧可以支持多种客户信号的映射，如SDH、ATM、以太网、ODU复用信号，以及自定义速率数据流，使OTN可以传送这些信号格式，或以这些信号为载体的更高层次的客户信号，如以太网、MPLS、光纤通道、HDLC/PPP、PRP、IP、MPLS、FICON、ESCON及DVBASI视频信号等，不同应用的业务都可统一到一个传送平台上去。此外，OTN还支持无损调整ODUflex（GFP）连接带宽的控制机制（G.HAO）\n\n![OTN复用结构.jpeg](http://tva1.sinaimg.cn/large/006WUTFIgy1h1wn0kjr19j30l509jmxk.jpg =761x343)\n\n\n- 大容量调度能力：\n\n>相对于SDH网络只能通过VC调度，提供Gbit/s级的容量而言，OTN的基本处理对象是波长，可以进行大颗粒的调度处理，可提供Tbit/s级的带宽容量。\n\n- 强大的运行、维护、管理与指配能力：\n\n>OTN 定义了一系列用于运行、维护、管理与指配的开销，包括随路开销与非随路开销，利用这些开销可以对光传送网进行全面而精细的监测与管理，为用户提供一个可运营，可管理的光网络。为了支持跨不同运营商网络的通道监视功能，OTN提供了6级串联连接监视功能，监视连接可以是嵌套式、重叠式和/或级联式，可以对一根光纤中复用的多个波长同时进行管理。\n\n- 强大的运行、维护、管理与指配能力：\n\n>OTN 定义了一系列用于运行、维护、管理与指配的开销，包括随路开销与非随路开销，利用这些开销可以对光传送网进行全面而精细的监测与管理，为用户提供一个可运营，可管理的光网络。为了支持跨不同运营商网络的通道监视功能，OTN提供了6级串联连接监视功能，监视连接可以是嵌套式、重叠式和/或级联式，可以对一根光纤中复用的多个波长同时进行管理。\n\nOTN帧结构：\n\n![OTN帧结构.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1xwksa1utj318w0ukadq.jpg =800x550)\n\nOTN中的帧被称为光信道传送单元OTU，他是通过数字封包技术向客户信号加入OPU-OH形成OPU，OPU加上ODU-OH形成ODU，FAS、OTU-OH、FEC加入ODU形成OTU。最后加上OCH层非随路开销，完成OTU到OCH层的映射。\n\n(1) 开销部分 (Overhead)：位于信封头部，装载开销字节。利用开销字节，OTN 节点可以通过网络传送和转发管理、控制信息、执行性能监视，以及其他可能的基于每波长的网络管理功能。  \n(2)  FEC 部分：位于信封尾部，装载前向差错校正码 FEC (Forward Error Correction)，FEC 部分执行差错的检测和校正，与 SDH/SONET 中采用的 BIP-8 (Bit Interleaved Parity) 错误监视机制不同，FEC 有校正错误的能力，这使得运营商可以为支持不同级别的 SLA (Service Level Agreement)。通过最大限度地减少差错，FEC 在扩展光段的距离、提高传输速率方面扮演了关键的角色。  \n(3) 净负荷部分：位于 Header 和 Trailer 之间，它承载现有的各种网络协议数据包，而无需改变它们，因此 OTN 是独立于协议的。\n\n- FEC功能：\n\nOTN帧中专门有一个带外FEC区域，通过前向纠错FEC可获得5～6dB的增益，从而降低了对OSNR的要求，增加了系统的传输距离。\n\n- 强大的分组处理能力：\n\n>随着OTN和PTN的应用与推广，在我国许多大中城市的城域核心层，存在着 PTN 和现有 WDM/OTN 设备背靠背组网的应用场景，目的是既解决大容量传送也实现分组业务的高效处理。从便于网络运维、减少传送设备种类和降低综合成本的角度出发，需要将OTN和PTN的功能特性和设备形态进一步地有机融合，从而催生了新一代光传送网产品形态——分组光传送网（POTN），目的是实现 L0 WDM/ROADM 光层、L1 SDH/OTN层和L2分组传送层（包括以太网和MPLS-TP）的功能集成和有机融合。POTN将最先应用在城域核心和汇聚层，随着接入层容量需求的提升，逐步向接入层延伸。\n\n---\n\n完整的OTN包含电域和光域功能，在电层，OTN借鉴了SDH的映射、复用、交叉、嵌入式开销等概念；在光层，OTN借鉴了传统WDM的技术体系并有所发展，OTN的业务层次如图所示。在OPU层实现客户信号适配，在ODU层实现子波长交叉，在OTU层实现数据成帧，OCH层实现波长级交叉，OMS层实现光路复用，OTS层实现信号传输。其中OPU、ODU、OTU属于电层，OCH、OMS、OTS属于光层。\n\n![OTN业务层次图.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1wnkddtaej31ms11uk0v.jpg =540x343)\n\n---\n\n1.同步网\n\n同步网分为三种方式，主从同步、准同步、互同步。其中我国采用的是等级主从同步的方式。\n\n- 时间同步  \n时间同步不仅要求频率上同步还要求相位也要同步\n- 时钟同步：  \n时钟同步本质上还是频率同步\n\nSDH只要求时钟同步不要求时间同步。\n\n![我国的SDH网络.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1va91xvy4j30o40q9dkd.jpg =500x600)\n\n[^1]:TDM 就是时分复用模式。时分复用是指一种通过不同信道或时隙中的交叉位脉冲，同时在同一个通信媒体上传输多个数字化数据、语音和视频信号等的技术。电话网络（PSTN）基于 TDM 技术，通常又称为 TDM 访问网络.","source":"_posts/2022/04/OTN.md","raw":"---\ntitle: OTN\ntags:\n  - 通信\nabbrlink: 9103\ndate: 2022-04-27 22:25:12\n---\n\n## OTN\n\n#### 1. 传输网技术演进  \n\n\n<!--more -->\n\n| 技术 | 特性 | 特点|\n| -- | -- | -- |\n| PDH | | |\n| SDH | 同步数字序列，SDH传输网以同步时分复用和光纤技术为核心。SDH利用交叉链接单元、分叉复用单元和信号再生放大单元等网元设备构成线性、星形、环形和网孔形多种拓扑结构的传输网。 | 1.SDH接口采用统一的标准和协议、统一的比特率，统一的同步复用格式。这样不同厂商之间**接口可兼容**。 2.采用同步复用的同时具备灵活的复用映射结构，从而实现上层业务信息传输的透明性，**使SDH成为独立于各类业务的传输平台。** 3. 字节复接技术，信号上下支路变得十分简单。 4. SDH提出自愈网概念。 5. 强大的网络管理功能  |\n| MSTP |MSTP将传统的SDH复用器、光波分复用系统终端、数字交叉连接器、网络二层交换机、IP边缘路由器等独立设备合成一个网络设备进行统一控制与管理。MSTP充分利用SDH有点，给传送的信息提供保护恢复能力及较小的实验，利用2.5层交换技术实现对二层技术与三层技术的数据智能支持 | MSTP既能满足某些实时交换服务高QoS要求，也能满足以太网尽力而为的交互方式。同时MSTP既能提供点对点传送服务，也能提供多点传送服务。因此MSTP适合工作在网络边缘，处理混合型业务 |\n| PTN | PTN光传送网络架构及具体技术：一个新的层面工作在IP业务和底层光传输媒质之间，针对分组业务流量的突发性和统计复用传送的要求而设计，同时兼顾其他类型业务。| PTN充分继承了传送网、IP/MPLS、以太网的优势，1. PTN继承了SDH的优势，具备丰富的保护倒换和恢复方式（50ms电信级业务保护倒换），2.拥有完善的OAM体系，良好的同步性能和强大的网管系统，3.完成了与IP/MPLS多种方式的互联互通、无缝承载核心IP业务，4.提供更加适合IP业务的柔性传输管道，适合各种粗细颗粒业务，以提高效率的方式拓展了有效带宽，5.适应数据业务特性，分组交换、统计复用、面向连接的标签交换，分组QoS... |\n|WDM | WDM波分复用技术，指的是在一根光纤中同时传输多个波长的光载波信号。WDM系统被分为密集波分复用（DWDM）和粗波分复用（CWDM）。 | DWDM缺点在于需要色散技术来客服多波长系统中的非线性失真，同时DWDm采用的温度调谐的冷却激光成本较高。CWDM对激光器的要求相对较低。 |\n|OTN| OTN继承了SDH和WDM双重优势，是一种以DWDM与光通信技术为基础、在光层组织网络的传送网。由光放大、光分插复用、光交叉链接等网元设备组成、处理波长级业务。OTN可以提供巨大的传送容量、完全透明的端到端波长/子波长连接以及电信级的保护以及加强的子波长汇聚和疏导能力。 | 1. OTN现有定义的电层带宽颗粒为光通路数据单元（ODUk，k=0、1、2、3），光层的带宽颗粒为波长，OTN配置、复用以及交叉的颗粒度大很多，从而极巨提升了高带宽数据业务的传送效率和适配能力。2. OTN可以支持注入SDH、ATM、以太网等信号映射与透明传输，最大化利用现有设备资源。3.OTN通过采用ODUk交叉、OTN帧结构和多维度可重构光分插复用器，使的一根光纤的不同波长接口速率和数据格式相互独立，同一根光纤传送不同业务。4. OTN开销管理能力，灵活的基于电层和光层的业务保护功能。 |\n\n#### 2. 光纤通信SDH\n\n- SDH帧结构\n\n![SDH帧结构.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9dsskdyj31ni11manf.jpg =400x300)\n\nSDH 帧一个 STM-N 帧有 9 行，每行由 270×N 个字节组成。每帧共有 9×270×?N? 个字节， 每字节为 8 bit。 帧周期为 125 μs， 即每秒传输 8000 帧。对于 STM1 而言，传输速率为 9×270×8×8000=155.520 Mb/s。字节发送顺序为：由上往下逐行发送，每行先左后右。\n\n- SDH复用映射\n\n![SDH复用映射.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9onvfb8j317u0jm7ef.jpg =600x400)\n\n不同业务信号复用进STM-n帧的过程经历三个步骤：映射->定位->复用\n\n其特殊的复用结构允许准同步数字序列PDH、低速SDH、等其他信号接入其帧结构。\n\n- SDH网元\n\nSDH网元有四种，分别为TM终端复用器，ADM分插复用器、REG再生中继器、DXC数字交叉连接设备。\n![SDH网元.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9mzs0t6j31yo16qawk.jpg =400x300)\n\n- SDH网络保护\n\nSDH网络保护分为线路保护倒换、环形网保护、子网连接保护。其中线路保护倒换分为1+1，1：n两种。环形网保护分为二纤单向通道倒换环，二纤向复用段倒换环。\n\n\n\n#### 3. 光纤通信OTN\n\n目前城域核心层及干线的SDH（同步数字体系）网络适合传送的主要为TDM业务[^1]，但迅猛增加的却是具备统计特性的数据业务，所以，在现有网络层面及其后续的网络建设中不可能大规模地新建SDH网络。这样，自然而然地就考虑到了扩大现有WDM（波分复用系统）网络的规模建设，可IP业务通过POS（基于SDH的分组技术）接口或者以太网接口直接上载到现有 WDM 网络上，将面临组网、保护和维护管理等方面的缺陷。\n\nOTN是新一代骨干通信网技术。具备一下特点：\n- 多种客户信号封装和透明传输：\n\n>OTN帧可以支持多种客户信号的映射，如SDH、ATM、以太网、ODU复用信号，以及自定义速率数据流，使OTN可以传送这些信号格式，或以这些信号为载体的更高层次的客户信号，如以太网、MPLS、光纤通道、HDLC/PPP、PRP、IP、MPLS、FICON、ESCON及DVBASI视频信号等，不同应用的业务都可统一到一个传送平台上去。此外，OTN还支持无损调整ODUflex（GFP）连接带宽的控制机制（G.HAO）\n\n![OTN复用结构.jpeg](http://tva1.sinaimg.cn/large/006WUTFIgy1h1wn0kjr19j30l509jmxk.jpg =761x343)\n\n\n- 大容量调度能力：\n\n>相对于SDH网络只能通过VC调度，提供Gbit/s级的容量而言，OTN的基本处理对象是波长，可以进行大颗粒的调度处理，可提供Tbit/s级的带宽容量。\n\n- 强大的运行、维护、管理与指配能力：\n\n>OTN 定义了一系列用于运行、维护、管理与指配的开销，包括随路开销与非随路开销，利用这些开销可以对光传送网进行全面而精细的监测与管理，为用户提供一个可运营，可管理的光网络。为了支持跨不同运营商网络的通道监视功能，OTN提供了6级串联连接监视功能，监视连接可以是嵌套式、重叠式和/或级联式，可以对一根光纤中复用的多个波长同时进行管理。\n\n- 强大的运行、维护、管理与指配能力：\n\n>OTN 定义了一系列用于运行、维护、管理与指配的开销，包括随路开销与非随路开销，利用这些开销可以对光传送网进行全面而精细的监测与管理，为用户提供一个可运营，可管理的光网络。为了支持跨不同运营商网络的通道监视功能，OTN提供了6级串联连接监视功能，监视连接可以是嵌套式、重叠式和/或级联式，可以对一根光纤中复用的多个波长同时进行管理。\n\nOTN帧结构：\n\n![OTN帧结构.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1xwksa1utj318w0ukadq.jpg =800x550)\n\nOTN中的帧被称为光信道传送单元OTU，他是通过数字封包技术向客户信号加入OPU-OH形成OPU，OPU加上ODU-OH形成ODU，FAS、OTU-OH、FEC加入ODU形成OTU。最后加上OCH层非随路开销，完成OTU到OCH层的映射。\n\n(1) 开销部分 (Overhead)：位于信封头部，装载开销字节。利用开销字节，OTN 节点可以通过网络传送和转发管理、控制信息、执行性能监视，以及其他可能的基于每波长的网络管理功能。  \n(2)  FEC 部分：位于信封尾部，装载前向差错校正码 FEC (Forward Error Correction)，FEC 部分执行差错的检测和校正，与 SDH/SONET 中采用的 BIP-8 (Bit Interleaved Parity) 错误监视机制不同，FEC 有校正错误的能力，这使得运营商可以为支持不同级别的 SLA (Service Level Agreement)。通过最大限度地减少差错，FEC 在扩展光段的距离、提高传输速率方面扮演了关键的角色。  \n(3) 净负荷部分：位于 Header 和 Trailer 之间，它承载现有的各种网络协议数据包，而无需改变它们，因此 OTN 是独立于协议的。\n\n- FEC功能：\n\nOTN帧中专门有一个带外FEC区域，通过前向纠错FEC可获得5～6dB的增益，从而降低了对OSNR的要求，增加了系统的传输距离。\n\n- 强大的分组处理能力：\n\n>随着OTN和PTN的应用与推广，在我国许多大中城市的城域核心层，存在着 PTN 和现有 WDM/OTN 设备背靠背组网的应用场景，目的是既解决大容量传送也实现分组业务的高效处理。从便于网络运维、减少传送设备种类和降低综合成本的角度出发，需要将OTN和PTN的功能特性和设备形态进一步地有机融合，从而催生了新一代光传送网产品形态——分组光传送网（POTN），目的是实现 L0 WDM/ROADM 光层、L1 SDH/OTN层和L2分组传送层（包括以太网和MPLS-TP）的功能集成和有机融合。POTN将最先应用在城域核心和汇聚层，随着接入层容量需求的提升，逐步向接入层延伸。\n\n---\n\n完整的OTN包含电域和光域功能，在电层，OTN借鉴了SDH的映射、复用、交叉、嵌入式开销等概念；在光层，OTN借鉴了传统WDM的技术体系并有所发展，OTN的业务层次如图所示。在OPU层实现客户信号适配，在ODU层实现子波长交叉，在OTU层实现数据成帧，OCH层实现波长级交叉，OMS层实现光路复用，OTS层实现信号传输。其中OPU、ODU、OTU属于电层，OCH、OMS、OTS属于光层。\n\n![OTN业务层次图.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1wnkddtaej31ms11uk0v.jpg =540x343)\n\n---\n\n1.同步网\n\n同步网分为三种方式，主从同步、准同步、互同步。其中我国采用的是等级主从同步的方式。\n\n- 时间同步  \n时间同步不仅要求频率上同步还要求相位也要同步\n- 时钟同步：  \n时钟同步本质上还是频率同步\n\nSDH只要求时钟同步不要求时间同步。\n\n![我国的SDH网络.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h1va91xvy4j30o40q9dkd.jpg =500x600)\n\n[^1]:TDM 就是时分复用模式。时分复用是指一种通过不同信道或时隙中的交叉位脉冲，同时在同一个通信媒体上传输多个数字化数据、语音和视频信号等的技术。电话网络（PSTN）基于 TDM 技术，通常又称为 TDM 访问网络.","slug":"OTN","published":1,"updated":"2022-05-05T16:02:02.050Z","_id":"cl2j3s5ig00009cuc6vabao8o","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"OTN\">OTN</h2>\n<h4 id=\"1-传输网技术演进\">1. 传输网技术演进</h4>\n<span id=\"more\"></span>\n<table>\n<thead>\n<tr>\n<th>技术</th>\n<th>特性</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PDH</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SDH</td>\n<td>同步数字序列，SDH传输网以同步时分复用和光纤技术为核心。SDH利用交叉链接单元、分叉复用单元和信号再生放大单元等网元设备构成线性、星形、环形和网孔形多种拓扑结构的传输网。</td>\n<td>1.SDH接口采用统一的标准和协议、统一的比特率，统一的同步复用格式。这样不同厂商之间<strong>接口可兼容</strong>。 2.采用同步复用的同时具备灵活的复用映射结构，从而实现上层业务信息传输的透明性，<strong>使SDH成为独立于各类业务的传输平台。</strong> 3. 字节复接技术，信号上下支路变得十分简单。 4. SDH提出自愈网概念。 5. 强大的网络管理功能</td>\n</tr>\n<tr>\n<td>MSTP</td>\n<td>MSTP将传统的SDH复用器、光波分复用系统终端、数字交叉连接器、网络二层交换机、IP边缘路由器等独立设备合成一个网络设备进行统一控制与管理。MSTP充分利用SDH有点，给传送的信息提供保护恢复能力及较小的实验，利用2.5层交换技术实现对二层技术与三层技术的数据智能支持</td>\n<td>MSTP既能满足某些实时交换服务高QoS要求，也能满足以太网尽力而为的交互方式。同时MSTP既能提供点对点传送服务，也能提供多点传送服务。因此MSTP适合工作在网络边缘，处理混合型业务</td>\n</tr>\n<tr>\n<td>PTN</td>\n<td>PTN光传送网络架构及具体技术：一个新的层面工作在IP业务和底层光传输媒质之间，针对分组业务流量的突发性和统计复用传送的要求而设计，同时兼顾其他类型业务。</td>\n<td>PTN充分继承了传送网、IP/MPLS、以太网的优势，1. PTN继承了SDH的优势，具备丰富的保护倒换和恢复方式（50ms电信级业务保护倒换），2.拥有完善的OAM体系，良好的同步性能和强大的网管系统，3.完成了与IP/MPLS多种方式的互联互通、无缝承载核心IP业务，4.提供更加适合IP业务的柔性传输管道，适合各种粗细颗粒业务，以提高效率的方式拓展了有效带宽，5.适应数据业务特性，分组交换、统计复用、面向连接的标签交换，分组QoS…</td>\n</tr>\n<tr>\n<td>WDM</td>\n<td>WDM波分复用技术，指的是在一根光纤中同时传输多个波长的光载波信号。WDM系统被分为密集波分复用（DWDM）和粗波分复用（CWDM）。</td>\n<td>DWDM缺点在于需要色散技术来客服多波长系统中的非线性失真，同时DWDm采用的温度调谐的冷却激光成本较高。CWDM对激光器的要求相对较低。</td>\n</tr>\n<tr>\n<td>OTN</td>\n<td>OTN继承了SDH和WDM双重优势，是一种以DWDM与光通信技术为基础、在光层组织网络的传送网。由光放大、光分插复用、光交叉链接等网元设备组成、处理波长级业务。OTN可以提供巨大的传送容量、完全透明的端到端波长/子波长连接以及电信级的保护以及加强的子波长汇聚和疏导能力。</td>\n<td>1. OTN现有定义的电层带宽颗粒为光通路数据单元（ODUk，k=0、1、2、3），光层的带宽颗粒为波长，OTN配置、复用以及交叉的颗粒度大很多，从而极巨提升了高带宽数据业务的传送效率和适配能力。2. OTN可以支持注入SDH、ATM、以太网等信号映射与透明传输，最大化利用现有设备资源。3.OTN通过采用ODUk交叉、OTN帧结构和多维度可重构光分插复用器，使的一根光纤的不同波长接口速率和数据格式相互独立，同一根光纤传送不同业务。4. OTN开销管理能力，灵活的基于电层和光层的业务保护功能。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2-光纤通信SDH\">2. 光纤通信SDH</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SDH帧结构</p>\n</li>\n</ul>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9dsskdyj31ni11manf.jpg\" alt=\"SDH帧结构.png\" width=\"400\" height=\"300\"></p>\n<p>SDH 帧一个 STM-N 帧有 9 行，每行由 270×N 个字节组成。每帧共有 9×270×?N? 个字节， 每字节为 8 bit。 帧周期为 125 μs， 即每秒传输 8000 帧。对于 STM1 而言，传输速率为 9×270×8×8000=155.520 Mb/s。字节发送顺序为：由上往下逐行发送，每行先左后右。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SDH复用映射</p>\n</li>\n</ul>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9onvfb8j317u0jm7ef.jpg\" alt=\"SDH复用映射.png\" width=\"600\" height=\"400\"></p>\n<p>不同业务信号复用进STM-n帧的过程经历三个步骤：映射-&gt;定位-&gt;复用</p>\n<p>其特殊的复用结构允许准同步数字序列PDH、低速SDH、等其他信号接入其帧结构。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SDH网元</p>\n</li>\n</ul>\n<p>SDH网元有四种，分别为TM终端复用器，ADM分插复用器、REG再生中继器、DXC数字交叉连接设备。<br>\n<img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9mzs0t6j31yo16qawk.jpg\" alt=\"SDH网元.png\" width=\"400\" height=\"300\"></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SDH网络保护</p>\n</li>\n</ul>\n<p>SDH网络保护分为线路保护倒换、环形网保护、子网连接保护。其中线路保护倒换分为1+1，1：n两种。环形网保护分为二纤单向通道倒换环，二纤向复用段倒换环。</p>\n<h4 id=\"3-光纤通信OTN\">3. 光纤通信OTN</h4>\n<p>目前城域核心层及干线的SDH（同步数字体系）网络适合传送的主要为TDM业务<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>，但迅猛增加的却是具备统计特性的数据业务，所以，在现有网络层面及其后续的网络建设中不可能大规模地新建SDH网络。这样，自然而然地就考虑到了扩大现有WDM（波分复用系统）网络的规模建设，可IP业务通过POS（基于SDH的分组技术）接口或者以太网接口直接上载到现有 WDM 网络上，将面临组网、保护和维护管理等方面的缺陷。</p>\n<p>OTN是新一代骨干通信网技术。具备一下特点：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>多种客户信号封装和透明传输：</p>\n</li>\n</ul>\n<blockquote>\n<p>OTN帧可以支持多种客户信号的映射，如SDH、ATM、以太网、ODU复用信号，以及自定义速率数据流，使OTN可以传送这些信号格式，或以这些信号为载体的更高层次的客户信号，如以太网、MPLS、光纤通道、HDLC/PPP、PRP、IP、MPLS、FICON、ESCON及DVBASI视频信号等，不同应用的业务都可统一到一个传送平台上去。此外，OTN还支持无损调整ODUflex（GFP）连接带宽的控制机制（G.HAO）</p>\n</blockquote>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1wn0kjr19j30l509jmxk.jpg\" alt=\"OTN复用结构.jpeg\" width=\"761\" height=\"343\"></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>大容量调度能力：</p>\n</li>\n</ul>\n<blockquote>\n<p>相对于SDH网络只能通过VC调度，提供Gbit/s级的容量而言，OTN的基本处理对象是波长，可以进行大颗粒的调度处理，可提供Tbit/s级的带宽容量。</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>强大的运行、维护、管理与指配能力：</p>\n</li>\n</ul>\n<blockquote>\n<p>OTN 定义了一系列用于运行、维护、管理与指配的开销，包括随路开销与非随路开销，利用这些开销可以对光传送网进行全面而精细的监测与管理，为用户提供一个可运营，可管理的光网络。为了支持跨不同运营商网络的通道监视功能，OTN提供了6级串联连接监视功能，监视连接可以是嵌套式、重叠式和/或级联式，可以对一根光纤中复用的多个波长同时进行管理。</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>强大的运行、维护、管理与指配能力：</p>\n</li>\n</ul>\n<blockquote>\n<p>OTN 定义了一系列用于运行、维护、管理与指配的开销，包括随路开销与非随路开销，利用这些开销可以对光传送网进行全面而精细的监测与管理，为用户提供一个可运营，可管理的光网络。为了支持跨不同运营商网络的通道监视功能，OTN提供了6级串联连接监视功能，监视连接可以是嵌套式、重叠式和/或级联式，可以对一根光纤中复用的多个波长同时进行管理。</p>\n</blockquote>\n<p>OTN帧结构：</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1xwksa1utj318w0ukadq.jpg\" alt=\"OTN帧结构.png\" width=\"800\" height=\"550\"></p>\n<p>OTN中的帧被称为光信道传送单元OTU，他是通过数字封包技术向客户信号加入OPU-OH形成OPU，OPU加上ODU-OH形成ODU，FAS、OTU-OH、FEC加入ODU形成OTU。最后加上OCH层非随路开销，完成OTU到OCH层的映射。</p>\n<p>(1) 开销部分 (Overhead)：位于信封头部，装载开销字节。利用开销字节，OTN 节点可以通过网络传送和转发管理、控制信息、执行性能监视，以及其他可能的基于每波长的网络管理功能。<br>\n(2)  FEC 部分：位于信封尾部，装载前向差错校正码 FEC (Forward Error Correction)，FEC 部分执行差错的检测和校正，与 SDH/SONET 中采用的 BIP-8 (Bit Interleaved Parity) 错误监视机制不同，FEC 有校正错误的能力，这使得运营商可以为支持不同级别的 SLA (Service Level Agreement)。通过最大限度地减少差错，FEC 在扩展光段的距离、提高传输速率方面扮演了关键的角色。<br>\n(3) 净负荷部分：位于 Header 和 Trailer 之间，它承载现有的各种网络协议数据包，而无需改变它们，因此 OTN 是独立于协议的。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>FEC功能：</p>\n</li>\n</ul>\n<p>OTN帧中专门有一个带外FEC区域，通过前向纠错FEC可获得5～6dB的增益，从而降低了对OSNR的要求，增加了系统的传输距离。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>强大的分组处理能力：</p>\n</li>\n</ul>\n<blockquote>\n<p>随着OTN和PTN的应用与推广，在我国许多大中城市的城域核心层，存在着 PTN 和现有 WDM/OTN 设备背靠背组网的应用场景，目的是既解决大容量传送也实现分组业务的高效处理。从便于网络运维、减少传送设备种类和降低综合成本的角度出发，需要将OTN和PTN的功能特性和设备形态进一步地有机融合，从而催生了新一代光传送网产品形态——分组光传送网（POTN），目的是实现 L0 WDM/ROADM 光层、L1 SDH/OTN层和L2分组传送层（包括以太网和MPLS-TP）的功能集成和有机融合。POTN将最先应用在城域核心和汇聚层，随着接入层容量需求的提升，逐步向接入层延伸。</p>\n</blockquote>\n<hr>\n<p>完整的OTN包含电域和光域功能，在电层，OTN借鉴了SDH的映射、复用、交叉、嵌入式开销等概念；在光层，OTN借鉴了传统WDM的技术体系并有所发展，OTN的业务层次如图所示。在OPU层实现客户信号适配，在ODU层实现子波长交叉，在OTU层实现数据成帧，OCH层实现波长级交叉，OMS层实现光路复用，OTS层实现信号传输。其中OPU、ODU、OTU属于电层，OCH、OMS、OTS属于光层。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1wnkddtaej31ms11uk0v.jpg\" alt=\"OTN业务层次图.png\" width=\"540\" height=\"343\"></p>\n<hr>\n<p>1.同步网</p>\n<p>同步网分为三种方式，主从同步、准同步、互同步。其中我国采用的是等级主从同步的方式。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>时间同步<br>\n时间同步不仅要求频率上同步还要求相位也要同步</p>\n</li>\n<li class=\"lvl-2\">\n<p>时钟同步：<br>\n时钟同步本质上还是频率同步</p>\n</li>\n</ul>\n<p>SDH只要求时钟同步不要求时间同步。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1va91xvy4j30o40q9dkd.jpg\" alt=\"我国的SDH网络.png\" width=\"500\" height=\"600\"></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>TDM 就是时分复用模式。时分复用是指一种通过不同信道或时隙中的交叉位脉冲，同时在同一个通信媒体上传输多个数字化数据、语音和视频信号等的技术。电话网络（PSTN）基于 TDM 技术，通常又称为 TDM 访问网络. <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","site":{"data":{}},"excerpt":"<h2 id=\"OTN\">OTN</h2>\n<h4 id=\"1-传输网技术演进\">1. 传输网技术演进</h4>","more":"<table>\n<thead>\n<tr>\n<th>技术</th>\n<th>特性</th>\n<th>特点</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>PDH</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>SDH</td>\n<td>同步数字序列，SDH传输网以同步时分复用和光纤技术为核心。SDH利用交叉链接单元、分叉复用单元和信号再生放大单元等网元设备构成线性、星形、环形和网孔形多种拓扑结构的传输网。</td>\n<td>1.SDH接口采用统一的标准和协议、统一的比特率，统一的同步复用格式。这样不同厂商之间<strong>接口可兼容</strong>。 2.采用同步复用的同时具备灵活的复用映射结构，从而实现上层业务信息传输的透明性，<strong>使SDH成为独立于各类业务的传输平台。</strong> 3. 字节复接技术，信号上下支路变得十分简单。 4. SDH提出自愈网概念。 5. 强大的网络管理功能</td>\n</tr>\n<tr>\n<td>MSTP</td>\n<td>MSTP将传统的SDH复用器、光波分复用系统终端、数字交叉连接器、网络二层交换机、IP边缘路由器等独立设备合成一个网络设备进行统一控制与管理。MSTP充分利用SDH有点，给传送的信息提供保护恢复能力及较小的实验，利用2.5层交换技术实现对二层技术与三层技术的数据智能支持</td>\n<td>MSTP既能满足某些实时交换服务高QoS要求，也能满足以太网尽力而为的交互方式。同时MSTP既能提供点对点传送服务，也能提供多点传送服务。因此MSTP适合工作在网络边缘，处理混合型业务</td>\n</tr>\n<tr>\n<td>PTN</td>\n<td>PTN光传送网络架构及具体技术：一个新的层面工作在IP业务和底层光传输媒质之间，针对分组业务流量的突发性和统计复用传送的要求而设计，同时兼顾其他类型业务。</td>\n<td>PTN充分继承了传送网、IP/MPLS、以太网的优势，1. PTN继承了SDH的优势，具备丰富的保护倒换和恢复方式（50ms电信级业务保护倒换），2.拥有完善的OAM体系，良好的同步性能和强大的网管系统，3.完成了与IP/MPLS多种方式的互联互通、无缝承载核心IP业务，4.提供更加适合IP业务的柔性传输管道，适合各种粗细颗粒业务，以提高效率的方式拓展了有效带宽，5.适应数据业务特性，分组交换、统计复用、面向连接的标签交换，分组QoS…</td>\n</tr>\n<tr>\n<td>WDM</td>\n<td>WDM波分复用技术，指的是在一根光纤中同时传输多个波长的光载波信号。WDM系统被分为密集波分复用（DWDM）和粗波分复用（CWDM）。</td>\n<td>DWDM缺点在于需要色散技术来客服多波长系统中的非线性失真，同时DWDm采用的温度调谐的冷却激光成本较高。CWDM对激光器的要求相对较低。</td>\n</tr>\n<tr>\n<td>OTN</td>\n<td>OTN继承了SDH和WDM双重优势，是一种以DWDM与光通信技术为基础、在光层组织网络的传送网。由光放大、光分插复用、光交叉链接等网元设备组成、处理波长级业务。OTN可以提供巨大的传送容量、完全透明的端到端波长/子波长连接以及电信级的保护以及加强的子波长汇聚和疏导能力。</td>\n<td>1. OTN现有定义的电层带宽颗粒为光通路数据单元（ODUk，k=0、1、2、3），光层的带宽颗粒为波长，OTN配置、复用以及交叉的颗粒度大很多，从而极巨提升了高带宽数据业务的传送效率和适配能力。2. OTN可以支持注入SDH、ATM、以太网等信号映射与透明传输，最大化利用现有设备资源。3.OTN通过采用ODUk交叉、OTN帧结构和多维度可重构光分插复用器，使的一根光纤的不同波长接口速率和数据格式相互独立，同一根光纤传送不同业务。4. OTN开销管理能力，灵活的基于电层和光层的业务保护功能。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2-光纤通信SDH\">2. 光纤通信SDH</h4>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SDH帧结构</p>\n</li>\n</ul>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9dsskdyj31ni11manf.jpg\" alt=\"SDH帧结构.png\" width=\"400\" height=\"300\"></p>\n<p>SDH 帧一个 STM-N 帧有 9 行，每行由 270×N 个字节组成。每帧共有 9×270×?N? 个字节， 每字节为 8 bit。 帧周期为 125 μs， 即每秒传输 8000 帧。对于 STM1 而言，传输速率为 9×270×8×8000=155.520 Mb/s。字节发送顺序为：由上往下逐行发送，每行先左后右。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SDH复用映射</p>\n</li>\n</ul>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9onvfb8j317u0jm7ef.jpg\" alt=\"SDH复用映射.png\" width=\"600\" height=\"400\"></p>\n<p>不同业务信号复用进STM-n帧的过程经历三个步骤：映射-&gt;定位-&gt;复用</p>\n<p>其特殊的复用结构允许准同步数字序列PDH、低速SDH、等其他信号接入其帧结构。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SDH网元</p>\n</li>\n</ul>\n<p>SDH网元有四种，分别为TM终端复用器，ADM分插复用器、REG再生中继器、DXC数字交叉连接设备。<br>\n<img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1v9mzs0t6j31yo16qawk.jpg\" alt=\"SDH网元.png\" width=\"400\" height=\"300\"></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>SDH网络保护</p>\n</li>\n</ul>\n<p>SDH网络保护分为线路保护倒换、环形网保护、子网连接保护。其中线路保护倒换分为1+1，1：n两种。环形网保护分为二纤单向通道倒换环，二纤向复用段倒换环。</p>\n<h4 id=\"3-光纤通信OTN\">3. 光纤通信OTN</h4>\n<p>目前城域核心层及干线的SDH（同步数字体系）网络适合传送的主要为TDM业务<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>，但迅猛增加的却是具备统计特性的数据业务，所以，在现有网络层面及其后续的网络建设中不可能大规模地新建SDH网络。这样，自然而然地就考虑到了扩大现有WDM（波分复用系统）网络的规模建设，可IP业务通过POS（基于SDH的分组技术）接口或者以太网接口直接上载到现有 WDM 网络上，将面临组网、保护和维护管理等方面的缺陷。</p>\n<p>OTN是新一代骨干通信网技术。具备一下特点：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>多种客户信号封装和透明传输：</p>\n</li>\n</ul>\n<blockquote>\n<p>OTN帧可以支持多种客户信号的映射，如SDH、ATM、以太网、ODU复用信号，以及自定义速率数据流，使OTN可以传送这些信号格式，或以这些信号为载体的更高层次的客户信号，如以太网、MPLS、光纤通道、HDLC/PPP、PRP、IP、MPLS、FICON、ESCON及DVBASI视频信号等，不同应用的业务都可统一到一个传送平台上去。此外，OTN还支持无损调整ODUflex（GFP）连接带宽的控制机制（G.HAO）</p>\n</blockquote>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1wn0kjr19j30l509jmxk.jpg\" alt=\"OTN复用结构.jpeg\" width=\"761\" height=\"343\"></p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>大容量调度能力：</p>\n</li>\n</ul>\n<blockquote>\n<p>相对于SDH网络只能通过VC调度，提供Gbit/s级的容量而言，OTN的基本处理对象是波长，可以进行大颗粒的调度处理，可提供Tbit/s级的带宽容量。</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>强大的运行、维护、管理与指配能力：</p>\n</li>\n</ul>\n<blockquote>\n<p>OTN 定义了一系列用于运行、维护、管理与指配的开销，包括随路开销与非随路开销，利用这些开销可以对光传送网进行全面而精细的监测与管理，为用户提供一个可运营，可管理的光网络。为了支持跨不同运营商网络的通道监视功能，OTN提供了6级串联连接监视功能，监视连接可以是嵌套式、重叠式和/或级联式，可以对一根光纤中复用的多个波长同时进行管理。</p>\n</blockquote>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>强大的运行、维护、管理与指配能力：</p>\n</li>\n</ul>\n<blockquote>\n<p>OTN 定义了一系列用于运行、维护、管理与指配的开销，包括随路开销与非随路开销，利用这些开销可以对光传送网进行全面而精细的监测与管理，为用户提供一个可运营，可管理的光网络。为了支持跨不同运营商网络的通道监视功能，OTN提供了6级串联连接监视功能，监视连接可以是嵌套式、重叠式和/或级联式，可以对一根光纤中复用的多个波长同时进行管理。</p>\n</blockquote>\n<p>OTN帧结构：</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1xwksa1utj318w0ukadq.jpg\" alt=\"OTN帧结构.png\" width=\"800\" height=\"550\"></p>\n<p>OTN中的帧被称为光信道传送单元OTU，他是通过数字封包技术向客户信号加入OPU-OH形成OPU，OPU加上ODU-OH形成ODU，FAS、OTU-OH、FEC加入ODU形成OTU。最后加上OCH层非随路开销，完成OTU到OCH层的映射。</p>\n<p>(1) 开销部分 (Overhead)：位于信封头部，装载开销字节。利用开销字节，OTN 节点可以通过网络传送和转发管理、控制信息、执行性能监视，以及其他可能的基于每波长的网络管理功能。<br>\n(2)  FEC 部分：位于信封尾部，装载前向差错校正码 FEC (Forward Error Correction)，FEC 部分执行差错的检测和校正，与 SDH/SONET 中采用的 BIP-8 (Bit Interleaved Parity) 错误监视机制不同，FEC 有校正错误的能力，这使得运营商可以为支持不同级别的 SLA (Service Level Agreement)。通过最大限度地减少差错，FEC 在扩展光段的距离、提高传输速率方面扮演了关键的角色。<br>\n(3) 净负荷部分：位于 Header 和 Trailer 之间，它承载现有的各种网络协议数据包，而无需改变它们，因此 OTN 是独立于协议的。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>FEC功能：</p>\n</li>\n</ul>\n<p>OTN帧中专门有一个带外FEC区域，通过前向纠错FEC可获得5～6dB的增益，从而降低了对OSNR的要求，增加了系统的传输距离。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>强大的分组处理能力：</p>\n</li>\n</ul>\n<blockquote>\n<p>随着OTN和PTN的应用与推广，在我国许多大中城市的城域核心层，存在着 PTN 和现有 WDM/OTN 设备背靠背组网的应用场景，目的是既解决大容量传送也实现分组业务的高效处理。从便于网络运维、减少传送设备种类和降低综合成本的角度出发，需要将OTN和PTN的功能特性和设备形态进一步地有机融合，从而催生了新一代光传送网产品形态——分组光传送网（POTN），目的是实现 L0 WDM/ROADM 光层、L1 SDH/OTN层和L2分组传送层（包括以太网和MPLS-TP）的功能集成和有机融合。POTN将最先应用在城域核心和汇聚层，随着接入层容量需求的提升，逐步向接入层延伸。</p>\n</blockquote>\n<hr>\n<p>完整的OTN包含电域和光域功能，在电层，OTN借鉴了SDH的映射、复用、交叉、嵌入式开销等概念；在光层，OTN借鉴了传统WDM的技术体系并有所发展，OTN的业务层次如图所示。在OPU层实现客户信号适配，在ODU层实现子波长交叉，在OTU层实现数据成帧，OCH层实现波长级交叉，OMS层实现光路复用，OTS层实现信号传输。其中OPU、ODU、OTU属于电层，OCH、OMS、OTS属于光层。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1wnkddtaej31ms11uk0v.jpg\" alt=\"OTN业务层次图.png\" width=\"540\" height=\"343\"></p>\n<hr>\n<p>1.同步网</p>\n<p>同步网分为三种方式，主从同步、准同步、互同步。其中我国采用的是等级主从同步的方式。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>时间同步<br>\n时间同步不仅要求频率上同步还要求相位也要同步</p>\n</li>\n<li class=\"lvl-2\">\n<p>时钟同步：<br>\n时钟同步本质上还是频率同步</p>\n</li>\n</ul>\n<p>SDH只要求时钟同步不要求时间同步。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h1va91xvy4j30o40q9dkd.jpg\" alt=\"我国的SDH网络.png\" width=\"500\" height=\"600\"></p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>TDM 就是时分复用模式。时分复用是指一种通过不同信道或时隙中的交叉位脉冲，同时在同一个通信媒体上传输多个数字化数据、语音和视频信号等的技术。电话网络（PSTN）基于 TDM 技术，通常又称为 TDM 访问网络. <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>"},{"title":"2022-05-04 随笔","abbrlink":8365,"date":"2022-05-04T12:26:47.000Z","_content":"\n#### 2022-04-13,所有一切轰轰烈烈终将归于平淡！","source":"_posts/2022/05/2022-05-04.md","raw":"---\ntitle: 2022-05-04 随笔\ntags:\n  - essay\nabbrlink: 8365\ndate: 2022-05-04 20:26:47\n---\n\n#### 2022-04-13,所有一切轰轰烈烈终将归于平淡！","slug":"2022-05-04","published":1,"updated":"2022-05-04T12:39:22.214Z","_id":"cl2rkgjvz0000fws69slce5n5","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"2022-04-13-所有一切轰轰烈烈终将归于平淡！\">2022-04-13,所有一切轰轰烈烈终将归于平淡！</h4>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"2022-04-13-所有一切轰轰烈烈终将归于平淡！\">2022-04-13,所有一切轰轰烈烈终将归于平淡！</h4>\n"},{"title":"love-story","data":"2022-02-20T14:59:12.000Z","_content":"\n## Love Story\n\n\nWe were both young when I first saw you\n\nI close my eyes and the flashback starts\n\nI'm standing there\n\nOn a balcony in summer air\n\nSee the lights see the party the ball gowns\n\nsee you make your way through the crowd\n\nAnd say hello\n\nLittle did I know\n\nThat you were Romeo you were throwing pebbles\n\nAnd my daddy said stay away from Juliet\n\nAnd I was crying on the staircase\n\nBegging you please don't go\n\nAnd I said\n\nRomeo take me somewhere we can be alone\n\nI'll be waiting all there's left to do is run\n\nYou'll be the prince and I'll be the princess\n\nIt's a love story\n\nBaby just say yes\n\nSo I sneak out to the garden to see you\n\nWe keep quiet cause we're dead if they knew\n\nSo close your eyes\n\nEscape this town for a little while\n\nOh Oh\n\nCause you were Romeo I was  a scarlet letter\n\nAnd my daddy said stay away from Juliet\n\nBut you were everything to me\n\nI was begging you please don't go\n\nAnd I said\n\nRomeo take me somewhere we can be alone\n\nI'll be waiting all there's left to do is run\n\nYou'll be the prince and I'll be the princess\n\nIt's a love story\n\nBaby just say yes\n\nRomeo save me\n\nThey’re trying to tell me how to feel\n\nThis love is difficult but it's real\n\nDon't be afraid we'll make it out of this mess\n\nIt's a love story\n\nBaby just say yes","source":"_drafts/love-story.md","raw":"---\ntitle: love-story\ntags:\ndata: 2022-02-20 22:59:12\n---\n\n## Love Story\n\n\nWe were both young when I first saw you\n\nI close my eyes and the flashback starts\n\nI'm standing there\n\nOn a balcony in summer air\n\nSee the lights see the party the ball gowns\n\nsee you make your way through the crowd\n\nAnd say hello\n\nLittle did I know\n\nThat you were Romeo you were throwing pebbles\n\nAnd my daddy said stay away from Juliet\n\nAnd I was crying on the staircase\n\nBegging you please don't go\n\nAnd I said\n\nRomeo take me somewhere we can be alone\n\nI'll be waiting all there's left to do is run\n\nYou'll be the prince and I'll be the princess\n\nIt's a love story\n\nBaby just say yes\n\nSo I sneak out to the garden to see you\n\nWe keep quiet cause we're dead if they knew\n\nSo close your eyes\n\nEscape this town for a little while\n\nOh Oh\n\nCause you were Romeo I was  a scarlet letter\n\nAnd my daddy said stay away from Juliet\n\nBut you were everything to me\n\nI was begging you please don't go\n\nAnd I said\n\nRomeo take me somewhere we can be alone\n\nI'll be waiting all there's left to do is run\n\nYou'll be the prince and I'll be the princess\n\nIt's a love story\n\nBaby just say yes\n\nRomeo save me\n\nThey’re trying to tell me how to feel\n\nThis love is difficult but it's real\n\nDon't be afraid we'll make it out of this mess\n\nIt's a love story\n\nBaby just say yes","slug":"love-story","published":0,"date":"2022-05-21T15:07:01.321Z","updated":"2022-05-21T15:07:01.321Z","_id":"cl3fzwlnp0000pws62v0zetfj","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"Love-Story\">Love Story</h2>\n<p>We were both young when I first saw you</p>\n<p>I close my eyes and the flashback starts</p>\n<p>I’m standing there</p>\n<p>On a balcony in summer air</p>\n<p>See the lights see the party the ball gowns</p>\n<p>see you make your way through the crowd</p>\n<p>And say hello</p>\n<p>Little did I know</p>\n<p>That you were Romeo you were throwing pebbles</p>\n<p>And my daddy said stay away from Juliet</p>\n<p>And I was crying on the staircase</p>\n<p>Begging you please don’t go</p>\n<p>And I said</p>\n<p>Romeo take me somewhere we can be alone</p>\n<p>I’ll be waiting all there’s left to do is run</p>\n<p>You’ll be the prince and I’ll be the princess</p>\n<p>It’s a love story</p>\n<p>Baby just say yes</p>\n<p>So I sneak out to the garden to see you</p>\n<p>We keep quiet cause we’re dead if they knew</p>\n<p>So close your eyes</p>\n<p>Escape this town for a little while</p>\n<p>Oh Oh</p>\n<p>Cause you were Romeo I was  a scarlet letter</p>\n<p>And my daddy said stay away from Juliet</p>\n<p>But you were everything to me</p>\n<p>I was begging you please don’t go</p>\n<p>And I said</p>\n<p>Romeo take me somewhere we can be alone</p>\n<p>I’ll be waiting all there’s left to do is run</p>\n<p>You’ll be the prince and I’ll be the princess</p>\n<p>It’s a love story</p>\n<p>Baby just say yes</p>\n<p>Romeo save me</p>\n<p>They’re trying to tell me how to feel</p>\n<p>This love is difficult but it’s real</p>\n<p>Don’t be afraid we’ll make it out of this mess</p>\n<p>It’s a love story</p>\n<p>Baby just say yes</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"Love-Story\">Love Story</h2>\n<p>We were both young when I first saw you</p>\n<p>I close my eyes and the flashback starts</p>\n<p>I’m standing there</p>\n<p>On a balcony in summer air</p>\n<p>See the lights see the party the ball gowns</p>\n<p>see you make your way through the crowd</p>\n<p>And say hello</p>\n<p>Little did I know</p>\n<p>That you were Romeo you were throwing pebbles</p>\n<p>And my daddy said stay away from Juliet</p>\n<p>And I was crying on the staircase</p>\n<p>Begging you please don’t go</p>\n<p>And I said</p>\n<p>Romeo take me somewhere we can be alone</p>\n<p>I’ll be waiting all there’s left to do is run</p>\n<p>You’ll be the prince and I’ll be the princess</p>\n<p>It’s a love story</p>\n<p>Baby just say yes</p>\n<p>So I sneak out to the garden to see you</p>\n<p>We keep quiet cause we’re dead if they knew</p>\n<p>So close your eyes</p>\n<p>Escape this town for a little while</p>\n<p>Oh Oh</p>\n<p>Cause you were Romeo I was  a scarlet letter</p>\n<p>And my daddy said stay away from Juliet</p>\n<p>But you were everything to me</p>\n<p>I was begging you please don’t go</p>\n<p>And I said</p>\n<p>Romeo take me somewhere we can be alone</p>\n<p>I’ll be waiting all there’s left to do is run</p>\n<p>You’ll be the prince and I’ll be the princess</p>\n<p>It’s a love story</p>\n<p>Baby just say yes</p>\n<p>Romeo save me</p>\n<p>They’re trying to tell me how to feel</p>\n<p>This love is difficult but it’s real</p>\n<p>Don’t be afraid we’ll make it out of this mess</p>\n<p>It’s a love story</p>\n<p>Baby just say yes</p>\n"},{"title":"脱稿讲话即兴发言--脱稿讲话的准备","abbrlink":52594,"date":"2022-05-25T14:49:30.000Z","_content":"\n# 脱稿讲话从零开始\n\n脱稿讲话前的9大准备：\n\n- 明确讲话目的\n\n讲话滔滔不绝的人只能称为<font color=\"red\">“能说”</font> ，而并不代表<font color=\"red\">“会说”</font>。演讲不是目的，只是手段。我们最终是要通过演讲来达到我们的目的，这个目的可能是宣传某个产品、推广某个思想等等。我们讲话的目的应该从始至终贯穿我们演讲的整个过程。因此第一步首先总结讲话的目的，带着这个目的来演讲。这样才不会偏离主题，做无用功。\n\n<!--more-->\n\n- 对听众进行分析\n\n古人说“对症下药”，治病时需要了解患者得了什么病，什么问题，才能<font color=\"red\">针对性</font>的给出药方，药到病除。演讲也是一样，我们的演讲是针对某一批受众的，因此需要对听众的职业、爱好、性格、<font color=\"red\">期望、目标</font>等进行了解分析，针对性的做准备。\n\n- 搜集讲话素材\n\n在脱稿讲话中，需要以<font color=\"red\">丰富的素材和资料</font>为依据，当你能够搜集10倍于你需要的材料，你讲话就会更有料，更有说服力，更能吸引人。\n\n- 概括讲话观点\n\n概括讲话观点在我看来是针对听众的，人的大脑都是懒惰的，听众不会针对你的长篇大论来详细的研究理解，因此需要你把<font color=\"red\">论点总结</font>出来，明确的高速他们，然后才是你的论据。\n\n- 精炼讲话提纲\n\n这一点在我看来是针对自身的。演讲发言，一个提纲是必不可少的，没有提纲就容易陷入长篇大论却内容空洞的困境。一个<font color=\"red\">提纲</font>能够让你把握讲话的节奏，准确表达讲话的内容和观点，做到从容有序。\n\n- 添加论据\n\n在资料收集完成后需要对资料进行精挑细选，根据讲话的目的，选择那些真实可靠、生动幽默的论据，必要时可以以自身为论据，讲述发生在自身的故事。\n\n- 精心设计开场白\n\n这个开场白可以是一个自我介绍，可以是一段文字、视频、音乐，但是要记住为演讲的目的和主线服务，不要本末倒置，抢了风头。\n\n- 道具和展示物\n\n道具和展示物，更加生动直观，吸引听众眼球。\n\n- 控制讲话时间\n\n增强自己的时间观念，提高时间控制能力，也是变相的提高脱稿讲话的能力，让你能够更容易把我讲话的节奏、主线内容。\n\n# 脱稿讲话技能训练\n\n\n** 演讲是人人都有的一种潜在能力，问题在于你是否发现、发展和利用这种天资 **\n\n一名出色的演讲者究竟需要具备那些技能呢？\n\n## 一、 练好语言基本功\n\n首先要**发音清楚**，讲话者要吐字清楚，句子与句子之间既要有适当停顿，也要**相互连贯**，语速**快慢适中**，声音**大而洪亮**，保证每个人都能听得清楚，<font color=\"red\">切不可给人声音颤抖或紧张的感觉</font>。\n\n其次是语言节奏感要强，讲话者要善于==掌控语言节奏==，根据讲话内容来不断调整自己的语速、语气和音量。\n\n最后是语句无毛病，避免语句表达上出现问题，比如讲话不能出现错字、错词，不存在大量口头禅。\n\n## 二、提升逻辑思维技能\n\n一个人要讲话出色，除了广博的知识和精辟的见解外，还需要有一定的逻辑思维能力，这样才能在脱稿讲话时准确的表达出自己的思想和观点。\n\n\n## 三、寻找友善、鼓励的眼神\n\n当众讲话时，要学会一边讲话、一边寻找对自己友善、鼓励的眼神，由此增强自己讲话的信心。另外，根据PPT讲话时，切记长时间盯着PPT界面，而要有意识的注视听众，并用目光不停的扫视台下不同位置，这样可以让台下每一个听众都感觉你在关注他。\n\n## 四、巧妙运用面部表情\n\n在脱稿讲话时，讲话者的面部表情往往会给听众留下深刻印象，所以讲话者的表情最好亲切、自然，而且，要善于随内容的变化适当变化表情，从而达到以情动人的讲话效果。\n\n## 五、训练正确的演讲姿势\n\n所谓“完美的演讲姿势”--目光直视，双脚张开与肩同宽，身躯笔直站立。为缓解内心的紧张情绪，演讲者可将一只手轻插口袋，或轻触桌边，也可手握麦克风。\n\n## 六、善用手势语言\n\n借助收不动作表达自己的态度和情绪，可以增强感染力和说服力。\n\n## 七、提升演讲艺术的运用技能\n\n所谓演讲艺术，其中包括开场白艺术、结尾艺术、立意艺术、幽默艺术、表情动作艺术。\n\n## 八、演讲空间的掌握能力\n\n所谓演讲空间，即讲话的场所范围，讲话者所处的位置以及与听众之间的距离。一般来讲，讲话者最理想的空间位置应该是听众注意力最容易汇聚的地方。\n\n## 九、提升听众之间的互动能力\n\n## 十、强化自己的演讲欲望\n\n演讲欲望就是演讲者传播信息，说服别人、展现自我的强烈渴望。演讲者的这种欲望越强烈，对自己的脱稿讲话能力要求也越严格。","source":"_posts/2022/05/脱稿讲话即兴发言.md","raw":"---\ntitle: 脱稿讲话即兴发言--脱稿讲话的准备\ntags:\n  - else\nabbrlink: 52594\ndate: 2022-05-25 22:49:30\n---\n\n# 脱稿讲话从零开始\n\n脱稿讲话前的9大准备：\n\n- 明确讲话目的\n\n讲话滔滔不绝的人只能称为<font color=\"red\">“能说”</font> ，而并不代表<font color=\"red\">“会说”</font>。演讲不是目的，只是手段。我们最终是要通过演讲来达到我们的目的，这个目的可能是宣传某个产品、推广某个思想等等。我们讲话的目的应该从始至终贯穿我们演讲的整个过程。因此第一步首先总结讲话的目的，带着这个目的来演讲。这样才不会偏离主题，做无用功。\n\n<!--more-->\n\n- 对听众进行分析\n\n古人说“对症下药”，治病时需要了解患者得了什么病，什么问题，才能<font color=\"red\">针对性</font>的给出药方，药到病除。演讲也是一样，我们的演讲是针对某一批受众的，因此需要对听众的职业、爱好、性格、<font color=\"red\">期望、目标</font>等进行了解分析，针对性的做准备。\n\n- 搜集讲话素材\n\n在脱稿讲话中，需要以<font color=\"red\">丰富的素材和资料</font>为依据，当你能够搜集10倍于你需要的材料，你讲话就会更有料，更有说服力，更能吸引人。\n\n- 概括讲话观点\n\n概括讲话观点在我看来是针对听众的，人的大脑都是懒惰的，听众不会针对你的长篇大论来详细的研究理解，因此需要你把<font color=\"red\">论点总结</font>出来，明确的高速他们，然后才是你的论据。\n\n- 精炼讲话提纲\n\n这一点在我看来是针对自身的。演讲发言，一个提纲是必不可少的，没有提纲就容易陷入长篇大论却内容空洞的困境。一个<font color=\"red\">提纲</font>能够让你把握讲话的节奏，准确表达讲话的内容和观点，做到从容有序。\n\n- 添加论据\n\n在资料收集完成后需要对资料进行精挑细选，根据讲话的目的，选择那些真实可靠、生动幽默的论据，必要时可以以自身为论据，讲述发生在自身的故事。\n\n- 精心设计开场白\n\n这个开场白可以是一个自我介绍，可以是一段文字、视频、音乐，但是要记住为演讲的目的和主线服务，不要本末倒置，抢了风头。\n\n- 道具和展示物\n\n道具和展示物，更加生动直观，吸引听众眼球。\n\n- 控制讲话时间\n\n增强自己的时间观念，提高时间控制能力，也是变相的提高脱稿讲话的能力，让你能够更容易把我讲话的节奏、主线内容。\n\n# 脱稿讲话技能训练\n\n\n** 演讲是人人都有的一种潜在能力，问题在于你是否发现、发展和利用这种天资 **\n\n一名出色的演讲者究竟需要具备那些技能呢？\n\n## 一、 练好语言基本功\n\n首先要**发音清楚**，讲话者要吐字清楚，句子与句子之间既要有适当停顿，也要**相互连贯**，语速**快慢适中**，声音**大而洪亮**，保证每个人都能听得清楚，<font color=\"red\">切不可给人声音颤抖或紧张的感觉</font>。\n\n其次是语言节奏感要强，讲话者要善于==掌控语言节奏==，根据讲话内容来不断调整自己的语速、语气和音量。\n\n最后是语句无毛病，避免语句表达上出现问题，比如讲话不能出现错字、错词，不存在大量口头禅。\n\n## 二、提升逻辑思维技能\n\n一个人要讲话出色，除了广博的知识和精辟的见解外，还需要有一定的逻辑思维能力，这样才能在脱稿讲话时准确的表达出自己的思想和观点。\n\n\n## 三、寻找友善、鼓励的眼神\n\n当众讲话时，要学会一边讲话、一边寻找对自己友善、鼓励的眼神，由此增强自己讲话的信心。另外，根据PPT讲话时，切记长时间盯着PPT界面，而要有意识的注视听众，并用目光不停的扫视台下不同位置，这样可以让台下每一个听众都感觉你在关注他。\n\n## 四、巧妙运用面部表情\n\n在脱稿讲话时，讲话者的面部表情往往会给听众留下深刻印象，所以讲话者的表情最好亲切、自然，而且，要善于随内容的变化适当变化表情，从而达到以情动人的讲话效果。\n\n## 五、训练正确的演讲姿势\n\n所谓“完美的演讲姿势”--目光直视，双脚张开与肩同宽，身躯笔直站立。为缓解内心的紧张情绪，演讲者可将一只手轻插口袋，或轻触桌边，也可手握麦克风。\n\n## 六、善用手势语言\n\n借助收不动作表达自己的态度和情绪，可以增强感染力和说服力。\n\n## 七、提升演讲艺术的运用技能\n\n所谓演讲艺术，其中包括开场白艺术、结尾艺术、立意艺术、幽默艺术、表情动作艺术。\n\n## 八、演讲空间的掌握能力\n\n所谓演讲空间，即讲话的场所范围，讲话者所处的位置以及与听众之间的距离。一般来讲，讲话者最理想的空间位置应该是听众注意力最容易汇聚的地方。\n\n## 九、提升听众之间的互动能力\n\n## 十、强化自己的演讲欲望\n\n演讲欲望就是演讲者传播信息，说服别人、展现自我的强烈渴望。演讲者的这种欲望越强烈，对自己的脱稿讲话能力要求也越严格。","slug":"脱稿讲话即兴发言","published":1,"updated":"2022-06-26T08:28:37.119Z","_id":"cl3lpsl1a000006s6df3f921p","comments":1,"layout":"post","photos":[],"link":"","content":"<h1>脱稿讲话从零开始</h1>\n<p>脱稿讲话前的9大准备：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>明确讲话目的</p>\n</li>\n</ul>\n<p>讲话滔滔不绝的人只能称为<font color=\"red\">“能说”</font> ，而并不代表<font color=\"red\">“会说”</font>。演讲不是目的，只是手段。我们最终是要通过演讲来达到我们的目的，这个目的可能是宣传某个产品、推广某个思想等等。我们讲话的目的应该从始至终贯穿我们演讲的整个过程。因此第一步首先总结讲话的目的，带着这个目的来演讲。这样才不会偏离主题，做无用功。</p>\n<span id=\"more\"></span>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>对听众进行分析</p>\n</li>\n</ul>\n<p>古人说“对症下药”，治病时需要了解患者得了什么病，什么问题，才能<font color=\"red\">针对性</font>的给出药方，药到病除。演讲也是一样，我们的演讲是针对某一批受众的，因此需要对听众的职业、爱好、性格、<font color=\"red\">期望、目标</font>等进行了解分析，针对性的做准备。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>搜集讲话素材</p>\n</li>\n</ul>\n<p>在脱稿讲话中，需要以<font color=\"red\">丰富的素材和资料</font>为依据，当你能够搜集10倍于你需要的材料，你讲话就会更有料，更有说服力，更能吸引人。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>概括讲话观点</p>\n</li>\n</ul>\n<p>概括讲话观点在我看来是针对听众的，人的大脑都是懒惰的，听众不会针对你的长篇大论来详细的研究理解，因此需要你把<font color=\"red\">论点总结</font>出来，明确的高速他们，然后才是你的论据。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>精炼讲话提纲</p>\n</li>\n</ul>\n<p>这一点在我看来是针对自身的。演讲发言，一个提纲是必不可少的，没有提纲就容易陷入长篇大论却内容空洞的困境。一个<font color=\"red\">提纲</font>能够让你把握讲话的节奏，准确表达讲话的内容和观点，做到从容有序。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>添加论据</p>\n</li>\n</ul>\n<p>在资料收集完成后需要对资料进行精挑细选，根据讲话的目的，选择那些真实可靠、生动幽默的论据，必要时可以以自身为论据，讲述发生在自身的故事。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>精心设计开场白</p>\n</li>\n</ul>\n<p>这个开场白可以是一个自我介绍，可以是一段文字、视频、音乐，但是要记住为演讲的目的和主线服务，不要本末倒置，抢了风头。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>道具和展示物</p>\n</li>\n</ul>\n<p>道具和展示物，更加生动直观，吸引听众眼球。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>控制讲话时间</p>\n</li>\n</ul>\n<p>增强自己的时间观念，提高时间控制能力，也是变相的提高脱稿讲话的能力，让你能够更容易把我讲话的节奏、主线内容。</p>\n<h1>脱稿讲话技能训练</h1>\n<p>** 演讲是人人都有的一种潜在能力，问题在于你是否发现、发展和利用这种天资 **</p>\n<p>一名出色的演讲者究竟需要具备那些技能呢？</p>\n<h2 id=\"一、-练好语言基本功\">一、 练好语言基本功</h2>\n<p>首先要<strong>发音清楚</strong>，讲话者要吐字清楚，句子与句子之间既要有适当停顿，也要<strong>相互连贯</strong>，语速<strong>快慢适中</strong>，声音<strong>大而洪亮</strong>，保证每个人都能听得清楚，<font color=\"red\">切不可给人声音颤抖或紧张的感觉</font>。</p>\n<p>其次是语言节奏感要强，讲话者要善于<mark>掌控语言节奏</mark>，根据讲话内容来不断调整自己的语速、语气和音量。</p>\n<p>最后是语句无毛病，避免语句表达上出现问题，比如讲话不能出现错字、错词，不存在大量口头禅。</p>\n<h2 id=\"二、提升逻辑思维技能\">二、提升逻辑思维技能</h2>\n<p>一个人要讲话出色，除了广博的知识和精辟的见解外，还需要有一定的逻辑思维能力，这样才能在脱稿讲话时准确的表达出自己的思想和观点。</p>\n<h2 id=\"三、寻找友善、鼓励的眼神\">三、寻找友善、鼓励的眼神</h2>\n<p>当众讲话时，要学会一边讲话、一边寻找对自己友善、鼓励的眼神，由此增强自己讲话的信心。另外，根据PPT讲话时，切记长时间盯着PPT界面，而要有意识的注视听众，并用目光不停的扫视台下不同位置，这样可以让台下每一个听众都感觉你在关注他。</p>\n<h2 id=\"四、巧妙运用面部表情\">四、巧妙运用面部表情</h2>\n<p>在脱稿讲话时，讲话者的面部表情往往会给听众留下深刻印象，所以讲话者的表情最好亲切、自然，而且，要善于随内容的变化适当变化表情，从而达到以情动人的讲话效果。</p>\n<h2 id=\"五、训练正确的演讲姿势\">五、训练正确的演讲姿势</h2>\n<p>所谓“完美的演讲姿势”–目光直视，双脚张开与肩同宽，身躯笔直站立。为缓解内心的紧张情绪，演讲者可将一只手轻插口袋，或轻触桌边，也可手握麦克风。</p>\n<h2 id=\"六、善用手势语言\">六、善用手势语言</h2>\n<p>借助收不动作表达自己的态度和情绪，可以增强感染力和说服力。</p>\n<h2 id=\"七、提升演讲艺术的运用技能\">七、提升演讲艺术的运用技能</h2>\n<p>所谓演讲艺术，其中包括开场白艺术、结尾艺术、立意艺术、幽默艺术、表情动作艺术。</p>\n<h2 id=\"八、演讲空间的掌握能力\">八、演讲空间的掌握能力</h2>\n<p>所谓演讲空间，即讲话的场所范围，讲话者所处的位置以及与听众之间的距离。一般来讲，讲话者最理想的空间位置应该是听众注意力最容易汇聚的地方。</p>\n<h2 id=\"九、提升听众之间的互动能力\">九、提升听众之间的互动能力</h2>\n<h2 id=\"十、强化自己的演讲欲望\">十、强化自己的演讲欲望</h2>\n<p>演讲欲望就是演讲者传播信息，说服别人、展现自我的强烈渴望。演讲者的这种欲望越强烈，对自己的脱稿讲话能力要求也越严格。</p>\n","site":{"data":{}},"excerpt":"<h1>脱稿讲话从零开始</h1>\n<p>脱稿讲话前的9大准备：</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>明确讲话目的</p>\n</li>\n</ul>\n<p>讲话滔滔不绝的人只能称为<font color=\"red\">“能说”</font> ，而并不代表<font color=\"red\">“会说”</font>。演讲不是目的，只是手段。我们最终是要通过演讲来达到我们的目的，这个目的可能是宣传某个产品、推广某个思想等等。我们讲话的目的应该从始至终贯穿我们演讲的整个过程。因此第一步首先总结讲话的目的，带着这个目的来演讲。这样才不会偏离主题，做无用功。</p>","more":"<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>对听众进行分析</p>\n</li>\n</ul>\n<p>古人说“对症下药”，治病时需要了解患者得了什么病，什么问题，才能<font color=\"red\">针对性</font>的给出药方，药到病除。演讲也是一样，我们的演讲是针对某一批受众的，因此需要对听众的职业、爱好、性格、<font color=\"red\">期望、目标</font>等进行了解分析，针对性的做准备。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>搜集讲话素材</p>\n</li>\n</ul>\n<p>在脱稿讲话中，需要以<font color=\"red\">丰富的素材和资料</font>为依据，当你能够搜集10倍于你需要的材料，你讲话就会更有料，更有说服力，更能吸引人。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>概括讲话观点</p>\n</li>\n</ul>\n<p>概括讲话观点在我看来是针对听众的，人的大脑都是懒惰的，听众不会针对你的长篇大论来详细的研究理解，因此需要你把<font color=\"red\">论点总结</font>出来，明确的高速他们，然后才是你的论据。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>精炼讲话提纲</p>\n</li>\n</ul>\n<p>这一点在我看来是针对自身的。演讲发言，一个提纲是必不可少的，没有提纲就容易陷入长篇大论却内容空洞的困境。一个<font color=\"red\">提纲</font>能够让你把握讲话的节奏，准确表达讲话的内容和观点，做到从容有序。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>添加论据</p>\n</li>\n</ul>\n<p>在资料收集完成后需要对资料进行精挑细选，根据讲话的目的，选择那些真实可靠、生动幽默的论据，必要时可以以自身为论据，讲述发生在自身的故事。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>精心设计开场白</p>\n</li>\n</ul>\n<p>这个开场白可以是一个自我介绍，可以是一段文字、视频、音乐，但是要记住为演讲的目的和主线服务，不要本末倒置，抢了风头。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>道具和展示物</p>\n</li>\n</ul>\n<p>道具和展示物，更加生动直观，吸引听众眼球。</p>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>控制讲话时间</p>\n</li>\n</ul>\n<p>增强自己的时间观念，提高时间控制能力，也是变相的提高脱稿讲话的能力，让你能够更容易把我讲话的节奏、主线内容。</p>\n<h1>脱稿讲话技能训练</h1>\n<p>** 演讲是人人都有的一种潜在能力，问题在于你是否发现、发展和利用这种天资 **</p>\n<p>一名出色的演讲者究竟需要具备那些技能呢？</p>\n<h2 id=\"一、-练好语言基本功\">一、 练好语言基本功</h2>\n<p>首先要<strong>发音清楚</strong>，讲话者要吐字清楚，句子与句子之间既要有适当停顿，也要<strong>相互连贯</strong>，语速<strong>快慢适中</strong>，声音<strong>大而洪亮</strong>，保证每个人都能听得清楚，<font color=\"red\">切不可给人声音颤抖或紧张的感觉</font>。</p>\n<p>其次是语言节奏感要强，讲话者要善于<mark>掌控语言节奏</mark>，根据讲话内容来不断调整自己的语速、语气和音量。</p>\n<p>最后是语句无毛病，避免语句表达上出现问题，比如讲话不能出现错字、错词，不存在大量口头禅。</p>\n<h2 id=\"二、提升逻辑思维技能\">二、提升逻辑思维技能</h2>\n<p>一个人要讲话出色，除了广博的知识和精辟的见解外，还需要有一定的逻辑思维能力，这样才能在脱稿讲话时准确的表达出自己的思想和观点。</p>\n<h2 id=\"三、寻找友善、鼓励的眼神\">三、寻找友善、鼓励的眼神</h2>\n<p>当众讲话时，要学会一边讲话、一边寻找对自己友善、鼓励的眼神，由此增强自己讲话的信心。另外，根据PPT讲话时，切记长时间盯着PPT界面，而要有意识的注视听众，并用目光不停的扫视台下不同位置，这样可以让台下每一个听众都感觉你在关注他。</p>\n<h2 id=\"四、巧妙运用面部表情\">四、巧妙运用面部表情</h2>\n<p>在脱稿讲话时，讲话者的面部表情往往会给听众留下深刻印象，所以讲话者的表情最好亲切、自然，而且，要善于随内容的变化适当变化表情，从而达到以情动人的讲话效果。</p>\n<h2 id=\"五、训练正确的演讲姿势\">五、训练正确的演讲姿势</h2>\n<p>所谓“完美的演讲姿势”–目光直视，双脚张开与肩同宽，身躯笔直站立。为缓解内心的紧张情绪，演讲者可将一只手轻插口袋，或轻触桌边，也可手握麦克风。</p>\n<h2 id=\"六、善用手势语言\">六、善用手势语言</h2>\n<p>借助收不动作表达自己的态度和情绪，可以增强感染力和说服力。</p>\n<h2 id=\"七、提升演讲艺术的运用技能\">七、提升演讲艺术的运用技能</h2>\n<p>所谓演讲艺术，其中包括开场白艺术、结尾艺术、立意艺术、幽默艺术、表情动作艺术。</p>\n<h2 id=\"八、演讲空间的掌握能力\">八、演讲空间的掌握能力</h2>\n<p>所谓演讲空间，即讲话的场所范围，讲话者所处的位置以及与听众之间的距离。一般来讲，讲话者最理想的空间位置应该是听众注意力最容易汇聚的地方。</p>\n<h2 id=\"九、提升听众之间的互动能力\">九、提升听众之间的互动能力</h2>\n<h2 id=\"十、强化自己的演讲欲望\">十、强化自己的演讲欲望</h2>\n<p>演讲欲望就是演讲者传播信息，说服别人、展现自我的强烈渴望。演讲者的这种欲望越强烈，对自己的脱稿讲话能力要求也越严格。</p>"},{"title":"2022-05-29 随笔","abbrlink":25706,"date":"2022-05-29T15:11:05.000Z","_content":"\n### 人生就是一列开往坟墓的列车，路途上会有很多站，很难有人可以从始至终陪着走完。当陪你的人下车时，即使不舍，也应该心存感激，然后挥手道别。\n\n![train-station-1868256_1920.jpg](http://tva1.sinaimg.cn/large/006WUTFIgy1h2povdkp3pj31hc0zk7db.jpg)\n\n---\n\n- 图片引用自pixabay.com--pexels","source":"_posts/2022/05/2022-05-29.md","raw":"---\ntitle: 2022-05-29 随笔\nabbrlink: 25706\ndate: 2022-05-29 23:11:05\ntags:\n    - essay\n---\n\n### 人生就是一列开往坟墓的列车，路途上会有很多站，很难有人可以从始至终陪着走完。当陪你的人下车时，即使不舍，也应该心存感激，然后挥手道别。\n\n![train-station-1868256_1920.jpg](http://tva1.sinaimg.cn/large/006WUTFIgy1h2povdkp3pj31hc0zk7db.jpg)\n\n---\n\n- 图片引用自pixabay.com--pexels","slug":"2022-05-29","published":1,"updated":"2022-05-29T15:28:16.617Z","_id":"cl3rgg3be0000eas6h0jc288p","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"人生就是一列开往坟墓的列车，路途上会有很多站，很难有人可以从始至终陪着走完。当陪你的人下车时，即使不舍，也应该心存感激，然后挥手道别。\">人生就是一列开往坟墓的列车，路途上会有很多站，很难有人可以从始至终陪着走完。当陪你的人下车时，即使不舍，也应该心存感激，然后挥手道别。</h3>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2povdkp3pj31hc0zk7db.jpg\" alt=\"train-station-1868256_1920.jpg\"></p>\n<hr>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>图片引用自pixabay.com–pexels</p>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"人生就是一列开往坟墓的列车，路途上会有很多站，很难有人可以从始至终陪着走完。当陪你的人下车时，即使不舍，也应该心存感激，然后挥手道别。\">人生就是一列开往坟墓的列车，路途上会有很多站，很难有人可以从始至终陪着走完。当陪你的人下车时，即使不舍，也应该心存感激，然后挥手道别。</h3>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2povdkp3pj31hc0zk7db.jpg\" alt=\"train-station-1868256_1920.jpg\"></p>\n<hr>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>图片引用自pixabay.com–pexels</p>\n</li>\n</ul>\n"},{"title":"什么是CAT 1","abbrlink":11926,"date":"2022-05-30T15:23:56.000Z","_content":"\n## 什么是CAT 1\n\n\n随着 5G 时代的悄然到来，高速率、大容量、低时延的网络特性深刻冲击了普罗大众的认知，而 “万物互联” 的概念也在这一过程中逐渐深入人心。\n\n但是并不是所有场景都需要5G链接的，事实上物联网场景中有接近三成的场景仅需要中速率的通信即可。目前国内运营商2/3G逐步退网，以前海量的2/3G物联网链接需求将会由低成本、兼顾速率、功耗、成本的<font color=\"red\">LTE CAT1</font>代替。\n\n<!--more-->\n\n## CAT 1技术定义\n\nCatX 全称为 LTE UE CategoryX，是 3GPP 用来衡量用户终端设备的无线性能的标准。UE 指用户设备（user equipment），Category 是分类的意思，所以 Cat X 这个词用来衡量设备传输速率的等级，根据 3GPP Release 定义，<font color=\"red\">Cat X 被分为 1-15 个等级，区分传输速率</font>，其中 Cat 1-5 在 R8 组，Cat 6-8 在 R10 组，Cat 9-10 在 R11 组，Cat 11-15 在 R12 组，数字越大那么，传输速度也就越快。UE Category 包含很多的无线特性，其中最重要的一个就是 UE 支持的速率。2009 年 3 月，3GPP 在 Release8（以下简称 R8）中正式提出 LTE，并同步推出 LTE Cat.1（以下简称 Cat.1）、Cat.2、Cat.3、Cat.4、Cat.5 这 5 个终端类别，其中定义的<font color=\"red\"> Cat.1 上 / 下行峰值速率为 5/10Mbps</font>。\n\n3GPP R13提出CAT 1 bis标准，采用单天线设计，并对算法做进一步简化，在降低复杂度的同时，元件成本也得到降低，基于 Cat.1 bis 的 Cat.1 的全兼容性，现有的基站版本可同时支持 Cat.1 和 Cat.1 bis 终端。单天线劣势是带来 4dB 的下行平均性能损失。\n\n## CAT 1终端特点\n \n### 频段要求\n\n![v2-42cb375e4d17a979b6c6775ac9970340_r.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h2quq65e6nj30j807vta3.jpg =400x180)\n\n### 通信协议需满足R8及以上\n\n### UE 能力\n\n![006WUTFIgy1h2qurmrplej30j803swg5.jpg](http://tva1.sinaimg.cn/large/006WUTFIgy1h2qurmrplej30j803swg5.jpg  =400x100)\n\n![v2-bb6cbdf86c9977935d2e61b613167643_1440w.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h2qurt6v1yj30j9035dgg.jpg =400x100)\n\n##  Cat 1 通信特点\n\nCat.1 通信能力属于<font color=\"red\">中低速档次</font>，可以视为低配的 LTE 技术。能满足一定高速移动、时延敏感、支持语音、低成本和低功耗的场景需求，业务上与 2G/3G、CatM1（以下简称 eMTC）、CatNB1（以下简称 NB-IoT）、Cat.4 有一定重合。Cat.1、 eMTC 和 NB-IoT 是专门针对物联网市场的，Cat.1 相比其他几种技术具有如下优势：\n\n### Cat.1 与 NB-IoT 相比，具有网络覆盖、建网成本和通信优势\n\nCat.1 承载于现有 LTE 网络，而 LTE 网络在全球均有良好覆盖，运营商无需额外升级基站的硬件配置，<font color=\"red\">只需对基站的参数进行配置，即可实现 Cat.1 终端接入</font>。NB-IoT 则需要新建基站增加硬件资源投入，，现有的 NB-IoT 网络覆盖远低于 LTE 网络。在通信方面，NB-IoT 受限于数据传输速度和移动速度、时延需求， 通常适用于小码流、静止状态的场景如三表（水表、电表、燃气表）。Cat.1 可以传输更大的码流，且具有很好的<font color=\"red\">移动性与语音功能</font>。\n\n### Cat.1 与 2G/3G 相比，具有网络覆盖和通信优势\n\n随着 2G/3G 减频退网工作的实施，2G/3G 市场进一步萎缩，势必无法成为未来物联网的发展方向。未来 NB-IoT+4G+5G 将作为物联网海量终端的主要蜂窝承载网络。\n\n### Cat.1 与 eMTC 相比，具有<font color=\"red\">建网成本</font>优势\n\n运营商现有 LTE 基站若想支持 eMTC 则需要支付额外的费用来升级网络。目前国内运营商在 eMTC 网络上并无过多投资，eMTC 在国内的生态、产业链发展均不理想。\n\n### Cat.1 与 Cat.4 相比，具有成本优势\n\nCat.1 与 Cat.4 网络兼容，且具有 Cat.4 一样的优势。虽然速率和信号质量都稍逊一筹，但 Cat.1 采用单天线、低存储方案设计，硬件架构更简单，拥有更高的集成度和更低的功耗、成本。 Cat.4 在功耗、集成度、价格方面很难满足部分行业的物联网应用需求，而 Cat.1 适合物联网目前的商业模式，受到国内产业链的青睐，可承接上述物联网应用场景的能力。\n\n未来数百亿的物联网连接中，对于网络的能力需求是不一样的，10的节点需要大带宽高速的通信技术，如高速率 4G（LTE Cat.4 以上）、5G 等；30%的节点需要中等速度传输技术，如 2G/3G、Cat.1 与 eMTC；而60%的节点需要低速率的连接技术，如 NB-IoT、LoRa 等。Cat.1 有望成为30%的中速场景中的主要技术。\n\n![v2-fc7f9b78e0ef838adfa4e6e4caedd852_1440w.jpg](http://tva1.sinaimg.cn/large/006WUTFIgy1h2qutgz0ghj30hd09p3z7.jpg =500x300)\n","source":"_posts/2022/05/什么是CAT1.md","raw":"---\ntitle: 什么是CAT 1\ntags:\n  - 通信\nabbrlink: 11926\ndate: 2022-05-30 23:23:56\n---\n\n## 什么是CAT 1\n\n\n随着 5G 时代的悄然到来，高速率、大容量、低时延的网络特性深刻冲击了普罗大众的认知，而 “万物互联” 的概念也在这一过程中逐渐深入人心。\n\n但是并不是所有场景都需要5G链接的，事实上物联网场景中有接近三成的场景仅需要中速率的通信即可。目前国内运营商2/3G逐步退网，以前海量的2/3G物联网链接需求将会由低成本、兼顾速率、功耗、成本的<font color=\"red\">LTE CAT1</font>代替。\n\n<!--more-->\n\n## CAT 1技术定义\n\nCatX 全称为 LTE UE CategoryX，是 3GPP 用来衡量用户终端设备的无线性能的标准。UE 指用户设备（user equipment），Category 是分类的意思，所以 Cat X 这个词用来衡量设备传输速率的等级，根据 3GPP Release 定义，<font color=\"red\">Cat X 被分为 1-15 个等级，区分传输速率</font>，其中 Cat 1-5 在 R8 组，Cat 6-8 在 R10 组，Cat 9-10 在 R11 组，Cat 11-15 在 R12 组，数字越大那么，传输速度也就越快。UE Category 包含很多的无线特性，其中最重要的一个就是 UE 支持的速率。2009 年 3 月，3GPP 在 Release8（以下简称 R8）中正式提出 LTE，并同步推出 LTE Cat.1（以下简称 Cat.1）、Cat.2、Cat.3、Cat.4、Cat.5 这 5 个终端类别，其中定义的<font color=\"red\"> Cat.1 上 / 下行峰值速率为 5/10Mbps</font>。\n\n3GPP R13提出CAT 1 bis标准，采用单天线设计，并对算法做进一步简化，在降低复杂度的同时，元件成本也得到降低，基于 Cat.1 bis 的 Cat.1 的全兼容性，现有的基站版本可同时支持 Cat.1 和 Cat.1 bis 终端。单天线劣势是带来 4dB 的下行平均性能损失。\n\n## CAT 1终端特点\n \n### 频段要求\n\n![v2-42cb375e4d17a979b6c6775ac9970340_r.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h2quq65e6nj30j807vta3.jpg =400x180)\n\n### 通信协议需满足R8及以上\n\n### UE 能力\n\n![006WUTFIgy1h2qurmrplej30j803swg5.jpg](http://tva1.sinaimg.cn/large/006WUTFIgy1h2qurmrplej30j803swg5.jpg  =400x100)\n\n![v2-bb6cbdf86c9977935d2e61b613167643_1440w.png](http://tva1.sinaimg.cn/large/006WUTFIgy1h2qurt6v1yj30j9035dgg.jpg =400x100)\n\n##  Cat 1 通信特点\n\nCat.1 通信能力属于<font color=\"red\">中低速档次</font>，可以视为低配的 LTE 技术。能满足一定高速移动、时延敏感、支持语音、低成本和低功耗的场景需求，业务上与 2G/3G、CatM1（以下简称 eMTC）、CatNB1（以下简称 NB-IoT）、Cat.4 有一定重合。Cat.1、 eMTC 和 NB-IoT 是专门针对物联网市场的，Cat.1 相比其他几种技术具有如下优势：\n\n### Cat.1 与 NB-IoT 相比，具有网络覆盖、建网成本和通信优势\n\nCat.1 承载于现有 LTE 网络，而 LTE 网络在全球均有良好覆盖，运营商无需额外升级基站的硬件配置，<font color=\"red\">只需对基站的参数进行配置，即可实现 Cat.1 终端接入</font>。NB-IoT 则需要新建基站增加硬件资源投入，，现有的 NB-IoT 网络覆盖远低于 LTE 网络。在通信方面，NB-IoT 受限于数据传输速度和移动速度、时延需求， 通常适用于小码流、静止状态的场景如三表（水表、电表、燃气表）。Cat.1 可以传输更大的码流，且具有很好的<font color=\"red\">移动性与语音功能</font>。\n\n### Cat.1 与 2G/3G 相比，具有网络覆盖和通信优势\n\n随着 2G/3G 减频退网工作的实施，2G/3G 市场进一步萎缩，势必无法成为未来物联网的发展方向。未来 NB-IoT+4G+5G 将作为物联网海量终端的主要蜂窝承载网络。\n\n### Cat.1 与 eMTC 相比，具有<font color=\"red\">建网成本</font>优势\n\n运营商现有 LTE 基站若想支持 eMTC 则需要支付额外的费用来升级网络。目前国内运营商在 eMTC 网络上并无过多投资，eMTC 在国内的生态、产业链发展均不理想。\n\n### Cat.1 与 Cat.4 相比，具有成本优势\n\nCat.1 与 Cat.4 网络兼容，且具有 Cat.4 一样的优势。虽然速率和信号质量都稍逊一筹，但 Cat.1 采用单天线、低存储方案设计，硬件架构更简单，拥有更高的集成度和更低的功耗、成本。 Cat.4 在功耗、集成度、价格方面很难满足部分行业的物联网应用需求，而 Cat.1 适合物联网目前的商业模式，受到国内产业链的青睐，可承接上述物联网应用场景的能力。\n\n未来数百亿的物联网连接中，对于网络的能力需求是不一样的，10的节点需要大带宽高速的通信技术，如高速率 4G（LTE Cat.4 以上）、5G 等；30%的节点需要中等速度传输技术，如 2G/3G、Cat.1 与 eMTC；而60%的节点需要低速率的连接技术，如 NB-IoT、LoRa 等。Cat.1 有望成为30%的中速场景中的主要技术。\n\n![v2-fc7f9b78e0ef838adfa4e6e4caedd852_1440w.jpg](http://tva1.sinaimg.cn/large/006WUTFIgy1h2qutgz0ghj30hd09p3z7.jpg =500x300)\n","slug":"什么是CAT1","published":1,"updated":"2022-05-30T15:44:38.767Z","_id":"cl3swa9la0000hzs6e38v9z4a","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"什么是CAT-1\">什么是CAT 1</h2>\n<p>随着 5G 时代的悄然到来，高速率、大容量、低时延的网络特性深刻冲击了普罗大众的认知，而 “万物互联” 的概念也在这一过程中逐渐深入人心。</p>\n<p>但是并不是所有场景都需要5G链接的，事实上物联网场景中有接近三成的场景仅需要中速率的通信即可。目前国内运营商2/3G逐步退网，以前海量的2/3G物联网链接需求将会由低成本、兼顾速率、功耗、成本的<font color=\"red\">LTE CAT1</font>代替。</p>\n<span id=\"more\"></span>\n<h2 id=\"CAT-1技术定义\">CAT 1技术定义</h2>\n<p>CatX 全称为 LTE UE CategoryX，是 3GPP 用来衡量用户终端设备的无线性能的标准。UE 指用户设备（user equipment），Category 是分类的意思，所以 Cat X 这个词用来衡量设备传输速率的等级，根据 3GPP Release 定义，<font color=\"red\">Cat X 被分为 1-15 个等级，区分传输速率</font>，其中 Cat 1-5 在 R8 组，Cat 6-8 在 R10 组，Cat 9-10 在 R11 组，Cat 11-15 在 R12 组，数字越大那么，传输速度也就越快。UE Category 包含很多的无线特性，其中最重要的一个就是 UE 支持的速率。2009 年 3 月，3GPP 在 Release8（以下简称 R8）中正式提出 LTE，并同步推出 LTE Cat.1（以下简称 Cat.1）、Cat.2、Cat.3、Cat.4、Cat.5 这 5 个终端类别，其中定义的<font color=\"red\"> Cat.1 上 / 下行峰值速率为 5/10Mbps</font>。</p>\n<p>3GPP R13提出CAT 1 bis标准，采用单天线设计，并对算法做进一步简化，在降低复杂度的同时，元件成本也得到降低，基于 Cat.1 bis 的 Cat.1 的全兼容性，现有的基站版本可同时支持 Cat.1 和 Cat.1 bis 终端。单天线劣势是带来 4dB 的下行平均性能损失。</p>\n<h2 id=\"CAT-1终端特点\">CAT 1终端特点</h2>\n<h3 id=\"频段要求\">频段要求</h3>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2quq65e6nj30j807vta3.jpg\" alt=\"v2-42cb375e4d17a979b6c6775ac9970340_r.png\" width=\"400\" height=\"180\"></p>\n<h3 id=\"通信协议需满足R8及以上\">通信协议需满足R8及以上</h3>\n<h3 id=\"UE-能力\">UE 能力</h3>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2qurmrplej30j803swg5.jpg\" alt=\"006WUTFIgy1h2qurmrplej30j803swg5.jpg\" width=\"400\" height=\"100\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2qurt6v1yj30j9035dgg.jpg\" alt=\"v2-bb6cbdf86c9977935d2e61b613167643_1440w.png\" width=\"400\" height=\"100\"></p>\n<h2 id=\"Cat-1-通信特点\">Cat 1 通信特点</h2>\n<p>Cat.1 通信能力属于<font color=\"red\">中低速档次</font>，可以视为低配的 LTE 技术。能满足一定高速移动、时延敏感、支持语音、低成本和低功耗的场景需求，业务上与 2G/3G、CatM1（以下简称 eMTC）、CatNB1（以下简称 NB-IoT）、Cat.4 有一定重合。Cat.1、 eMTC 和 NB-IoT 是专门针对物联网市场的，Cat.1 相比其他几种技术具有如下优势：</p>\n<h3 id=\"Cat-1-与-NB-IoT-相比，具有网络覆盖、建网成本和通信优势\">Cat.1 与 NB-IoT 相比，具有网络覆盖、建网成本和通信优势</h3>\n<p>Cat.1 承载于现有 LTE 网络，而 LTE 网络在全球均有良好覆盖，运营商无需额外升级基站的硬件配置，<font color=\"red\">只需对基站的参数进行配置，即可实现 Cat.1 终端接入</font>。NB-IoT 则需要新建基站增加硬件资源投入，，现有的 NB-IoT 网络覆盖远低于 LTE 网络。在通信方面，NB-IoT 受限于数据传输速度和移动速度、时延需求， 通常适用于小码流、静止状态的场景如三表（水表、电表、燃气表）。Cat.1 可以传输更大的码流，且具有很好的<font color=\"red\">移动性与语音功能</font>。</p>\n<h3 id=\"Cat-1-与-2G-3G-相比，具有网络覆盖和通信优势\">Cat.1 与 2G/3G 相比，具有网络覆盖和通信优势</h3>\n<p>随着 2G/3G 减频退网工作的实施，2G/3G 市场进一步萎缩，势必无法成为未来物联网的发展方向。未来 NB-IoT+4G+5G 将作为物联网海量终端的主要蜂窝承载网络。</p>\n<h3 id=\"Cat-1-与-eMTC-相比，具有-font-color-red-建网成本-font-优势\">Cat.1 与 eMTC 相比，具有<font color=\"red\">建网成本</font>优势</h3>\n<p>运营商现有 LTE 基站若想支持 eMTC 则需要支付额外的费用来升级网络。目前国内运营商在 eMTC 网络上并无过多投资，eMTC 在国内的生态、产业链发展均不理想。</p>\n<h3 id=\"Cat-1-与-Cat-4-相比，具有成本优势\">Cat.1 与 Cat.4 相比，具有成本优势</h3>\n<p>Cat.1 与 Cat.4 网络兼容，且具有 Cat.4 一样的优势。虽然速率和信号质量都稍逊一筹，但 Cat.1 采用单天线、低存储方案设计，硬件架构更简单，拥有更高的集成度和更低的功耗、成本。 Cat.4 在功耗、集成度、价格方面很难满足部分行业的物联网应用需求，而 Cat.1 适合物联网目前的商业模式，受到国内产业链的青睐，可承接上述物联网应用场景的能力。</p>\n<p>未来数百亿的物联网连接中，对于网络的能力需求是不一样的，10的节点需要大带宽高速的通信技术，如高速率 4G（LTE Cat.4 以上）、5G 等；30%的节点需要中等速度传输技术，如 2G/3G、Cat.1 与 eMTC；而60%的节点需要低速率的连接技术，如 NB-IoT、LoRa 等。Cat.1 有望成为30%的中速场景中的主要技术。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2qutgz0ghj30hd09p3z7.jpg\" alt=\"v2-fc7f9b78e0ef838adfa4e6e4caedd852_1440w.jpg\" width=\"500\" height=\"300\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"什么是CAT-1\">什么是CAT 1</h2>\n<p>随着 5G 时代的悄然到来，高速率、大容量、低时延的网络特性深刻冲击了普罗大众的认知，而 “万物互联” 的概念也在这一过程中逐渐深入人心。</p>\n<p>但是并不是所有场景都需要5G链接的，事实上物联网场景中有接近三成的场景仅需要中速率的通信即可。目前国内运营商2/3G逐步退网，以前海量的2/3G物联网链接需求将会由低成本、兼顾速率、功耗、成本的<font color=\"red\">LTE CAT1</font>代替。</p>","more":"<h2 id=\"CAT-1技术定义\">CAT 1技术定义</h2>\n<p>CatX 全称为 LTE UE CategoryX，是 3GPP 用来衡量用户终端设备的无线性能的标准。UE 指用户设备（user equipment），Category 是分类的意思，所以 Cat X 这个词用来衡量设备传输速率的等级，根据 3GPP Release 定义，<font color=\"red\">Cat X 被分为 1-15 个等级，区分传输速率</font>，其中 Cat 1-5 在 R8 组，Cat 6-8 在 R10 组，Cat 9-10 在 R11 组，Cat 11-15 在 R12 组，数字越大那么，传输速度也就越快。UE Category 包含很多的无线特性，其中最重要的一个就是 UE 支持的速率。2009 年 3 月，3GPP 在 Release8（以下简称 R8）中正式提出 LTE，并同步推出 LTE Cat.1（以下简称 Cat.1）、Cat.2、Cat.3、Cat.4、Cat.5 这 5 个终端类别，其中定义的<font color=\"red\"> Cat.1 上 / 下行峰值速率为 5/10Mbps</font>。</p>\n<p>3GPP R13提出CAT 1 bis标准，采用单天线设计，并对算法做进一步简化，在降低复杂度的同时，元件成本也得到降低，基于 Cat.1 bis 的 Cat.1 的全兼容性，现有的基站版本可同时支持 Cat.1 和 Cat.1 bis 终端。单天线劣势是带来 4dB 的下行平均性能损失。</p>\n<h2 id=\"CAT-1终端特点\">CAT 1终端特点</h2>\n<h3 id=\"频段要求\">频段要求</h3>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2quq65e6nj30j807vta3.jpg\" alt=\"v2-42cb375e4d17a979b6c6775ac9970340_r.png\" width=\"400\" height=\"180\"></p>\n<h3 id=\"通信协议需满足R8及以上\">通信协议需满足R8及以上</h3>\n<h3 id=\"UE-能力\">UE 能力</h3>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2qurmrplej30j803swg5.jpg\" alt=\"006WUTFIgy1h2qurmrplej30j803swg5.jpg\" width=\"400\" height=\"100\"></p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2qurt6v1yj30j9035dgg.jpg\" alt=\"v2-bb6cbdf86c9977935d2e61b613167643_1440w.png\" width=\"400\" height=\"100\"></p>\n<h2 id=\"Cat-1-通信特点\">Cat 1 通信特点</h2>\n<p>Cat.1 通信能力属于<font color=\"red\">中低速档次</font>，可以视为低配的 LTE 技术。能满足一定高速移动、时延敏感、支持语音、低成本和低功耗的场景需求，业务上与 2G/3G、CatM1（以下简称 eMTC）、CatNB1（以下简称 NB-IoT）、Cat.4 有一定重合。Cat.1、 eMTC 和 NB-IoT 是专门针对物联网市场的，Cat.1 相比其他几种技术具有如下优势：</p>\n<h3 id=\"Cat-1-与-NB-IoT-相比，具有网络覆盖、建网成本和通信优势\">Cat.1 与 NB-IoT 相比，具有网络覆盖、建网成本和通信优势</h3>\n<p>Cat.1 承载于现有 LTE 网络，而 LTE 网络在全球均有良好覆盖，运营商无需额外升级基站的硬件配置，<font color=\"red\">只需对基站的参数进行配置，即可实现 Cat.1 终端接入</font>。NB-IoT 则需要新建基站增加硬件资源投入，，现有的 NB-IoT 网络覆盖远低于 LTE 网络。在通信方面，NB-IoT 受限于数据传输速度和移动速度、时延需求， 通常适用于小码流、静止状态的场景如三表（水表、电表、燃气表）。Cat.1 可以传输更大的码流，且具有很好的<font color=\"red\">移动性与语音功能</font>。</p>\n<h3 id=\"Cat-1-与-2G-3G-相比，具有网络覆盖和通信优势\">Cat.1 与 2G/3G 相比，具有网络覆盖和通信优势</h3>\n<p>随着 2G/3G 减频退网工作的实施，2G/3G 市场进一步萎缩，势必无法成为未来物联网的发展方向。未来 NB-IoT+4G+5G 将作为物联网海量终端的主要蜂窝承载网络。</p>\n<h3 id=\"Cat-1-与-eMTC-相比，具有-font-color-red-建网成本-font-优势\">Cat.1 与 eMTC 相比，具有<font color=\"red\">建网成本</font>优势</h3>\n<p>运营商现有 LTE 基站若想支持 eMTC 则需要支付额外的费用来升级网络。目前国内运营商在 eMTC 网络上并无过多投资，eMTC 在国内的生态、产业链发展均不理想。</p>\n<h3 id=\"Cat-1-与-Cat-4-相比，具有成本优势\">Cat.1 与 Cat.4 相比，具有成本优势</h3>\n<p>Cat.1 与 Cat.4 网络兼容，且具有 Cat.4 一样的优势。虽然速率和信号质量都稍逊一筹，但 Cat.1 采用单天线、低存储方案设计，硬件架构更简单，拥有更高的集成度和更低的功耗、成本。 Cat.4 在功耗、集成度、价格方面很难满足部分行业的物联网应用需求，而 Cat.1 适合物联网目前的商业模式，受到国内产业链的青睐，可承接上述物联网应用场景的能力。</p>\n<p>未来数百亿的物联网连接中，对于网络的能力需求是不一样的，10的节点需要大带宽高速的通信技术，如高速率 4G（LTE Cat.4 以上）、5G 等；30%的节点需要中等速度传输技术，如 2G/3G、Cat.1 与 eMTC；而60%的节点需要低速率的连接技术，如 NB-IoT、LoRa 等。Cat.1 有望成为30%的中速场景中的主要技术。</p>\n<p><img src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h2qutgz0ghj30hd09p3z7.jpg\" alt=\"v2-fc7f9b78e0ef838adfa4e6e4caedd852_1440w.jpg\" width=\"500\" height=\"300\"></p>"},{"title":"你当像鸟飞往你的山--记录","abbrlink":17707,"date":"2022-06-08T16:02:26.000Z","_content":"\n#### 你当像鸟飞往你的山--诚实的污垢\n\n一个人对未知的渴望，是永无止境的。\n\n> “大学教授有两种，”爸爸说，“一种知道自己在说谎，另一种认为自己在说真话。”\n\n\n> 多年以后，我才会明白他那天离开的代价是什么，他对自己要去的地方有多么的不了解。\n\n\n\n> 这是我第一次看到她没了微笑，这是我才终于意识到，外婆生前可能是唯一一个了解我正在经历什么的人：偏执狂和原教旨主义如何瓜分了我的人生，他们如何把我在乎的人从我身边带走，只留下学位和证书----一种体面的虚空。现在正在发生的以前也曾发生。母女分离再度重演。磁带在循环播放。\n\n\n> 过去总是美好的，因为一个人从来都意识不到当时的情绪，它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。\n\n\n> 而我，我从不把那次车祸归咎于任何人，尤其是泰勒。那只是众多事件之一。十年后我的理解会发生转变，我沉重的步入成年，那之后，那次车祸总会令我想起那些阿帕奇女人，想起汇而构成人一生的所有决定----人们共同或又肚子做出的那些决定，聚合起来，制造了每一桩单独事件。沙砾不可计数，叠压成沉积物，然后成为岩石。","source":"_posts/2022/06/你当像鸟飞往你的山-记录.md","raw":"---\ntitle: 你当像鸟飞往你的山--记录\ntags:\n  - essay\nabbrlink: 17707\ndate: 2022-06-09 00:02:26\n---\n\n#### 你当像鸟飞往你的山--诚实的污垢\n\n一个人对未知的渴望，是永无止境的。\n\n> “大学教授有两种，”爸爸说，“一种知道自己在说谎，另一种认为自己在说真话。”\n\n\n> 多年以后，我才会明白他那天离开的代价是什么，他对自己要去的地方有多么的不了解。\n\n\n\n> 这是我第一次看到她没了微笑，这是我才终于意识到，外婆生前可能是唯一一个了解我正在经历什么的人：偏执狂和原教旨主义如何瓜分了我的人生，他们如何把我在乎的人从我身边带走，只留下学位和证书----一种体面的虚空。现在正在发生的以前也曾发生。母女分离再度重演。磁带在循环播放。\n\n\n> 过去总是美好的，因为一个人从来都意识不到当时的情绪，它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。\n\n\n> 而我，我从不把那次车祸归咎于任何人，尤其是泰勒。那只是众多事件之一。十年后我的理解会发生转变，我沉重的步入成年，那之后，那次车祸总会令我想起那些阿帕奇女人，想起汇而构成人一生的所有决定----人们共同或又肚子做出的那些决定，聚合起来，制造了每一桩单独事件。沙砾不可计数，叠压成沉积物，然后成为岩石。","slug":"你当像鸟飞往你的山-记录","published":1,"updated":"2022-06-08T16:03:19.488Z","_id":"cl45s5nlu00004gs63hzhdi3v","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"你当像鸟飞往你的山–诚实的污垢\">你当像鸟飞往你的山–诚实的污垢</h4>\n<p>一个人对未知的渴望，是永无止境的。</p>\n<blockquote>\n<p>“大学教授有两种，”爸爸说，“一种知道自己在说谎，另一种认为自己在说真话。”</p>\n</blockquote>\n<blockquote>\n<p>多年以后，我才会明白他那天离开的代价是什么，他对自己要去的地方有多么的不了解。</p>\n</blockquote>\n<blockquote>\n<p>这是我第一次看到她没了微笑，这是我才终于意识到，外婆生前可能是唯一一个了解我正在经历什么的人：偏执狂和原教旨主义如何瓜分了我的人生，他们如何把我在乎的人从我身边带走，只留下学位和证书----一种体面的虚空。现在正在发生的以前也曾发生。母女分离再度重演。磁带在循环播放。</p>\n</blockquote>\n<blockquote>\n<p>过去总是美好的，因为一个人从来都意识不到当时的情绪，它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。</p>\n</blockquote>\n<blockquote>\n<p>而我，我从不把那次车祸归咎于任何人，尤其是泰勒。那只是众多事件之一。十年后我的理解会发生转变，我沉重的步入成年，那之后，那次车祸总会令我想起那些阿帕奇女人，想起汇而构成人一生的所有决定----人们共同或又肚子做出的那些决定，聚合起来，制造了每一桩单独事件。沙砾不可计数，叠压成沉积物，然后成为岩石。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"你当像鸟飞往你的山–诚实的污垢\">你当像鸟飞往你的山–诚实的污垢</h4>\n<p>一个人对未知的渴望，是永无止境的。</p>\n<blockquote>\n<p>“大学教授有两种，”爸爸说，“一种知道自己在说谎，另一种认为自己在说真话。”</p>\n</blockquote>\n<blockquote>\n<p>多年以后，我才会明白他那天离开的代价是什么，他对自己要去的地方有多么的不了解。</p>\n</blockquote>\n<blockquote>\n<p>这是我第一次看到她没了微笑，这是我才终于意识到，外婆生前可能是唯一一个了解我正在经历什么的人：偏执狂和原教旨主义如何瓜分了我的人生，他们如何把我在乎的人从我身边带走，只留下学位和证书----一种体面的虚空。现在正在发生的以前也曾发生。母女分离再度重演。磁带在循环播放。</p>\n</blockquote>\n<blockquote>\n<p>过去总是美好的，因为一个人从来都意识不到当时的情绪，它后来扩展开来，因此我们只对过去，而非现在，拥有完整的情绪。</p>\n</blockquote>\n<blockquote>\n<p>而我，我从不把那次车祸归咎于任何人，尤其是泰勒。那只是众多事件之一。十年后我的理解会发生转变，我沉重的步入成年，那之后，那次车祸总会令我想起那些阿帕奇女人，想起汇而构成人一生的所有决定----人们共同或又肚子做出的那些决定，聚合起来，制造了每一桩单独事件。沙砾不可计数，叠压成沉积物，然后成为岩石。</p>\n</blockquote>\n"},{"title":"公式之美","abbrlink":5267,"date":"2022-06-26T09:55:40.000Z","_content":"","source":"_posts/2022/06/公式之美.md","raw":"---\ntitle: 公式之美\nabbrlink: 5267\ndate: 2022-06-26 17:55:40\ntags:\n---\n","slug":"公式之美","published":1,"updated":"2022-07-03T09:31:48.252Z","_id":"cl5546f1y00003xs6ae0w6yl0","comments":1,"layout":"post","photos":[],"link":"","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"乡土中国之差序格局","abbrlink":46464,"date":"2022-07-02T16:19:23.000Z","_content":"\n#### 乡土中国之差序格局\n\n1. 差序格局指的是中国乡土社会的基层结构是由一根根私人联系构成的网络。与之对应的是现代西方的团体格局，在团体格局里个人之间的联系靠着一个共同的架子（所谓团体），在上而互相发生联系。\n\n<!--more-->\n\n2. 差序格局与团体格局形成的原因。团体结构很可能是从传统民族部落流传下来，一群人相互依赖的生存在山林或草原，无法独自求生，团体是生活的前提。而中国传统社会是农耕社会，每个人自食其力在土地上耕作，只有偶然和临时的非常状态才感觉到伙伴的需要。对于他们来说，和别人发生关系是后起和次要的，不同场合需要这不同程度的结合，并不显著的需要一个经常和广被的团体。\n\n3. 道德是什么？道德观念是在社会里生活的人自觉应遵守社会行为规范的信念。道德包括着行为规范、行为者的信念和社会的制裁。道德由社会格局决定的，内容是人与人关系的行为规范。**从社会观点说，道德是社会对个人行为的制裁力，使他们合于规定下的形式行事，用以维持该社会的生存和绵续.**社会行为法则，在这个社会下的所有人都会默认去遵守和维护，并抵制违反此规则的人，因为规则是社会延续稳定的基础。\n\n4. 西洋的“团体格局”社会中的道德体系，在象征着团体的神的观念下，**有着两个重要的派生观念：一是每个个人在神前的平等；一是神对每个个人的公道。**每个“人子”，“团体构成分子”，在私有的父亲外必须有一个更重要的与人相共的是“天父”。这样每个个人人格上的平等才能确立，每个团体分子和团体的关系是相等的。在执行团体的意志时，还得有人来代理。“代理者”Minister是团体格局的社会中一个基本的概念。执行上帝意志的牧师是Minister，执行团体权力的官吏也是Minister，都是“代理者”，而不是神或团体的本身。神对每个个人是公道的，是一视同仁的，是爱的；如果代理者违反了这些“不证自明的真理”，代理者就失去了代理的资格\n\n> 美国《独立宣言》可以接下去说：“人类为了保障这些权利，所以才组织政府，政府的适当力量，须由受治者的同意中产生出来；假如任何政体有害于这些目标，人民即有改革或废除任何政体之权。这些真理，我们认为是不证自明的。\n\n\n5. 差序格局，在以自己作中心的社会关系网络中，最主要的自然是“克己复礼”, “壹是皆以修身为本”。不但在我们传统道德系统中没有一个像基督教里那种“爱”的观念——不分差序的兼爱；而且我们也很不容易找到个人对于团体的道德要素。\n\n团体道德的缺乏，在公私的冲突里更看得清楚。\n> 《孟子·尽心上篇》有：桃应问，“舜为天子，皋陶为士，瞽叟杀人，则如之何？”孟子曰：“执之而已矣。”“然则舜不禁与？”曰：“夫舜恶得而禁之，夫有所授之也。”“然则舜如之何？”曰：“舜视弃天下，犹弃敝屣也。窃负而逃，遵海滨而处，终身诉然，乐而忘天下。”[^1]  \n\n> 万章问曰：“象日以杀舜为事，立为天子，则放之，何也？”孟子曰：“封之也，或曰放焉。”万章曰：“象至不仁，封之有庳，有庳之人奚罪焉？仁人固如是乎？在他人则诛之，在弟则封之？”孟子的回答是“身为天子，弟为匹夫，可谓亲爱之乎？”[^2]\n\n一个差序格局的社会，是由无数私人关系搭成的网络。这网络的每一个结都附着一种道德要素，因之，传统的道德里不另找出一个笼统性的道德观念来，所有的价值标准也不能超脱于差序的人伦而存在了。\n\n<font color=\"red\">中国的道德和法律，都因之得看所施的对象和“自己”的关系而加以程度上的伸缩。</font>\n\n\n6. 团体格局的社会里，在同一团体的人是“兼善”的，就是“相同”的。孟子最反对的就是那一套。他说：“夫物之不齐，物之情也，子比而同之，是乱天下也。”[^3]墨家的“爱无差等”，和儒家的人伦差序，恰恰相反，所以孟子要骂他无父无君了。\n\n---\n\n注：我对费先生提出的差序格局中的差序的理解，中国人的社会关系在于以自身为中心的社会关系网络，（中国古代讲究克己复礼，在整个古代的仁义礼智道德观念中，个人占主导地位），在这个社会关系中，人对于他人的道德的看法与约束，建立在自身与之的关系上，这个关系有近有远、有亲有疏，所以就构成了差序的关系。（古人所尊崇的为尊者讳、为亲者讳、为贤者讳）\n\n[^1]:https://mengzi.5000yan.com/jinxin/shang/442.html\n\n[^2]: https://mengzi.5000yan.com/wanzhang/shang/357.html\n\n[^3]:https://mengzi.5000yan.com/twg/shang/284.html","source":"_posts/2022/07/乡土中国之差序格局.md","raw":"---\ntitle: 乡土中国之差序格局\nabbrlink: 46464\ndate: 2022-07-03 00:19:23\ntags:\n    - essay\n---\n\n#### 乡土中国之差序格局\n\n1. 差序格局指的是中国乡土社会的基层结构是由一根根私人联系构成的网络。与之对应的是现代西方的团体格局，在团体格局里个人之间的联系靠着一个共同的架子（所谓团体），在上而互相发生联系。\n\n<!--more-->\n\n2. 差序格局与团体格局形成的原因。团体结构很可能是从传统民族部落流传下来，一群人相互依赖的生存在山林或草原，无法独自求生，团体是生活的前提。而中国传统社会是农耕社会，每个人自食其力在土地上耕作，只有偶然和临时的非常状态才感觉到伙伴的需要。对于他们来说，和别人发生关系是后起和次要的，不同场合需要这不同程度的结合，并不显著的需要一个经常和广被的团体。\n\n3. 道德是什么？道德观念是在社会里生活的人自觉应遵守社会行为规范的信念。道德包括着行为规范、行为者的信念和社会的制裁。道德由社会格局决定的，内容是人与人关系的行为规范。**从社会观点说，道德是社会对个人行为的制裁力，使他们合于规定下的形式行事，用以维持该社会的生存和绵续.**社会行为法则，在这个社会下的所有人都会默认去遵守和维护，并抵制违反此规则的人，因为规则是社会延续稳定的基础。\n\n4. 西洋的“团体格局”社会中的道德体系，在象征着团体的神的观念下，**有着两个重要的派生观念：一是每个个人在神前的平等；一是神对每个个人的公道。**每个“人子”，“团体构成分子”，在私有的父亲外必须有一个更重要的与人相共的是“天父”。这样每个个人人格上的平等才能确立，每个团体分子和团体的关系是相等的。在执行团体的意志时，还得有人来代理。“代理者”Minister是团体格局的社会中一个基本的概念。执行上帝意志的牧师是Minister，执行团体权力的官吏也是Minister，都是“代理者”，而不是神或团体的本身。神对每个个人是公道的，是一视同仁的，是爱的；如果代理者违反了这些“不证自明的真理”，代理者就失去了代理的资格\n\n> 美国《独立宣言》可以接下去说：“人类为了保障这些权利，所以才组织政府，政府的适当力量，须由受治者的同意中产生出来；假如任何政体有害于这些目标，人民即有改革或废除任何政体之权。这些真理，我们认为是不证自明的。\n\n\n5. 差序格局，在以自己作中心的社会关系网络中，最主要的自然是“克己复礼”, “壹是皆以修身为本”。不但在我们传统道德系统中没有一个像基督教里那种“爱”的观念——不分差序的兼爱；而且我们也很不容易找到个人对于团体的道德要素。\n\n团体道德的缺乏，在公私的冲突里更看得清楚。\n> 《孟子·尽心上篇》有：桃应问，“舜为天子，皋陶为士，瞽叟杀人，则如之何？”孟子曰：“执之而已矣。”“然则舜不禁与？”曰：“夫舜恶得而禁之，夫有所授之也。”“然则舜如之何？”曰：“舜视弃天下，犹弃敝屣也。窃负而逃，遵海滨而处，终身诉然，乐而忘天下。”[^1]  \n\n> 万章问曰：“象日以杀舜为事，立为天子，则放之，何也？”孟子曰：“封之也，或曰放焉。”万章曰：“象至不仁，封之有庳，有庳之人奚罪焉？仁人固如是乎？在他人则诛之，在弟则封之？”孟子的回答是“身为天子，弟为匹夫，可谓亲爱之乎？”[^2]\n\n一个差序格局的社会，是由无数私人关系搭成的网络。这网络的每一个结都附着一种道德要素，因之，传统的道德里不另找出一个笼统性的道德观念来，所有的价值标准也不能超脱于差序的人伦而存在了。\n\n<font color=\"red\">中国的道德和法律，都因之得看所施的对象和“自己”的关系而加以程度上的伸缩。</font>\n\n\n6. 团体格局的社会里，在同一团体的人是“兼善”的，就是“相同”的。孟子最反对的就是那一套。他说：“夫物之不齐，物之情也，子比而同之，是乱天下也。”[^3]墨家的“爱无差等”，和儒家的人伦差序，恰恰相反，所以孟子要骂他无父无君了。\n\n---\n\n注：我对费先生提出的差序格局中的差序的理解，中国人的社会关系在于以自身为中心的社会关系网络，（中国古代讲究克己复礼，在整个古代的仁义礼智道德观念中，个人占主导地位），在这个社会关系中，人对于他人的道德的看法与约束，建立在自身与之的关系上，这个关系有近有远、有亲有疏，所以就构成了差序的关系。（古人所尊崇的为尊者讳、为亲者讳、为贤者讳）\n\n[^1]:https://mengzi.5000yan.com/jinxin/shang/442.html\n\n[^2]: https://mengzi.5000yan.com/wanzhang/shang/357.html\n\n[^3]:https://mengzi.5000yan.com/twg/shang/284.html","slug":"乡土中国之差序格局","published":1,"updated":"2022-07-03T14:33:43.381Z","_id":"cl5546f2800013xs6ei7ad0n2","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"乡土中国之差序格局\">乡土中国之差序格局</h4>\n<ol>\n<li class=\"lvl-3\">差序格局指的是中国乡土社会的基层结构是由一根根私人联系构成的网络。与之对应的是现代西方的团体格局，在团体格局里个人之间的联系靠着一个共同的架子（所谓团体），在上而互相发生联系。</li>\n</ol>\n<span id=\"more\"></span>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p>差序格局与团体格局形成的原因。团体结构很可能是从传统民族部落流传下来，一群人相互依赖的生存在山林或草原，无法独自求生，团体是生活的前提。而中国传统社会是农耕社会，每个人自食其力在土地上耕作，只有偶然和临时的非常状态才感觉到伙伴的需要。对于他们来说，和别人发生关系是后起和次要的，不同场合需要这不同程度的结合，并不显著的需要一个经常和广被的团体。</p>\n</li>\n<li class=\"lvl-3\">\n<p>道德是什么？道德观念是在社会里生活的人自觉应遵守社会行为规范的信念。道德包括着行为规范、行为者的信念和社会的制裁。道德由社会格局决定的，内容是人与人关系的行为规范。**从社会观点说，道德是社会对个人行为的制裁力，使他们合于规定下的形式行事，用以维持该社会的生存和绵续.**社会行为法则，在这个社会下的所有人都会默认去遵守和维护，并抵制违反此规则的人，因为规则是社会延续稳定的基础。</p>\n</li>\n<li class=\"lvl-3\">\n<p>西洋的“团体格局”社会中的道德体系，在象征着团体的神的观念下，**有着两个重要的派生观念：一是每个个人在神前的平等；一是神对每个个人的公道。**每个“人子”，“团体构成分子”，在私有的父亲外必须有一个更重要的与人相共的是“天父”。这样每个个人人格上的平等才能确立，每个团体分子和团体的关系是相等的。在执行团体的意志时，还得有人来代理。“代理者”Minister是团体格局的社会中一个基本的概念。执行上帝意志的牧师是Minister，执行团体权力的官吏也是Minister，都是“代理者”，而不是神或团体的本身。神对每个个人是公道的，是一视同仁的，是爱的；如果代理者违反了这些“不证自明的真理”，代理者就失去了代理的资格</p>\n</li>\n</ol>\n<blockquote>\n<p>美国《独立宣言》可以接下去说：“人类为了保障这些权利，所以才组织政府，政府的适当力量，须由受治者的同意中产生出来；假如任何政体有害于这些目标，人民即有改革或废除任何政体之权。这些真理，我们认为是不证自明的。</p>\n</blockquote>\n<ol start=\"5\">\n<li class=\"lvl-3\">\n<p>差序格局，在以自己作中心的社会关系网络中，最主要的自然是“克己复礼”, “壹是皆以修身为本”。不但在我们传统道德系统中没有一个像基督教里那种“爱”的观念——不分差序的兼爱；而且我们也很不容易找到个人对于团体的道德要素。</p>\n</li>\n</ol>\n<p>团体道德的缺乏，在公私的冲突里更看得清楚。</p>\n<blockquote>\n<p>《孟子·尽心上篇》有：桃应问，“舜为天子，皋陶为士，瞽叟杀人，则如之何？”孟子曰：“执之而已矣。”“然则舜不禁与？”曰：“夫舜恶得而禁之，夫有所授之也。”“然则舜如之何？”曰：“舜视弃天下，犹弃敝屣也。窃负而逃，遵海滨而处，终身诉然，乐而忘天下。”<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n</blockquote>\n<blockquote>\n<p>万章问曰：“象日以杀舜为事，立为天子，则放之，何也？”孟子曰：“封之也，或曰放焉。”万章曰：“象至不仁，封之有庳，有庳之人奚罪焉？仁人固如是乎？在他人则诛之，在弟则封之？”孟子的回答是“身为天子，弟为匹夫，可谓亲爱之乎？”<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></p>\n</blockquote>\n<p>一个差序格局的社会，是由无数私人关系搭成的网络。这网络的每一个结都附着一种道德要素，因之，传统的道德里不另找出一个笼统性的道德观念来，所有的价值标准也不能超脱于差序的人伦而存在了。</p>\n<p><font color=\"red\">中国的道德和法律，都因之得看所施的对象和“自己”的关系而加以程度上的伸缩。</font></p>\n<ol start=\"6\">\n<li class=\"lvl-3\">\n<p>团体格局的社会里，在同一团体的人是“兼善”的，就是“相同”的。孟子最反对的就是那一套。他说：“夫物之不齐，物之情也，子比而同之，是乱天下也。”<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>墨家的“爱无差等”，和儒家的人伦差序，恰恰相反，所以孟子要骂他无父无君了。</p>\n</li>\n</ol>\n<hr>\n<p>注：我对费先生提出的差序格局中的差序的理解，中国人的社会关系在于以自身为中心的社会关系网络，（中国古代讲究克己复礼，在整个古代的仁义礼智道德观念中，个人占主导地位），在这个社会关系中，人对于他人的道德的看法与约束，建立在自身与之的关系上，这个关系有近有远、有亲有疏，所以就构成了差序的关系。（古人所尊崇的为尊者讳、为亲者讳、为贤者讳）</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://mengzi.5000yan.com/jinxin/shang/442.html\">https://mengzi.5000yan.com/jinxin/shang/442.html</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://mengzi.5000yan.com/wanzhang/shang/357.html\">https://mengzi.5000yan.com/wanzhang/shang/357.html</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p><a href=\"https://mengzi.5000yan.com/twg/shang/284.html\">https://mengzi.5000yan.com/twg/shang/284.html</a> <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>\n","site":{"data":{}},"excerpt":"<h4 id=\"乡土中国之差序格局\">乡土中国之差序格局</h4>\n<ol>\n<li class=\"lvl-3\">差序格局指的是中国乡土社会的基层结构是由一根根私人联系构成的网络。与之对应的是现代西方的团体格局，在团体格局里个人之间的联系靠着一个共同的架子（所谓团体），在上而互相发生联系。</li>\n</ol>","more":"<ol start=\"2\">\n<li class=\"lvl-3\">\n<p>差序格局与团体格局形成的原因。团体结构很可能是从传统民族部落流传下来，一群人相互依赖的生存在山林或草原，无法独自求生，团体是生活的前提。而中国传统社会是农耕社会，每个人自食其力在土地上耕作，只有偶然和临时的非常状态才感觉到伙伴的需要。对于他们来说，和别人发生关系是后起和次要的，不同场合需要这不同程度的结合，并不显著的需要一个经常和广被的团体。</p>\n</li>\n<li class=\"lvl-3\">\n<p>道德是什么？道德观念是在社会里生活的人自觉应遵守社会行为规范的信念。道德包括着行为规范、行为者的信念和社会的制裁。道德由社会格局决定的，内容是人与人关系的行为规范。**从社会观点说，道德是社会对个人行为的制裁力，使他们合于规定下的形式行事，用以维持该社会的生存和绵续.**社会行为法则，在这个社会下的所有人都会默认去遵守和维护，并抵制违反此规则的人，因为规则是社会延续稳定的基础。</p>\n</li>\n<li class=\"lvl-3\">\n<p>西洋的“团体格局”社会中的道德体系，在象征着团体的神的观念下，**有着两个重要的派生观念：一是每个个人在神前的平等；一是神对每个个人的公道。**每个“人子”，“团体构成分子”，在私有的父亲外必须有一个更重要的与人相共的是“天父”。这样每个个人人格上的平等才能确立，每个团体分子和团体的关系是相等的。在执行团体的意志时，还得有人来代理。“代理者”Minister是团体格局的社会中一个基本的概念。执行上帝意志的牧师是Minister，执行团体权力的官吏也是Minister，都是“代理者”，而不是神或团体的本身。神对每个个人是公道的，是一视同仁的，是爱的；如果代理者违反了这些“不证自明的真理”，代理者就失去了代理的资格</p>\n</li>\n</ol>\n<blockquote>\n<p>美国《独立宣言》可以接下去说：“人类为了保障这些权利，所以才组织政府，政府的适当力量，须由受治者的同意中产生出来；假如任何政体有害于这些目标，人民即有改革或废除任何政体之权。这些真理，我们认为是不证自明的。</p>\n</blockquote>\n<ol start=\"5\">\n<li class=\"lvl-3\">\n<p>差序格局，在以自己作中心的社会关系网络中，最主要的自然是“克己复礼”, “壹是皆以修身为本”。不但在我们传统道德系统中没有一个像基督教里那种“爱”的观念——不分差序的兼爱；而且我们也很不容易找到个人对于团体的道德要素。</p>\n</li>\n</ol>\n<p>团体道德的缺乏，在公私的冲突里更看得清楚。</p>\n<blockquote>\n<p>《孟子·尽心上篇》有：桃应问，“舜为天子，皋陶为士，瞽叟杀人，则如之何？”孟子曰：“执之而已矣。”“然则舜不禁与？”曰：“夫舜恶得而禁之，夫有所授之也。”“然则舜如之何？”曰：“舜视弃天下，犹弃敝屣也。窃负而逃，遵海滨而处，终身诉然，乐而忘天下。”<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup></p>\n</blockquote>\n<blockquote>\n<p>万章问曰：“象日以杀舜为事，立为天子，则放之，何也？”孟子曰：“封之也，或曰放焉。”万章曰：“象至不仁，封之有庳，有庳之人奚罪焉？仁人固如是乎？在他人则诛之，在弟则封之？”孟子的回答是“身为天子，弟为匹夫，可谓亲爱之乎？”<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup></p>\n</blockquote>\n<p>一个差序格局的社会，是由无数私人关系搭成的网络。这网络的每一个结都附着一种道德要素，因之，传统的道德里不另找出一个笼统性的道德观念来，所有的价值标准也不能超脱于差序的人伦而存在了。</p>\n<p><font color=\"red\">中国的道德和法律，都因之得看所施的对象和“自己”的关系而加以程度上的伸缩。</font></p>\n<ol start=\"6\">\n<li class=\"lvl-3\">\n<p>团体格局的社会里，在同一团体的人是“兼善”的，就是“相同”的。孟子最反对的就是那一套。他说：“夫物之不齐，物之情也，子比而同之，是乱天下也。”<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>墨家的“爱无差等”，和儒家的人伦差序，恰恰相反，所以孟子要骂他无父无君了。</p>\n</li>\n</ol>\n<hr>\n<p>注：我对费先生提出的差序格局中的差序的理解，中国人的社会关系在于以自身为中心的社会关系网络，（中国古代讲究克己复礼，在整个古代的仁义礼智道德观念中，个人占主导地位），在这个社会关系中，人对于他人的道德的看法与约束，建立在自身与之的关系上，这个关系有近有远、有亲有疏，所以就构成了差序的关系。（古人所尊崇的为尊者讳、为亲者讳、为贤者讳）</p>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p><a href=\"https://mengzi.5000yan.com/jinxin/shang/442.html\">https://mengzi.5000yan.com/jinxin/shang/442.html</a> <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn2\" class=\"footnote-item\"><p><a href=\"https://mengzi.5000yan.com/wanzhang/shang/357.html\">https://mengzi.5000yan.com/wanzhang/shang/357.html</a> <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n<li id=\"fn3\" class=\"footnote-item\"><p><a href=\"https://mengzi.5000yan.com/twg/shang/284.html\">https://mengzi.5000yan.com/twg/shang/284.html</a> <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p>\n</li>\n</ol>\n</section>"},{"title":"乡土中国之差序格局2","abbrlink":30005,"date":"2022-07-03T14:26:41.000Z","_content":"#### 乡土中国之差序格局\n\n7. 在中国的乡土社会中，家是一个基本的单位，家族是一个事业集群，有许多个家庭组成。凡是做事业的社群，纪律是必须维持的，纪律排斥了私情。\n\n8. 自梳女\n\n> 毋庸置疑，自梳女在建构其主体性的过程中发挥了极大的能动性。作者不仅考察了自梳女如何通过经济独立等手段坚守自己的价值观，保持群体的独立性，而且提出了一个重要命题即宗教信仰对建构女性主体性的重要作用。自梳女个体价值和群体文化是她们的力量之源。个人的自主性和姊妹群体的凝聚力有一定的本土文化基础。首先，“梳起” 不嫁一般是自由、主动和自觉的选择，在重视贞节观念的传统社会中，对女子守贞行为的认可固不难理解。贞节是一种显示高尚文化精神操守的地位象征。坚贞不嫁的信守是她们个人价值的核心所系，以及自尊感和力量之源。这套价值观除了是主文化的一部分外，也在自梳女姊妹群中有特殊的次文化意义。如她们视婚姻为奴役和屈辱，有性交恐惧，并以生育为不洁罪衍。这些共同观念在她们的社群中代代相传，形成一套固定的价值意识，通过宗教崇拜、民俗仪式、节庆活动故事歌谣等形式表达出来。不过更多的直接访查显示，宗教的净化和升华作用是不婚女性的精神力量之源。宗教对她们的独身生活和贞洁观念的影响不容忽视。宗教的超性生活不仅是她们个人尊严所系，也为她们提供了群体认同基础。作者通过对中国宗教与妇女细致研究发现，妇女接着宗教从现实父权世界中的妻、女角色中解放出来，并在另一个世界中获得精神上满足。        \n世俗与神圣一直决定着中国女性的思想观念。作者提醒我们注意的是，尽管不嫁并不被在世俗社会中占据主流地位的儒家文化传统所认可，但是贞洁观念却为儒家文化所一再强调。显然，这也是女性自梳风俗被地方主流文化传统所包容的重要原因之一。而从宗教信仰层面来讲，被自梳女极力崇奉的观音信仰，即是其价值观和群体心理的集中体现。同时，自梳女在地方主神如洪圣公的崇拜中也扮演了非常重要的角色。她们并没有将自己排除在地方主流文化传统之外，而是在主动参与主神崇拜的过程中巩固了自己在宗族中的地位。正如作者所指出的，次文化和主文化的分歧只是局部性的。毕竟，主文化可说是次文化的母体，而母体和子体间有许多共性。主文化体系也常自动采纳次文化元素，只要后者的存在并不对前者构成威胁。反过来说，次文化也能容忍其价值体系外的文化规范，只要其成员的基本忠诚不受影响。事实上，自梳女都有极强的孝悌观念。养家对她们来说，是一种天职。家庭也视她们与维持家计的儿子无异。对于父系家族，她们无疑扮演了男性子嗣的部分角色。其劳动成果常受家族的支配成为家族繁衍的经济支柱之一。这种关系反映了自梳风习与父权家族制度间的妥协。        \n作者的研究还表明，女性主体性的建构不是单纯由女性自身完成的，男性也发挥了特殊的作用。仍以自梳女为例，男性族长、家长以及其他男性成员对自梳风俗的尊重，有助于这种文化传统的保存和延续。\n---\n上文来自：\n\n侯杰，李净昉。探寻女性主体性 —— 评叶汉明教授的《主体的追寻 —— 中国妇女史研究析论》[J]. 妇女研究论丛 ,2007,(第 1 期).","source":"_posts/2022/07/乡土中国之差序格局2.md","raw":"---\ntitle: 乡土中国之差序格局2\ntags:\n  - essay\nabbrlink: 30005\ndate: 2022-07-03 22:26:41\n---\n#### 乡土中国之差序格局\n\n7. 在中国的乡土社会中，家是一个基本的单位，家族是一个事业集群，有许多个家庭组成。凡是做事业的社群，纪律是必须维持的，纪律排斥了私情。\n\n8. 自梳女\n\n> 毋庸置疑，自梳女在建构其主体性的过程中发挥了极大的能动性。作者不仅考察了自梳女如何通过经济独立等手段坚守自己的价值观，保持群体的独立性，而且提出了一个重要命题即宗教信仰对建构女性主体性的重要作用。自梳女个体价值和群体文化是她们的力量之源。个人的自主性和姊妹群体的凝聚力有一定的本土文化基础。首先，“梳起” 不嫁一般是自由、主动和自觉的选择，在重视贞节观念的传统社会中，对女子守贞行为的认可固不难理解。贞节是一种显示高尚文化精神操守的地位象征。坚贞不嫁的信守是她们个人价值的核心所系，以及自尊感和力量之源。这套价值观除了是主文化的一部分外，也在自梳女姊妹群中有特殊的次文化意义。如她们视婚姻为奴役和屈辱，有性交恐惧，并以生育为不洁罪衍。这些共同观念在她们的社群中代代相传，形成一套固定的价值意识，通过宗教崇拜、民俗仪式、节庆活动故事歌谣等形式表达出来。不过更多的直接访查显示，宗教的净化和升华作用是不婚女性的精神力量之源。宗教对她们的独身生活和贞洁观念的影响不容忽视。宗教的超性生活不仅是她们个人尊严所系，也为她们提供了群体认同基础。作者通过对中国宗教与妇女细致研究发现，妇女接着宗教从现实父权世界中的妻、女角色中解放出来，并在另一个世界中获得精神上满足。        \n世俗与神圣一直决定着中国女性的思想观念。作者提醒我们注意的是，尽管不嫁并不被在世俗社会中占据主流地位的儒家文化传统所认可，但是贞洁观念却为儒家文化所一再强调。显然，这也是女性自梳风俗被地方主流文化传统所包容的重要原因之一。而从宗教信仰层面来讲，被自梳女极力崇奉的观音信仰，即是其价值观和群体心理的集中体现。同时，自梳女在地方主神如洪圣公的崇拜中也扮演了非常重要的角色。她们并没有将自己排除在地方主流文化传统之外，而是在主动参与主神崇拜的过程中巩固了自己在宗族中的地位。正如作者所指出的，次文化和主文化的分歧只是局部性的。毕竟，主文化可说是次文化的母体，而母体和子体间有许多共性。主文化体系也常自动采纳次文化元素，只要后者的存在并不对前者构成威胁。反过来说，次文化也能容忍其价值体系外的文化规范，只要其成员的基本忠诚不受影响。事实上，自梳女都有极强的孝悌观念。养家对她们来说，是一种天职。家庭也视她们与维持家计的儿子无异。对于父系家族，她们无疑扮演了男性子嗣的部分角色。其劳动成果常受家族的支配成为家族繁衍的经济支柱之一。这种关系反映了自梳风习与父权家族制度间的妥协。        \n作者的研究还表明，女性主体性的建构不是单纯由女性自身完成的，男性也发挥了特殊的作用。仍以自梳女为例，男性族长、家长以及其他男性成员对自梳风俗的尊重，有助于这种文化传统的保存和延续。\n---\n上文来自：\n\n侯杰，李净昉。探寻女性主体性 —— 评叶汉明教授的《主体的追寻 —— 中国妇女史研究析论》[J]. 妇女研究论丛 ,2007,(第 1 期).","slug":"乡土中国之差序格局2","published":1,"updated":"2022-09-10T14:53:01.606Z","_id":"cl7w11brj0000qrs6doq0e4fh","comments":1,"layout":"post","photos":[],"link":"","content":"<h4 id=\"乡土中国之差序格局\">乡土中国之差序格局</h4>\n<ol start=\"7\">\n<li class=\"lvl-3\">\n<p>在中国的乡土社会中，家是一个基本的单位，家族是一个事业集群，有许多个家庭组成。凡是做事业的社群，纪律是必须维持的，纪律排斥了私情。</p>\n</li>\n<li class=\"lvl-3\">\n<p>自梳女</p>\n</li>\n</ol>\n<blockquote>\n<p>毋庸置疑，自梳女在建构其主体性的过程中发挥了极大的能动性。作者不仅考察了自梳女如何通过经济独立等手段坚守自己的价值观，保持群体的独立性，而且提出了一个重要命题即宗教信仰对建构女性主体性的重要作用。自梳女个体价值和群体文化是她们的力量之源。个人的自主性和姊妹群体的凝聚力有一定的本土文化基础。首先，“梳起” 不嫁一般是自由、主动和自觉的选择，在重视贞节观念的传统社会中，对女子守贞行为的认可固不难理解。贞节是一种显示高尚文化精神操守的地位象征。坚贞不嫁的信守是她们个人价值的核心所系，以及自尊感和力量之源。这套价值观除了是主文化的一部分外，也在自梳女姊妹群中有特殊的次文化意义。如她们视婚姻为奴役和屈辱，有性交恐惧，并以生育为不洁罪衍。这些共同观念在她们的社群中代代相传，形成一套固定的价值意识，通过宗教崇拜、民俗仪式、节庆活动故事歌谣等形式表达出来。不过更多的直接访查显示，宗教的净化和升华作用是不婚女性的精神力量之源。宗教对她们的独身生活和贞洁观念的影响不容忽视。宗教的超性生活不仅是她们个人尊严所系，也为她们提供了群体认同基础。作者通过对中国宗教与妇女细致研究发现，妇女接着宗教从现实父权世界中的妻、女角色中解放出来，并在另一个世界中获得精神上满足。<br>\n世俗与神圣一直决定着中国女性的思想观念。作者提醒我们注意的是，尽管不嫁并不被在世俗社会中占据主流地位的儒家文化传统所认可，但是贞洁观念却为儒家文化所一再强调。显然，这也是女性自梳风俗被地方主流文化传统所包容的重要原因之一。而从宗教信仰层面来讲，被自梳女极力崇奉的观音信仰，即是其价值观和群体心理的集中体现。同时，自梳女在地方主神如洪圣公的崇拜中也扮演了非常重要的角色。她们并没有将自己排除在地方主流文化传统之外，而是在主动参与主神崇拜的过程中巩固了自己在宗族中的地位。正如作者所指出的，次文化和主文化的分歧只是局部性的。毕竟，主文化可说是次文化的母体，而母体和子体间有许多共性。主文化体系也常自动采纳次文化元素，只要后者的存在并不对前者构成威胁。反过来说，次文化也能容忍其价值体系外的文化规范，只要其成员的基本忠诚不受影响。事实上，自梳女都有极强的孝悌观念。养家对她们来说，是一种天职。家庭也视她们与维持家计的儿子无异。对于父系家族，她们无疑扮演了男性子嗣的部分角色。其劳动成果常受家族的支配成为家族繁衍的经济支柱之一。这种关系反映了自梳风习与父权家族制度间的妥协。<br>\n作者的研究还表明，女性主体性的建构不是单纯由女性自身完成的，男性也发挥了特殊的作用。仍以自梳女为例，男性族长、家长以及其他男性成员对自梳风俗的尊重，有助于这种文化传统的保存和延续。</p>\n</blockquote>\n<hr>\n<p>上文来自：</p>\n<p>侯杰，李净昉。探寻女性主体性 —— 评叶汉明教授的《主体的追寻 —— 中国妇女史研究析论》[J]. 妇女研究论丛 ,2007,(第 1 期).</p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"乡土中国之差序格局\">乡土中国之差序格局</h4>\n<ol start=\"7\">\n<li class=\"lvl-3\">\n<p>在中国的乡土社会中，家是一个基本的单位，家族是一个事业集群，有许多个家庭组成。凡是做事业的社群，纪律是必须维持的，纪律排斥了私情。</p>\n</li>\n<li class=\"lvl-3\">\n<p>自梳女</p>\n</li>\n</ol>\n<blockquote>\n<p>毋庸置疑，自梳女在建构其主体性的过程中发挥了极大的能动性。作者不仅考察了自梳女如何通过经济独立等手段坚守自己的价值观，保持群体的独立性，而且提出了一个重要命题即宗教信仰对建构女性主体性的重要作用。自梳女个体价值和群体文化是她们的力量之源。个人的自主性和姊妹群体的凝聚力有一定的本土文化基础。首先，“梳起” 不嫁一般是自由、主动和自觉的选择，在重视贞节观念的传统社会中，对女子守贞行为的认可固不难理解。贞节是一种显示高尚文化精神操守的地位象征。坚贞不嫁的信守是她们个人价值的核心所系，以及自尊感和力量之源。这套价值观除了是主文化的一部分外，也在自梳女姊妹群中有特殊的次文化意义。如她们视婚姻为奴役和屈辱，有性交恐惧，并以生育为不洁罪衍。这些共同观念在她们的社群中代代相传，形成一套固定的价值意识，通过宗教崇拜、民俗仪式、节庆活动故事歌谣等形式表达出来。不过更多的直接访查显示，宗教的净化和升华作用是不婚女性的精神力量之源。宗教对她们的独身生活和贞洁观念的影响不容忽视。宗教的超性生活不仅是她们个人尊严所系，也为她们提供了群体认同基础。作者通过对中国宗教与妇女细致研究发现，妇女接着宗教从现实父权世界中的妻、女角色中解放出来，并在另一个世界中获得精神上满足。<br>\n世俗与神圣一直决定着中国女性的思想观念。作者提醒我们注意的是，尽管不嫁并不被在世俗社会中占据主流地位的儒家文化传统所认可，但是贞洁观念却为儒家文化所一再强调。显然，这也是女性自梳风俗被地方主流文化传统所包容的重要原因之一。而从宗教信仰层面来讲，被自梳女极力崇奉的观音信仰，即是其价值观和群体心理的集中体现。同时，自梳女在地方主神如洪圣公的崇拜中也扮演了非常重要的角色。她们并没有将自己排除在地方主流文化传统之外，而是在主动参与主神崇拜的过程中巩固了自己在宗族中的地位。正如作者所指出的，次文化和主文化的分歧只是局部性的。毕竟，主文化可说是次文化的母体，而母体和子体间有许多共性。主文化体系也常自动采纳次文化元素，只要后者的存在并不对前者构成威胁。反过来说，次文化也能容忍其价值体系外的文化规范，只要其成员的基本忠诚不受影响。事实上，自梳女都有极强的孝悌观念。养家对她们来说，是一种天职。家庭也视她们与维持家计的儿子无异。对于父系家族，她们无疑扮演了男性子嗣的部分角色。其劳动成果常受家族的支配成为家族繁衍的经济支柱之一。这种关系反映了自梳风习与父权家族制度间的妥协。<br>\n作者的研究还表明，女性主体性的建构不是单纯由女性自身完成的，男性也发挥了特殊的作用。仍以自梳女为例，男性族长、家长以及其他男性成员对自梳风俗的尊重，有助于这种文化传统的保存和延续。</p>\n</blockquote>\n<hr>\n<p>上文来自：</p>\n<p>侯杰，李净昉。探寻女性主体性 —— 评叶汉明教授的《主体的追寻 —— 中国妇女史研究析论》[J]. 妇女研究论丛 ,2007,(第 1 期).</p>\n"},{"title":"摄影教程01","abbrlink":55512,"date":"2022-09-10T12:54:15.000Z","_content":"\n# 摄影教程\n\n1. 相机的模式\n\n普通单反相机（微单相机）一般有四种模式，分别是P模式、S模式、A模式、M模式.\n\n<!--more-->\n\n- P模式  \n    P模式是可偏移程序曝光模式，属于半自动模式，程序控制曝光参数。\n\n- A模式--光圈优先\n    这是一种拍摄者可以控制拍摄景深的模式，光圈对应屏幕上的F值，F值越小说明光圈越大，景深越小，虚化效果越好，反之F值越大，光圈越小，虚化效果较差。  \n    虚化效果适合拍摄人像，或者突出某项物体时。拍摄风光时一般让虚化尽量少，让屏幕前后的景都比较清晰。\n\n- S模式--快门优先\n    S模式拍摄者可以控制物体的清晰度，通过高速快门凝固运动中的物体，比如体育比赛或者一辆赛车，慢速快门（1/30秒至30秒）适合夜景或者特殊技法摄影\n\n- M模式--手动曝光\n    M模式允许拍摄者自主确定拍摄的要素，包括光圈、快门、ISO等，一般相机主拨轮控制快门速度、副拨轮控制光圈、同时按下iso和主拨轮可控制ISO感光度。\n    一般需要用到手动曝光的包括焰火摄影（F8-16，快门速度1-2秒）、闪电摄影（F8-16,30秒）、车灯轨迹（F11-22,30秒）、星空或月亮（点测光、F8-11、ISO100）\n\n\n2. MTF曲线图\n\nMTF（Modulation Transfer Function，调制传递函数）是分析镜头解像能力的比较科学的方法。MTF 成像曲线图是由镜头的生产厂家在极为客观严谨的测试环境下测得并对外公布的，是镜头成像品质最权威、最客观的技术参考依据。\n\n来自佳能官方的解释：  \n\n> 实线表示拍摄从中心呈放射状纹样的成像性能，用字母 “S” 表示；虚线表示拍摄线条呈同心圆向外扩展状纹样的成像性能，用字母 “M” 表示。图中 10 线 / 毫米的曲线越接近 1（最大值），镜头的成像对比度就越好。30 线 / 毫米的曲线越接近 1，镜头分辨力就越高。“线 / 毫米” 这一单位的意思是，以 1 毫米宽度为单位，其中有多少根白黑相间的条纹。MTF 值的测试需要拍摄印有达到上述密度条纹的图表。然后测量拍摄结果进行分析得出数值。如果是变焦镜头要分别测量远摄端和广角端的 MTF 值，根据所得数值可以大概掌握镜头性能。\n\n<img height=\"400\" style=\"margin:0 auto\" src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h6i0ts8bmxj30hs0iudgs.jpg\"/>\n\nMTF曲线图中，横轴表示镜头中心到边缘的距离，单位是毫米。\n全画幅尺寸是36X24mm，对角线长度为43.2毫米，因此对于全幅镜头一般看横轴到**21毫米**位置。\nAPSC画幅尺寸为24.9X16.6，对角线为29.2，所以一般横轴看到**14毫米**位置。\n\n\n\n一般镜头的MTF曲线有四条，分别是S10，M10，S30，M30，同时不同厂家会对最大光圈和最优光圈进行测评，因此一般会有10根线。\n\nS代表径向的、从圆心放射状的光线的解析力，M代表切向的、圆心的同心圆的光线的解析力。\n\n10LP/mm曲线对应的 MTF 值代表了对比度的复制率。这个值越接近于 1（100%），镜头的对比度（即锐度，边缘锐度，acutance）复制率越高。30LP/mm 的曲线对应的 MTF 值反应了镜头的分辨率（resolution）。这个值越大，说明镜头的分辨率越高。\n\n镜头的 MTF 曲线实线（S）和虚线（M）越接近越好，因为它代表成像在两个方向模糊程度均衡。这和镜头的焦外成像特性（虚化，bokeh－－这个词来自日语）也有关。径向和切向的 MTF 曲线越接近，焦外虚化的效果越好－－光斑越接近圆形。\n\n纵轴表示对应的分数，一般0.6为及格，0.8为良好，0.9位优秀。\n|  曲线   | 含义  |\n|  ----  | ----  |\n| S10  | 对径向的、频率为 10LP/mm 的线条的解析度 |\n| M10  | 对切向的、频率为 10LP/mm 的线条的解析度 |\n| S30  | 对径向的、频率为 30LP/mm 的线条的解析度 |\n| M30  | 对切向的、频率为 30LP/mm 的线条的解析度 |\n\n<img width=\"500\"  height=\"400\" src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h6i0hd2te1j30ly0hxglx.jpg\"/>\n\n上图是铭匠光学发布的一款尼康Z卡口自动镜头32mm f2.8镜头的MTF曲线图。\n","source":"_posts/2022/09/摄影教程01.md","raw":"---\ntitle: 摄影教程01\ntags:\n  - essay\nabbrlink: 55512\ndate: 2022-09-10 20:54:15\n---\n\n# 摄影教程\n\n1. 相机的模式\n\n普通单反相机（微单相机）一般有四种模式，分别是P模式、S模式、A模式、M模式.\n\n<!--more-->\n\n- P模式  \n    P模式是可偏移程序曝光模式，属于半自动模式，程序控制曝光参数。\n\n- A模式--光圈优先\n    这是一种拍摄者可以控制拍摄景深的模式，光圈对应屏幕上的F值，F值越小说明光圈越大，景深越小，虚化效果越好，反之F值越大，光圈越小，虚化效果较差。  \n    虚化效果适合拍摄人像，或者突出某项物体时。拍摄风光时一般让虚化尽量少，让屏幕前后的景都比较清晰。\n\n- S模式--快门优先\n    S模式拍摄者可以控制物体的清晰度，通过高速快门凝固运动中的物体，比如体育比赛或者一辆赛车，慢速快门（1/30秒至30秒）适合夜景或者特殊技法摄影\n\n- M模式--手动曝光\n    M模式允许拍摄者自主确定拍摄的要素，包括光圈、快门、ISO等，一般相机主拨轮控制快门速度、副拨轮控制光圈、同时按下iso和主拨轮可控制ISO感光度。\n    一般需要用到手动曝光的包括焰火摄影（F8-16，快门速度1-2秒）、闪电摄影（F8-16,30秒）、车灯轨迹（F11-22,30秒）、星空或月亮（点测光、F8-11、ISO100）\n\n\n2. MTF曲线图\n\nMTF（Modulation Transfer Function，调制传递函数）是分析镜头解像能力的比较科学的方法。MTF 成像曲线图是由镜头的生产厂家在极为客观严谨的测试环境下测得并对外公布的，是镜头成像品质最权威、最客观的技术参考依据。\n\n来自佳能官方的解释：  \n\n> 实线表示拍摄从中心呈放射状纹样的成像性能，用字母 “S” 表示；虚线表示拍摄线条呈同心圆向外扩展状纹样的成像性能，用字母 “M” 表示。图中 10 线 / 毫米的曲线越接近 1（最大值），镜头的成像对比度就越好。30 线 / 毫米的曲线越接近 1，镜头分辨力就越高。“线 / 毫米” 这一单位的意思是，以 1 毫米宽度为单位，其中有多少根白黑相间的条纹。MTF 值的测试需要拍摄印有达到上述密度条纹的图表。然后测量拍摄结果进行分析得出数值。如果是变焦镜头要分别测量远摄端和广角端的 MTF 值，根据所得数值可以大概掌握镜头性能。\n\n<img height=\"400\" style=\"margin:0 auto\" src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h6i0ts8bmxj30hs0iudgs.jpg\"/>\n\nMTF曲线图中，横轴表示镜头中心到边缘的距离，单位是毫米。\n全画幅尺寸是36X24mm，对角线长度为43.2毫米，因此对于全幅镜头一般看横轴到**21毫米**位置。\nAPSC画幅尺寸为24.9X16.6，对角线为29.2，所以一般横轴看到**14毫米**位置。\n\n\n\n一般镜头的MTF曲线有四条，分别是S10，M10，S30，M30，同时不同厂家会对最大光圈和最优光圈进行测评，因此一般会有10根线。\n\nS代表径向的、从圆心放射状的光线的解析力，M代表切向的、圆心的同心圆的光线的解析力。\n\n10LP/mm曲线对应的 MTF 值代表了对比度的复制率。这个值越接近于 1（100%），镜头的对比度（即锐度，边缘锐度，acutance）复制率越高。30LP/mm 的曲线对应的 MTF 值反应了镜头的分辨率（resolution）。这个值越大，说明镜头的分辨率越高。\n\n镜头的 MTF 曲线实线（S）和虚线（M）越接近越好，因为它代表成像在两个方向模糊程度均衡。这和镜头的焦外成像特性（虚化，bokeh－－这个词来自日语）也有关。径向和切向的 MTF 曲线越接近，焦外虚化的效果越好－－光斑越接近圆形。\n\n纵轴表示对应的分数，一般0.6为及格，0.8为良好，0.9位优秀。\n|  曲线   | 含义  |\n|  ----  | ----  |\n| S10  | 对径向的、频率为 10LP/mm 的线条的解析度 |\n| M10  | 对切向的、频率为 10LP/mm 的线条的解析度 |\n| S30  | 对径向的、频率为 30LP/mm 的线条的解析度 |\n| M30  | 对切向的、频率为 30LP/mm 的线条的解析度 |\n\n<img width=\"500\"  height=\"400\" src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h6i0hd2te1j30ly0hxglx.jpg\"/>\n\n上图是铭匠光学发布的一款尼康Z卡口自动镜头32mm f2.8镜头的MTF曲线图。\n","slug":"摄影教程01","published":1,"updated":"2022-09-24T16:11:42.556Z","_id":"cl7w11brq0001qrs62xoa7j86","comments":1,"layout":"post","photos":[],"link":"","content":"<h1>摄影教程</h1>\n<ol>\n<li class=\"lvl-3\">相机的模式</li>\n</ol>\n<p>普通单反相机（微单相机）一般有四种模式，分别是P模式、S模式、A模式、M模式.</p>\n<span id=\"more\"></span>\n<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>P模式<br>\nP模式是可偏移程序曝光模式，属于半自动模式，程序控制曝光参数。</p>\n</li>\n<li class=\"lvl-2\">\n<p>A模式–光圈优先这是一种拍摄者可以控制拍摄景深的模式，光圈对应屏幕上的F值，F值越小说明光圈越大，景深越小，虚化效果越好，反之F值越大，光圈越小，虚化效果较差。<br>\n虚化效果适合拍摄人像，或者突出某项物体时。拍摄风光时一般让虚化尽量少，让屏幕前后的景都比较清晰。</p>\n</li>\n<li class=\"lvl-2\">\n<p>S模式–快门优先<br>\nS模式拍摄者可以控制物体的清晰度，通过高速快门凝固运动中的物体，比如体育比赛或者一辆赛车，慢速快门（1/30秒至30秒）适合夜景或者特殊技法摄影</p>\n</li>\n<li class=\"lvl-2\">\n<p>M模式–手动曝光<br>\nM模式允许拍摄者自主确定拍摄的要素，包括光圈、快门、ISO等，一般相机主拨轮控制快门速度、副拨轮控制光圈、同时按下iso和主拨轮可控制ISO感光度。一般需要用到手动曝光的包括焰火摄影（F8-16，快门速度1-2秒）、闪电摄影（F8-16,30秒）、车灯轨迹（F11-22,30秒）、星空或月亮（点测光、F8-11、ISO100）</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p>MTF曲线图</p>\n</li>\n</ol>\n<p>MTF（Modulation Transfer Function，调制传递函数）是分析镜头解像能力的比较科学的方法。MTF 成像曲线图是由镜头的生产厂家在极为客观严谨的测试环境下测得并对外公布的，是镜头成像品质最权威、最客观的技术参考依据。</p>\n<p>来自佳能官方的解释：</p>\n<blockquote>\n<p>实线表示拍摄从中心呈放射状纹样的成像性能，用字母 “S” 表示；虚线表示拍摄线条呈同心圆向外扩展状纹样的成像性能，用字母 “M” 表示。图中 10 线 / 毫米的曲线越接近 1（最大值），镜头的成像对比度就越好。30 线 / 毫米的曲线越接近 1，镜头分辨力就越高。“线 / 毫米” 这一单位的意思是，以 1 毫米宽度为单位，其中有多少根白黑相间的条纹。MTF 值的测试需要拍摄印有达到上述密度条纹的图表。然后测量拍摄结果进行分析得出数值。如果是变焦镜头要分别测量远摄端和广角端的 MTF 值，根据所得数值可以大概掌握镜头性能。</p>\n</blockquote>\n<img height=\"400\" style=\"margin:0 auto\" src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h6i0ts8bmxj30hs0iudgs.jpg\"/>\n<p>MTF曲线图中，横轴表示镜头中心到边缘的距离，单位是毫米。全画幅尺寸是36X24mm，对角线长度为43.2毫米，因此对于全幅镜头一般看横轴到<strong>21毫米</strong>位置。<br>\nAPSC画幅尺寸为24.9X16.6，对角线为29.2，所以一般横轴看到<strong>14毫米</strong>位置。</p>\n<p>一般镜头的MTF曲线有四条，分别是S10，M10，S30，M30，同时不同厂家会对最大光圈和最优光圈进行测评，因此一般会有10根线。</p>\n<p>S代表径向的、从圆心放射状的光线的解析力，M代表切向的、圆心的同心圆的光线的解析力。</p>\n<p>10LP/mm曲线对应的 MTF 值代表了对比度的复制率。这个值越接近于 1（100%），镜头的对比度（即锐度，边缘锐度，acutance）复制率越高。30LP/mm 的曲线对应的 MTF 值反应了镜头的分辨率（resolution）。这个值越大，说明镜头的分辨率越高。</p>\n<p>镜头的 MTF 曲线实线（S）和虚线（M）越接近越好，因为它代表成像在两个方向模糊程度均衡。这和镜头的焦外成像特性（虚化，bokeh－－这个词来自日语）也有关。径向和切向的 MTF 曲线越接近，焦外虚化的效果越好－－光斑越接近圆形。</p>\n<p>纵轴表示对应的分数，一般0.6为及格，0.8为良好，0.9位优秀。</p>\n<table>\n<thead>\n<tr>\n<th>曲线</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>S10</td>\n<td>对径向的、频率为 10LP/mm 的线条的解析度</td>\n</tr>\n<tr>\n<td>M10</td>\n<td>对切向的、频率为 10LP/mm 的线条的解析度</td>\n</tr>\n<tr>\n<td>S30</td>\n<td>对径向的、频率为 30LP/mm 的线条的解析度</td>\n</tr>\n<tr>\n<td>M30</td>\n<td>对切向的、频率为 30LP/mm 的线条的解析度</td>\n</tr>\n</tbody>\n</table>\n<img width=\"500\"  height=\"400\" src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h6i0hd2te1j30ly0hxglx.jpg\"/>\n<p>上图是铭匠光学发布的一款尼康Z卡口自动镜头32mm f2.8镜头的MTF曲线图。</p>\n","site":{"data":{}},"excerpt":"<h1>摄影教程</h1>\n<ol>\n<li class=\"lvl-3\">相机的模式</li>\n</ol>\n<p>普通单反相机（微单相机）一般有四种模式，分别是P模式、S模式、A模式、M模式.</p>","more":"<ul class=\"lvl-0\">\n<li class=\"lvl-2\">\n<p>P模式<br>\nP模式是可偏移程序曝光模式，属于半自动模式，程序控制曝光参数。</p>\n</li>\n<li class=\"lvl-2\">\n<p>A模式–光圈优先这是一种拍摄者可以控制拍摄景深的模式，光圈对应屏幕上的F值，F值越小说明光圈越大，景深越小，虚化效果越好，反之F值越大，光圈越小，虚化效果较差。<br>\n虚化效果适合拍摄人像，或者突出某项物体时。拍摄风光时一般让虚化尽量少，让屏幕前后的景都比较清晰。</p>\n</li>\n<li class=\"lvl-2\">\n<p>S模式–快门优先<br>\nS模式拍摄者可以控制物体的清晰度，通过高速快门凝固运动中的物体，比如体育比赛或者一辆赛车，慢速快门（1/30秒至30秒）适合夜景或者特殊技法摄影</p>\n</li>\n<li class=\"lvl-2\">\n<p>M模式–手动曝光<br>\nM模式允许拍摄者自主确定拍摄的要素，包括光圈、快门、ISO等，一般相机主拨轮控制快门速度、副拨轮控制光圈、同时按下iso和主拨轮可控制ISO感光度。一般需要用到手动曝光的包括焰火摄影（F8-16，快门速度1-2秒）、闪电摄影（F8-16,30秒）、车灯轨迹（F11-22,30秒）、星空或月亮（点测光、F8-11、ISO100）</p>\n</li>\n</ul>\n<ol start=\"2\">\n<li class=\"lvl-3\">\n<p>MTF曲线图</p>\n</li>\n</ol>\n<p>MTF（Modulation Transfer Function，调制传递函数）是分析镜头解像能力的比较科学的方法。MTF 成像曲线图是由镜头的生产厂家在极为客观严谨的测试环境下测得并对外公布的，是镜头成像品质最权威、最客观的技术参考依据。</p>\n<p>来自佳能官方的解释：</p>\n<blockquote>\n<p>实线表示拍摄从中心呈放射状纹样的成像性能，用字母 “S” 表示；虚线表示拍摄线条呈同心圆向外扩展状纹样的成像性能，用字母 “M” 表示。图中 10 线 / 毫米的曲线越接近 1（最大值），镜头的成像对比度就越好。30 线 / 毫米的曲线越接近 1，镜头分辨力就越高。“线 / 毫米” 这一单位的意思是，以 1 毫米宽度为单位，其中有多少根白黑相间的条纹。MTF 值的测试需要拍摄印有达到上述密度条纹的图表。然后测量拍摄结果进行分析得出数值。如果是变焦镜头要分别测量远摄端和广角端的 MTF 值，根据所得数值可以大概掌握镜头性能。</p>\n</blockquote>\n<img height=\"400\" style=\"margin:0 auto\" src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h6i0ts8bmxj30hs0iudgs.jpg\"/>\n<p>MTF曲线图中，横轴表示镜头中心到边缘的距离，单位是毫米。全画幅尺寸是36X24mm，对角线长度为43.2毫米，因此对于全幅镜头一般看横轴到<strong>21毫米</strong>位置。<br>\nAPSC画幅尺寸为24.9X16.6，对角线为29.2，所以一般横轴看到<strong>14毫米</strong>位置。</p>\n<p>一般镜头的MTF曲线有四条，分别是S10，M10，S30，M30，同时不同厂家会对最大光圈和最优光圈进行测评，因此一般会有10根线。</p>\n<p>S代表径向的、从圆心放射状的光线的解析力，M代表切向的、圆心的同心圆的光线的解析力。</p>\n<p>10LP/mm曲线对应的 MTF 值代表了对比度的复制率。这个值越接近于 1（100%），镜头的对比度（即锐度，边缘锐度，acutance）复制率越高。30LP/mm 的曲线对应的 MTF 值反应了镜头的分辨率（resolution）。这个值越大，说明镜头的分辨率越高。</p>\n<p>镜头的 MTF 曲线实线（S）和虚线（M）越接近越好，因为它代表成像在两个方向模糊程度均衡。这和镜头的焦外成像特性（虚化，bokeh－－这个词来自日语）也有关。径向和切向的 MTF 曲线越接近，焦外虚化的效果越好－－光斑越接近圆形。</p>\n<p>纵轴表示对应的分数，一般0.6为及格，0.8为良好，0.9位优秀。</p>\n<table>\n<thead>\n<tr>\n<th>曲线</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>S10</td>\n<td>对径向的、频率为 10LP/mm 的线条的解析度</td>\n</tr>\n<tr>\n<td>M10</td>\n<td>对切向的、频率为 10LP/mm 的线条的解析度</td>\n</tr>\n<tr>\n<td>S30</td>\n<td>对径向的、频率为 30LP/mm 的线条的解析度</td>\n</tr>\n<tr>\n<td>M30</td>\n<td>对切向的、频率为 30LP/mm 的线条的解析度</td>\n</tr>\n</tbody>\n</table>\n<img width=\"500\"  height=\"400\" src=\"http://tva1.sinaimg.cn/large/006WUTFIgy1h6i0hd2te1j30ly0hxglx.jpg\"/>\n<p>上图是铭匠光学发布的一款尼康Z卡口自动镜头32mm f2.8镜头的MTF曲线图。</p>"},{"title":"摄影教程02","date":"2022-09-25T05:28:13.000Z","_content":"","source":"_posts/2022/09/摄影教程02.md","raw":"---\ntitle: 摄影教程02\ndate: 2022-09-25 13:28:13\ntags:\n---\n","slug":"摄影教程02","published":1,"updated":"2022-09-25T05:28:13.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl8gywh3b0000i7s6cl9jdz9z","content":"","site":{"data":{}},"abbrlink":55704,"excerpt":"","more":""}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cl295h2760001j8uc323y337y","tag_id":"cl295h27c0004j8uc5n2igf62","_id":"cl295h27i000cj8uc9men3b28"},{"post_id":"cl295h27b0003j8uc51e5dhvi","tag_id":"cl295h27i000bj8ucet71ckjm","_id":"cl295h28b000jj8ucg8nm9uyu"},{"post_id":"cl295h27e0006j8uc7yk7ef0r","tag_id":"cl295h27c0004j8uc5n2igf62","_id":"cl295h28c000mj8uc3pjm09d4"},{"post_id":"cl295h27g0008j8ucgdhk1xpo","tag_id":"cl295h28c000lj8uc8gmxggd4","_id":"cl295h28d000oj8uc3eat4w45"},{"post_id":"cl295h27j000ej8uc63ztcpul","tag_id":"cl295h28c000lj8uc8gmxggd4","_id":"cl295h28g000sj8ucciym37g3"},{"post_id":"cl295h288000gj8uccbud2vjr","tag_id":"cl295h28g000rj8uc89fp4q7w","_id":"cl295h28g000tj8ucbz7q3aq6"},{"post_id":"cl2bzu0qv0000wkuchn0f8sac","tag_id":"cl295h28c000lj8uc8gmxggd4","_id":"cl2bzu0rt0001wkuceqg50aya"},{"post_id":"cl2bzu0rv0002wkuc3kiuflco","tag_id":"cl295h28c000lj8uc8gmxggd4","_id":"cl2bzuryg0004wkuc6a6x07wf"},{"post_id":"cl2j3s5ig00009cuc6vabao8o","tag_id":"cl2j3s5ja00019cuc00wbbpk4","_id":"cl2j3s5je00029cucdveod602"},{"post_id":"cl295h27h000aj8uc0rhpchy6","tag_id":"cl295h28c000lj8uc8gmxggd4","_id":"cl2j74q670000gouc7zx7abwg"},{"post_id":"cl2rkgjvz0000fws69slce5n5","tag_id":"cl295h27c0004j8uc5n2igf62","_id":"cl2rkgjw80001fws6byf99vz7"},{"post_id":"cl3lpsl1a000006s6df3f921p","tag_id":"cl3lpsykb000106s6f3thc6ig","_id":"cl3lpsyki000206s6hq6phzqm"},{"post_id":"cl3rgg3be0000eas6h0jc288p","tag_id":"cl295h27c0004j8uc5n2igf62","_id":"cl3rgg3bq0001eas65e9m8n1q"},{"post_id":"cl3swa9la0000hzs6e38v9z4a","tag_id":"cl2j3s5ja00019cuc00wbbpk4","_id":"cl3swa9lo0001hzs61rpe804a"},{"post_id":"cl45s5nlu00004gs63hzhdi3v","tag_id":"cl295h27c0004j8uc5n2igf62","_id":"cl45s5nm500014gs60hbd7wfg"},{"post_id":"cl5546f2800013xs6ei7ad0n2","tag_id":"cl295h27c0004j8uc5n2igf62","_id":"cl554ip350000qzs68mxkbdpm"},{"post_id":"cl7w11brj0000qrs6doq0e4fh","tag_id":"cl295h27c0004j8uc5n2igf62","_id":"cl7w11bru0002qrs6drlj0clp"},{"post_id":"cl7w11brq0001qrs62xoa7j86","tag_id":"cl295h27c0004j8uc5n2igf62","_id":"cl7w11bru0003qrs6402pb1j2"}],"Tag":[{"name":"essay","_id":"cl295h27c0004j8uc5n2igf62"},{"name":"java","_id":"cl295h27i000bj8ucet71ckjm"},{"name":"web","_id":"cl295h28c000lj8uc8gmxggd4"},{"name":"grid","_id":"cl295h28g000rj8uc89fp4q7w"},{"name":"通信","_id":"cl2j3s5ja00019cuc00wbbpk4"},{"name":"else","_id":"cl3lpsykb000106s6f3thc6ig"}]}}